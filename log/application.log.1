2021-04-02=11:45:17 DEBUG EntityLoader:129 - Static select for entity lesson7.domain.Account [NONE]: select account0_.id as id1_0_0_, account0_.account_owner_id as account_3_0_0_, account0_.number as number2_0_0_, client1_.id as id1_4_1_, client1_.about as about2_4_1_, client1_.email as email3_4_1_, client1_.name as name4_4_1_, client1_.passport_id as passport7_4_1_, client1_.phone as phone5_4_1_, client1_.surname as surname6_4_1_, books2_.client_id as client_i4_1_2_, books2_.id as id1_1_2_, books2_.id as id1_1_3_, books2_.author as author2_1_3_, books2_.client_id as client_i4_1_3_, books2_.subject as subject3_1_3_, passport3_.id as id1_5_4_, passport3_.number as number2_5_4_, statuses4_.client_id as client_i4_7_5_, statuses4_.id as id1_7_5_, statuses4_.id as id1_7_6_, statuses4_.alias as alias2_7_6_, statuses4_.client_id as client_i4_7_6_, statuses4_.description as descript3_7_6_ from accounts account0_ left outer join clients client1_ on account0_.account_owner_id=client1_.id left outer join books books2_ on client1_.id=books2_.client_id left outer join passports passport3_ on client1_.passport_id=passport3_.id left outer join statuses statuses4_ on client1_.id=statuses4_.client_id where account0_.id=?
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson7.domain.Client
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:3923 -  Version select: select id from clients where id =?
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select client_.id, client_.about as about2_4_, client_.email as email3_4_, client_.name as name4_4_, client_.passport_id as passport7_4_, client_.phone as phone5_4_, client_.surname as surname6_4_ from clients client_ where client_.id=?
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, passport_id, phone, surname, id) values (?, ?, ?, ?, ?, ?, ?)
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, passport_id=?, phone=?, surname=? where id=?
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into clients (about, email, name, passport_id, phone, surname) values (?, ?, ?, ?, ?, ?)
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@486bc9a4]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accounts
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3eee3e2b]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f63e3c7]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accounts.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : accounts.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accounts.number
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : books
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@421a4ee1]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1237e0be]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : books.author
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : books.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : books.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : books.subject
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e54cb33]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport.number
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : passport.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : statuses
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d96d872]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c748168]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : statuses.alias
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : statuses.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : statuses.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : statuses.description
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subjects
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@234a8f27]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b4d25e7]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : teachers
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31c2affc]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dc2de84]
2021-04-02=11:45:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:45:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:45:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson7.domain.Client)
    - Returns
       - EntityReturnImpl(entity=lesson7.domain.Client, querySpaceUid=<gen:0>, path=lesson7.domain.Client)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.accounts, querySpaceUid=<gen:1>, path=lesson7.domain.Client.accounts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Account, querySpaceUid=<gen:2>, path=lesson7.domain.Client.accounts.<elements>)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.books, querySpaceUid=<gen:3>, path=lesson7.domain.Client.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Book, querySpaceUid=<gen:4>, path=lesson7.domain.Client.books.<elements>)
          - EntityAttributeFetchImpl(entity=lesson7.domain.Passport, querySpaceUid=<gen:5>, path=lesson7.domain.Client.passport)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.statuses, querySpaceUid=<gen:6>, path=lesson7.domain.Client.statuses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Status, querySpaceUid=<gen:7>, path=lesson7.domain.Client.statuses.<elements>)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.subjects, querySpaceUid=<gen:8>, path=lesson7.domain.Client.subjects)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:9>, path=lesson7.domain.Client.subjects.<elements>)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.teachers, querySpaceUid=<gen:10>, path=lesson7.domain.Client.teachers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:11>, path=lesson7.domain.Client.teachers.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson7.domain.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(accounts)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=lesson7.domain.Client.accounts)
                - SQL table alias mapping - accounts1_
                - alias suffix - 1_
                - suffixed key columns - {account_3_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=lesson7.domain.Account)
                      - SQL table alias mapping - accounts1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(books)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=lesson7.domain.Client.books)
                - SQL table alias mapping - books2_
                - alias suffix - 3_
                - suffixed key columns - {client_i4_1_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_1_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=lesson7.domain.Book)
                      - SQL table alias mapping - books2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_1_4_}
          - JOIN (JoinDefinedByMetadata(passport)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=lesson7.domain.Passport)
                - SQL table alias mapping - passport3_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(statuses)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=lesson7.domain.Client.statuses)
                - SQL table alias mapping - statuses4_
                - alias suffix - 6_
                - suffixed key columns - {client_i4_7_6_}
                - entity-element alias suffix - 7_
                - 7_entity-element suffixed key columns - id1_7_7_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=lesson7.domain.Status)
                      - SQL table alias mapping - statuses4_
                      - alias suffix - 7_
                      - suffixed key columns - {id1_7_7_}

2021-04-02=11:45:17 DEBUG EntityLoader:129 - Static select for entity lesson7.domain.Client [NONE]: select client0_.id as id1_4_0_, client0_.about as about2_4_0_, client0_.email as email3_4_0_, client0_.name as name4_4_0_, client0_.passport_id as passport7_4_0_, client0_.phone as phone5_4_0_, client0_.surname as surname6_4_0_, accounts1_.account_owner_id as account_3_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.account_owner_id as account_3_0_2_, accounts1_.number as number2_0_2_, books2_.client_id as client_i4_1_3_, books2_.id as id1_1_3_, books2_.id as id1_1_4_, books2_.author as author2_1_4_, books2_.client_id as client_i4_1_4_, books2_.subject as subject3_1_4_, passport3_.id as id1_5_5_, passport3_.number as number2_5_5_, statuses4_.client_id as client_i4_7_6_, statuses4_.id as id1_7_6_, statuses4_.id as id1_7_7_, statuses4_.alias as alias2_7_7_, statuses4_.client_id as client_i4_7_7_, statuses4_.description as descript3_7_7_ from clients client0_ left outer join accounts accounts1_ on client0_.id=accounts1_.account_owner_id left outer join books books2_ on client0_.id=books2_.client_id left outer join passports passport3_ on client0_.passport_id=passport3_.id left outer join statuses statuses4_ on client0_.id=statuses4_.client_id where client0_.id=?
2021-04-02=11:45:17 DEBUG Loader:106 - Static select for entity lesson7.domain.Client [NONE]: select client0_.id as id1_4_4_, client0_.about as about2_4_4_, client0_.email as email3_4_4_, client0_.name as name4_4_4_, client0_.passport_id as passport7_4_4_, client0_.phone as phone5_4_4_, client0_.surname as surname6_4_4_, accounts1_.account_owner_id as account_3_0_6_, accounts1_.id as id1_0_6_, accounts1_.id as id1_0_0_, accounts1_.account_owner_id as account_3_0_0_, accounts1_.number as number2_0_0_, books2_.client_id as client_i4_1_7_, books2_.id as id1_1_7_, books2_.id as id1_1_1_, books2_.author as author2_1_1_, books2_.client_id as client_i4_1_1_, books2_.subject as subject3_1_1_, passport3_.id as id1_5_2_, passport3_.number as number2_5_2_, statuses4_.client_id as client_i4_7_8_, statuses4_.id as id1_7_8_, statuses4_.id as id1_7_3_, statuses4_.alias as alias2_7_3_, statuses4_.client_id as client_i4_7_3_, statuses4_.description as descript3_7_3_ from clients client0_ left outer join accounts accounts1_ on client0_.id=accounts1_.account_owner_id left outer join books books2_ on client0_.id=books2_.client_id left outer join passports passport3_ on client0_.passport_id=passport3_.id left outer join statuses statuses4_ on client0_.id=statuses4_.client_id where client0_.passport_id=?
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson7.domain.Status
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:3923 -  Version select: select id from statuses where id =?
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select status_.id, status_.alias as alias2_7_, status_.client_id as client_i4_7_, status_.description as descript3_7_ from statuses status_ where status_.id=?
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, client_id, description, id) values (?, ?, ?, ?)
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, client_id=?, description=? where id=?
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into statuses (alias, client_id, description) values (?, ?, ?)
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7e336b]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e1218b4]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.about
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.accounts
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c6e0f32]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f3f0fae]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.accounts.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.accounts.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.accounts.number
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63fdffcd]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7428de63]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books.author
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.books.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books.subject
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.email
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.name
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.passport
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46678e49]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.passport.number
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.passport.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.passport.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.phone
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.statuses
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.statuses
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.subjects
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2063c53e]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a9bc08f]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.surname
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.teachers
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50f40653]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50a3d0f6]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=11:45:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:45:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:45:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson7.domain.Status)
    - Returns
       - EntityReturnImpl(entity=lesson7.domain.Status, querySpaceUid=<gen:0>, path=lesson7.domain.Status)
          - EntityAttributeFetchImpl(entity=lesson7.domain.Client, querySpaceUid=<gen:1>, path=lesson7.domain.Status.client)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.accounts, querySpaceUid=<gen:2>, path=lesson7.domain.Status.client.accounts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Account, querySpaceUid=<gen:3>, path=lesson7.domain.Status.client.accounts.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.books, querySpaceUid=<gen:4>, path=lesson7.domain.Status.client.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Book, querySpaceUid=<gen:5>, path=lesson7.domain.Status.client.books.<elements>)
             - EntityAttributeFetchImpl(entity=lesson7.domain.Passport, querySpaceUid=<gen:6>, path=lesson7.domain.Status.client.passport)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.subjects, querySpaceUid=<gen:7>, path=lesson7.domain.Status.client.subjects)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:8>, path=lesson7.domain.Status.client.subjects.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.teachers, querySpaceUid=<gen:9>, path=lesson7.domain.Status.client.teachers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:10>, path=lesson7.domain.Status.client.teachers.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson7.domain.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(accounts)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=lesson7.domain.Client.accounts)
                      - SQL table alias mapping - accounts2_
                      - alias suffix - 2_
                      - suffixed key columns - {account_3_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=lesson7.domain.Account)
                            - SQL table alias mapping - accounts2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                - JOIN (JoinDefinedByMetadata(books)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=lesson7.domain.Client.books)
                      - SQL table alias mapping - books3_
                      - alias suffix - 4_
                      - suffixed key columns - {client_i4_1_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_1_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=lesson7.domain.Book)
                            - SQL table alias mapping - books3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_1_5_}
                - JOIN (JoinDefinedByMetadata(passport)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=lesson7.domain.Passport)
                      - SQL table alias mapping - passport4_
                      - alias suffix - 6_
                      - suffixed key columns - {id1_5_6_}

2021-04-02=11:45:17 DEBUG EntityLoader:129 - Static select for entity lesson7.domain.Status [NONE]: select status0_.id as id1_7_0_, status0_.alias as alias2_7_0_, status0_.client_id as client_i4_7_0_, status0_.description as descript3_7_0_, client1_.id as id1_4_1_, client1_.about as about2_4_1_, client1_.email as email3_4_1_, client1_.name as name4_4_1_, client1_.passport_id as passport7_4_1_, client1_.phone as phone5_4_1_, client1_.surname as surname6_4_1_, accounts2_.account_owner_id as account_3_0_2_, accounts2_.id as id1_0_2_, accounts2_.id as id1_0_3_, accounts2_.account_owner_id as account_3_0_3_, accounts2_.number as number2_0_3_, books3_.client_id as client_i4_1_4_, books3_.id as id1_1_4_, books3_.id as id1_1_5_, books3_.author as author2_1_5_, books3_.client_id as client_i4_1_5_, books3_.subject as subject3_1_5_, passport4_.id as id1_5_6_, passport4_.number as number2_5_6_ from statuses status0_ left outer join clients client1_ on status0_.client_id=client1_.id left outer join accounts accounts2_ on client1_.id=accounts2_.account_owner_id left outer join books books3_ on client1_.id=books3_.client_id left outer join passports passport4_ on client1_.passport_id=passport4_.id where status0_.id=?
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson7.domain.Teacher
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:3923 -  Version select: select id from teachers where id =?
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select teacher_.id, teacher_.name as name2_11_, teacher_.surname as surname3_11_ from teachers teacher_ where teacher_.id=?
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into teachers (name, surname, id) values (?, ?, ?)
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:394 -  Update 0: update teachers set name=?, surname=? where id=?
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from teachers where id=?
2021-04-02=11:45:17 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into teachers (name, surname) values (?, ?)
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e57b5e9]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clients
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a0ac48e]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24e08d59]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : runks
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77cb9cd1]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@971e903]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subjects
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35636217]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1549bba7]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2021-04-02=11:45:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:45:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:45:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson7.domain.Teacher)
    - Returns
       - EntityReturnImpl(entity=lesson7.domain.Teacher, querySpaceUid=<gen:0>, path=lesson7.domain.Teacher)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.clients, querySpaceUid=<gen:1>, path=lesson7.domain.Teacher.clients)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Client, querySpaceUid=<gen:2>, path=lesson7.domain.Teacher.clients.<elements>)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.runks, querySpaceUid=<gen:3>, path=lesson7.domain.Teacher.runks)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Runk, querySpaceUid=<gen:4>, path=lesson7.domain.Teacher.runks.<elements>)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.subjects, querySpaceUid=<gen:5>, path=lesson7.domain.Teacher.subjects)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:6>, path=lesson7.domain.Teacher.subjects.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson7.domain.Teacher)
          - SQL table alias mapping - teacher0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

2021-04-02=11:45:17 DEBUG EntityLoader:129 - Static select for entity lesson7.domain.Teacher [NONE]: select teacher0_.id as id1_11_0_, teacher0_.name as name2_11_0_, teacher0_.surname as surname3_11_0_ from teachers teacher0_ where teacher0_.id=?
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bb35cc6]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203c20cf]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subject
2021-04-02=11:45:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:45:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:45:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Client.books)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Client.books, querySpaceUid=<gen:0>, path=[lesson7.domain.Client.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Book, querySpaceUid=<gen:1>, path=[lesson7.domain.Client.books].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Client.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {client_i4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2021-04-02=11:45:17 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Client.books: select books0_.client_id as client_i4_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author as author2_1_1_, books0_.client_id as client_i4_1_1_, books0_.subject as subject3_1_1_ from books books0_ where books0_.client_id=?
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62b969c4]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dcc6211]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clients
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : clients
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : runks
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@610df783]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f3fcd59]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subjects
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b56f5f8]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79d743e6]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2021-04-02=11:45:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:45:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:45:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Client.teachers)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Client.teachers, querySpaceUid=<gen:0>, path=[lesson7.domain.Client.teachers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:1>, path=[lesson7.domain.Client.teachers].<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.runks, querySpaceUid=<gen:2>, path=[lesson7.domain.Client.teachers].<elements>.runks)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Runk, querySpaceUid=<gen:3>, path=[lesson7.domain.Client.teachers].<elements>.runks.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.subjects, querySpaceUid=<gen:4>, path=[lesson7.domain.Client.teachers].<elements>.subjects)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:5>, path=[lesson7.domain.Client.teachers].<elements>.subjects.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Client.teachers)
          - SQL table alias mapping - teachers0_
          - alias suffix - 0_
          - suffixed key columns - {client_i1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Teacher)
                - SQL table alias mapping - teacher1_
                - alias suffix - 1_
                - suffixed key columns - {id1_11_1_}

2021-04-02=11:45:17 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Client.teachers: select teachers0_.client_id as client_i1_3_0_, teachers0_.teacher_id as teacher_2_3_0_, teacher1_.id as id1_11_1_, teacher1_.name as name2_11_1_, teacher1_.surname as surname3_11_1_ from client_teacher teachers0_ inner join teachers teacher1_ on teachers0_.teacher_id=teacher1_.id where teachers0_.client_id=?
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ee8dcd3]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a20b94b]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clients
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cd59ef5]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33b082c5]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : teachers
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : teachers
2021-04-02=11:45:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:45:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:45:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Teacher.subjects)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Teacher.subjects, querySpaceUid=<gen:0>, path=[lesson7.domain.Teacher.subjects])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:1>, path=[lesson7.domain.Teacher.subjects].<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Subject.clients, querySpaceUid=<gen:2>, path=[lesson7.domain.Teacher.subjects].<elements>.clients)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Client, querySpaceUid=<gen:3>, path=[lesson7.domain.Teacher.subjects].<elements>.clients.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Teacher.subjects)
          - SQL table alias mapping - subjects0_
          - alias suffix - 0_
          - suffixed key columns - {teacher_2_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_9_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Subject)
                - SQL table alias mapping - subject1_
                - alias suffix - 1_
                - suffixed key columns - {id1_9_1_}

2021-04-02=11:45:17 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Teacher.subjects: select subjects0_.teacher_id as teacher_2_8_0_, subjects0_.subject_id as subject_1_8_0_, subject1_.id as id1_9_1_, subject1_.description as descript2_9_1_, subject1_.name as name3_9_1_ from subject_teacher subjects0_ inner join subjects subject1_ on subjects0_.subject_id=subject1_.id where subjects0_.teacher_id=?
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16073fa8]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cc9cfb2]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=11:45:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:45:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:45:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Client.statuses)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Client.statuses, querySpaceUid=<gen:0>, path=[lesson7.domain.Client.statuses])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Status, querySpaceUid=<gen:1>, path=[lesson7.domain.Client.statuses].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Client.statuses)
          - SQL table alias mapping - statuses0_
          - alias suffix - 0_
          - suffixed key columns - {client_i4_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_7_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Status)
                - SQL table alias mapping - statuses0_
                - alias suffix - 1_
                - suffixed key columns - {id1_7_1_}

2021-04-02=11:45:17 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Client.statuses: select statuses0_.client_id as client_i4_7_0_, statuses0_.id as id1_7_0_, statuses0_.id as id1_7_1_, statuses0_.alias as alias2_7_1_, statuses0_.client_id as client_i4_7_1_, statuses0_.description as descript3_7_1_ from statuses statuses0_ where statuses0_.client_id=?
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14bf57b2]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46d9aec8]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clients
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17740dae]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c504e66]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : runks
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : runks
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subjects
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@345cf395]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bc4d5e1]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2021-04-02=11:45:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:45:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:45:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Runk.teachers)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Runk.teachers, querySpaceUid=<gen:0>, path=[lesson7.domain.Runk.teachers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:1>, path=[lesson7.domain.Runk.teachers].<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.clients, querySpaceUid=<gen:2>, path=[lesson7.domain.Runk.teachers].<elements>.clients)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Client, querySpaceUid=<gen:3>, path=[lesson7.domain.Runk.teachers].<elements>.clients.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.subjects, querySpaceUid=<gen:4>, path=[lesson7.domain.Runk.teachers].<elements>.subjects)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:5>, path=[lesson7.domain.Runk.teachers].<elements>.subjects.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Runk.teachers)
          - SQL table alias mapping - teachers0_
          - alias suffix - 0_
          - suffixed key columns - {runk_id2_10_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Teacher)
                - SQL table alias mapping - teacher1_
                - alias suffix - 1_
                - suffixed key columns - {id1_11_1_}

2021-04-02=11:45:17 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Runk.teachers: select teachers0_.runk_id as runk_id2_10_0_, teachers0_.teacher_id as teacher_1_10_0_, teacher1_.id as id1_11_1_, teacher1_.name as name2_11_1_, teacher1_.surname as surname3_11_1_ from teacher_runk teachers0_ inner join teachers teacher1_ on teachers0_.teacher_id=teacher1_.id where teachers0_.runk_id=?
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c6aa04a]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2257fadf]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clients
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : clients
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : teachers
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35835e65]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@289fdb08]
2021-04-02=11:45:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:45:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:45:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Client.subjects)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Client.subjects, querySpaceUid=<gen:0>, path=[lesson7.domain.Client.subjects])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:1>, path=[lesson7.domain.Client.subjects].<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Subject.teachers, querySpaceUid=<gen:2>, path=[lesson7.domain.Client.subjects].<elements>.teachers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:3>, path=[lesson7.domain.Client.subjects].<elements>.teachers.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Client.subjects)
          - SQL table alias mapping - subjects0_
          - alias suffix - 0_
          - suffixed key columns - {client_i1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_9_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Subject)
                - SQL table alias mapping - subject1_
                - alias suffix - 1_
                - suffixed key columns - {id1_9_1_}

2021-04-02=11:45:17 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Client.subjects: select subjects0_.client_id as client_i1_2_0_, subjects0_.subject_id as subject_2_2_0_, subject1_.id as id1_9_1_, subject1_.description as descript2_9_1_, subject1_.name as name3_9_1_ from client_subject subjects0_ inner join subjects subject1_ on subjects0_.subject_id=subject1_.id where subjects0_.client_id=?
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a231dfd]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30814f43]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accounts
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b61a019]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11a00961]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : books
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ce9e05a]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4992613f]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fd5717c]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport.number
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : passport.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : statuses
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d774249]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17b64941]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subjects
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : subjects
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : teachers
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53ac845a]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5136207f]
2021-04-02=11:45:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:45:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:45:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Subject.clients)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Subject.clients, querySpaceUid=<gen:0>, path=[lesson7.domain.Subject.clients])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Client, querySpaceUid=<gen:1>, path=[lesson7.domain.Subject.clients].<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.accounts, querySpaceUid=<gen:2>, path=[lesson7.domain.Subject.clients].<elements>.accounts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Account, querySpaceUid=<gen:3>, path=[lesson7.domain.Subject.clients].<elements>.accounts.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.books, querySpaceUid=<gen:4>, path=[lesson7.domain.Subject.clients].<elements>.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Book, querySpaceUid=<gen:5>, path=[lesson7.domain.Subject.clients].<elements>.books.<elements>)
             - EntityAttributeFetchImpl(entity=lesson7.domain.Passport, querySpaceUid=<gen:6>, path=[lesson7.domain.Subject.clients].<elements>.passport)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.statuses, querySpaceUid=<gen:7>, path=[lesson7.domain.Subject.clients].<elements>.statuses)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Status, querySpaceUid=<gen:8>, path=[lesson7.domain.Subject.clients].<elements>.statuses.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.teachers, querySpaceUid=<gen:9>, path=[lesson7.domain.Subject.clients].<elements>.teachers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:10>, path=[lesson7.domain.Subject.clients].<elements>.teachers.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Subject.clients)
          - SQL table alias mapping - clients0_
          - alias suffix - 0_
          - suffixed key columns - {subject_2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(passport)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=lesson7.domain.Passport)
                      - SQL table alias mapping - passport2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}

2021-04-02=11:45:17 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Subject.clients: select clients0_.subject_id as subject_2_2_0_, clients0_.client_id as client_i1_2_0_, client1_.id as id1_4_1_, client1_.about as about2_4_1_, client1_.email as email3_4_1_, client1_.name as name4_4_1_, client1_.passport_id as passport7_4_1_, client1_.phone as phone5_4_1_, client1_.surname as surname6_4_1_, passport2_.id as id1_5_2_, passport2_.number as number2_5_2_ from client_subject clients0_ inner join clients client1_ on clients0_.client_id=client1_.id left outer join passports passport2_ on client1_.passport_id=passport2_.id where clients0_.subject_id=?
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@26a4551a]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fdecce]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=11:45:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:45:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:45:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Client.accounts)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Client.accounts, querySpaceUid=<gen:0>, path=[lesson7.domain.Client.accounts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Account, querySpaceUid=<gen:1>, path=[lesson7.domain.Client.accounts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Client.accounts)
          - SQL table alias mapping - accounts0_
          - alias suffix - 0_
          - suffixed key columns - {account_3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Account)
                - SQL table alias mapping - accounts0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2021-04-02=11:45:17 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Client.accounts: select accounts0_.account_owner_id as account_3_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.account_owner_id as account_3_0_1_, accounts0_.number as number2_0_1_ from accounts accounts0_ where accounts0_.account_owner_id=?
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cee53dc]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@290aeb20]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clients
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2764c546]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59496961]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : runks
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@408b87aa]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b08632]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subjects
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : subjects
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2021-04-02=11:45:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:45:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:45:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Subject.teachers)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Subject.teachers, querySpaceUid=<gen:0>, path=[lesson7.domain.Subject.teachers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:1>, path=[lesson7.domain.Subject.teachers].<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.clients, querySpaceUid=<gen:2>, path=[lesson7.domain.Subject.teachers].<elements>.clients)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Client, querySpaceUid=<gen:3>, path=[lesson7.domain.Subject.teachers].<elements>.clients.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.runks, querySpaceUid=<gen:4>, path=[lesson7.domain.Subject.teachers].<elements>.runks)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Runk, querySpaceUid=<gen:5>, path=[lesson7.domain.Subject.teachers].<elements>.runks.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Subject.teachers)
          - SQL table alias mapping - teachers0_
          - alias suffix - 0_
          - suffixed key columns - {subject_1_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Teacher)
                - SQL table alias mapping - teacher1_
                - alias suffix - 1_
                - suffixed key columns - {id1_11_1_}

2021-04-02=11:45:17 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Subject.teachers: select teachers0_.subject_id as subject_1_8_0_, teachers0_.teacher_id as teacher_2_8_0_, teacher1_.id as id1_11_1_, teacher1_.name as name2_11_1_, teacher1_.surname as surname3_11_1_ from subject_teacher teachers0_ inner join teachers teacher1_ on teachers0_.teacher_id=teacher1_.id where teachers0_.subject_id=?
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@787f32b7]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aef4eb8]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accounts
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a52ca2e]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ad8df52]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : books
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45d6ef73]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f29e26]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f6d27cc]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport.number
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : passport.client
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : statuses
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@314c8b4a]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26d820eb]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subjects
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@507d20bb]
2021-04-02=11:45:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9fec931]
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : teachers
2021-04-02=11:45:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : teachers
2021-04-02=11:45:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:45:18 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:45:18 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Teacher.clients)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Teacher.clients, querySpaceUid=<gen:0>, path=[lesson7.domain.Teacher.clients])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Client, querySpaceUid=<gen:1>, path=[lesson7.domain.Teacher.clients].<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.accounts, querySpaceUid=<gen:2>, path=[lesson7.domain.Teacher.clients].<elements>.accounts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Account, querySpaceUid=<gen:3>, path=[lesson7.domain.Teacher.clients].<elements>.accounts.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.books, querySpaceUid=<gen:4>, path=[lesson7.domain.Teacher.clients].<elements>.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Book, querySpaceUid=<gen:5>, path=[lesson7.domain.Teacher.clients].<elements>.books.<elements>)
             - EntityAttributeFetchImpl(entity=lesson7.domain.Passport, querySpaceUid=<gen:6>, path=[lesson7.domain.Teacher.clients].<elements>.passport)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.statuses, querySpaceUid=<gen:7>, path=[lesson7.domain.Teacher.clients].<elements>.statuses)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Status, querySpaceUid=<gen:8>, path=[lesson7.domain.Teacher.clients].<elements>.statuses.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.subjects, querySpaceUid=<gen:9>, path=[lesson7.domain.Teacher.clients].<elements>.subjects)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:10>, path=[lesson7.domain.Teacher.clients].<elements>.subjects.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Teacher.clients)
          - SQL table alias mapping - clients0_
          - alias suffix - 0_
          - suffixed key columns - {teacher_2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(passport)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=lesson7.domain.Passport)
                      - SQL table alias mapping - passport2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}

2021-04-02=11:45:18 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Teacher.clients: select clients0_.teacher_id as teacher_2_3_0_, clients0_.client_id as client_i1_3_0_, client1_.id as id1_4_1_, client1_.about as about2_4_1_, client1_.email as email3_4_1_, client1_.name as name4_4_1_, client1_.passport_id as passport7_4_1_, client1_.phone as phone5_4_1_, client1_.surname as surname6_4_1_, passport2_.id as id1_5_2_, passport2_.number as number2_5_2_ from client_teacher clients0_ inner join clients client1_ on clients0_.client_id=client1_.id left outer join passports passport2_ on client1_.passport_id=passport2_.id where clients0_.teacher_id=?
2021-04-02=11:45:18 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cbd159f]
2021-04-02=11:45:18 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b05a99b]
2021-04-02=11:45:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=11:45:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : teachers
2021-04-02=11:45:18 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : teachers
2021-04-02=11:45:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:45:18 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:45:18 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Teacher.runks)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Teacher.runks, querySpaceUid=<gen:0>, path=[lesson7.domain.Teacher.runks])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Runk, querySpaceUid=<gen:1>, path=[lesson7.domain.Teacher.runks].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Teacher.runks)
          - SQL table alias mapping - runks0_
          - alias suffix - 0_
          - suffixed key columns - {teacher_1_10_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Runk)
                - SQL table alias mapping - runk1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}

2021-04-02=11:45:18 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Teacher.runks: select runks0_.teacher_id as teacher_1_10_0_, runks0_.runk_id as runk_id2_10_0_, runk1_.id as id1_6_1_, runk1_.alias as alias2_6_1_ from teacher_runk runks0_ inner join runks runk1_ on runks0_.runk_id=runk1_.id where runks0_.teacher_id=?
2021-04-02=11:45:18 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7a1f8def] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-02=11:45:18 DEBUG Table:520 - No alter strings for table : accounts
2021-04-02=11:45:18 DEBUG Table:520 - No alter strings for table : books
2021-04-02=11:45:18 DEBUG Table:520 - No alter strings for table : client_subject
2021-04-02=11:45:18 DEBUG Table:520 - No alter strings for table : client_teacher
2021-04-02=11:45:18 DEBUG Table:520 - No alter strings for table : clients
2021-04-02=11:45:18 DEBUG Table:520 - No alter strings for table : passports
2021-04-02=11:45:18 DEBUG Table:520 - No alter strings for table : runks
2021-04-02=11:45:18 DEBUG Table:520 - No alter strings for table : statuses
2021-04-02=11:45:18 DEBUG Table:520 - No alter strings for table : subject_teacher
2021-04-02=11:45:18 DEBUG Table:520 - No alter strings for table : subjects
2021-04-02=11:45:18 DEBUG Table:520 - No alter strings for table : teacher_runk
2021-04-02=11:45:18 DEBUG Table:520 - No alter strings for table : teachers
2021-04-02=11:45:19 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-02=11:45:19 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-02=11:45:19 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=11:45:19 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=11:45:19 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-02=11:45:19 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-02=11:45:19 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@100c567f
2021-04-02=11:45:19 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 5979136d-ab16-4feb-99f7-a0d7f1ab436a (<unnamed>)
2021-04-02=11:45:19 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-02=11:45:20 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-02=11:45:20 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-02=11:45:20 DEBUG TransactionImpl:81 - begin
2021-04-02=11:45:20 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-04-02=11:45:20 DEBUG SQL:144 - insert into clients (about, email, name, passport_id, phone, surname) values (?, ?, ?, ?, ?, ?)
2021-04-02=11:45:20 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ОШИБКА: повторяющееся значение ключа нарушает ограничение уникальности "uk_srv16ica2c1csub334bxjjb59"
  Подробности: Ключ "(email)=(maria@mail.com)" уже существует.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3195)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3801)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:194)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:179)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:636)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:629)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:624)
	at lesson7.Main.main(Main.java:71)
2021-04-02=11:45:20 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 23505
2021-04-02=11:45:20 ERROR SqlExceptionHelper:142 - ОШИБКА: повторяющееся значение ключа нарушает ограничение уникальности "uk_srv16ica2c1csub334bxjjb59"
  Подробности: Ключ "(email)=(maria@mail.com)" уже существует.


2021-04-02=11:50:24 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02=11:50:24 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=11:50:24 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=11:50:24 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=11:50:25 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.29.Final
2021-04-02=11:50:25 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-02=11:50:25 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02=11:50:25 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02=11:50:25 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02=11:50:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=11:50:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=11:50:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=11:50:26 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02=11:50:26 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02=11:50:26 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02=11:50:26 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02=11:50:26 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@f381794
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@f381794
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@f381794
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e1d27ba
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@524d6d96
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4ef37659
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@306cf3ea
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@306cf3ea
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@306cf3ea
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@52102734
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@52102734
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52102734
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@2892dae4
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@2892dae4
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2892dae4
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@5fa07e12
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@5fa07e12
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5fa07e12
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1649b0e6
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1649b0e6
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1649b0e6
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@503d687a
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@503d687a
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@503d687a
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@51f116b8
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@51f116b8
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51f116b8
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@26275bef
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@26275bef
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@61386958
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@61386958
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@68c72235
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@68c72235
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@34f7cfd9
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e6ef8ad
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@62230c58
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62230c58
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@378542de
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@378542de
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@cad498c
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@cad498c
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5ace1ed4
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5ace1ed4
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@693fe6c9
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@693fe6c9
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1a4013
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1a4013
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@49912c99
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@49912c99
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5f9b2141
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5f9b2141
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@446293d
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@446293d
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@4de4b452
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4de4b452
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@7ea9e1e2
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7ea9e1e2
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4d02f94e
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4d02f94e
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4d02f94e
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2053d869
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@3c73951
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3c73951
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3c73951
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@73700b80
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4a7f959b
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@63a12c68
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@63a12c68
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@6d4e5011
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d4e5011
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@fba92d3
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@fba92d3
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@16a0ee18
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@16a0ee18
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@bd4dc25
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@bd4dc25
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3bf9ce3e
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@53fdffa1
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@53fdffa1
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@53fdffa1
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3232a28a
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3232a28a
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3232a28a
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@6da21078
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@56cdfb3b
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@35aea049
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35aea049
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@35aea049
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b6ddd1d
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b6ddd1d
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b6ddd1d
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@1da2cb77
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@a530d0a
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@66d3eec0
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@66d3eec0
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@18d87d80
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@25fb8912
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@25fb8912
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@74751b3
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@74751b3
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@52af26ee
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@bae7dc0
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@43dac38f
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2805d709
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2805d709
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3a44431a
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3c7f66c4
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@194bcebf
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@17497425
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f0da945
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4803b726
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ffaa6af
2021-04-02=11:50:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53ce1329
2021-04-02=11:50:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02=11:50:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02=11:50:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=11:50:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=11:50:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02=11:50:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02=11:50:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02=11:50:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=11:50:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02=11:50:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02=11:50:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02=11:50:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02=11:50:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=11:50:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02=11:50:28 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02=11:50:28 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02=11:50:28 INFO  pooling:121 - HHH10001001: Connection properties: {user=postgres, password=postgres}
2021-04-02=11:50:28 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02=11:50:28 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02=11:50:28 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 1 (min=1)
2021-04-02=11:50:31 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-02=11:50:31 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-02=11:50:31 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-02=11:50:31 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02=11:50:31 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-02=11:50:31 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-02=11:50:31 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@613a8ee1
2021-04-02=11:50:31 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@613a8ee1
2021-04-02=11:50:31 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@bd4dc25
2021-04-02=11:50:31 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c5529ab] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@39a8312f]
2021-04-02=11:50:32 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson7.domain.Client
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:50:32 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-02=11:50:32 DEBUG EntityBinder:873 - Bind entity lesson7.domain.Client on table clients
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson7.domain.Client] is safe
2021-04-02=11:50:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson7.domain.Client
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Client:id]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:50:32 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Client:about]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property about
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=accounts, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=accounts_KEY, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='accounts_KEY', referencedColumn='null', mappedBy='null'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2021-04-02=11:50:32 DEBUG CollectionBinder:449 - Collection role: lesson7.domain.Client.accounts
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property accounts
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=books, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2021-04-02=11:50:32 DEBUG CollectionBinder:449 - Collection role: lesson7.domain.Client.books
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property books
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Client:email]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property email
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Client:name]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property name
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='passport_id', referencedColumn='', mappedBy=''}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=passport, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property passport
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Client:phone]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property phone
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=statuses, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=statuses_KEY, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='statuses_KEY', referencedColumn='null', mappedBy='null'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2021-04-02=11:50:32 DEBUG CollectionBinder:449 - Collection role: lesson7.domain.Client.statuses
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property statuses
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=subjects_KEY, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='subjects_KEY', referencedColumn='null', mappedBy='null'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='subject_id', referencedColumn='', mappedBy=''}
2021-04-02=11:50:32 DEBUG CollectionBinder:449 - Collection role: lesson7.domain.Client.subjects
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property subjects
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Client:surname]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for surname
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property surname
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=teachers_KEY, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='teachers_KEY', referencedColumn='null', mappedBy='null'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='teacher_id', referencedColumn='', mappedBy=''}
2021-04-02=11:50:32 DEBUG CollectionBinder:449 - Collection role: lesson7.domain.Client.teachers
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property teachers
2021-04-02=11:50:32 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson7.domain.Book
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:50:32 DEBUG EntityBinder:430 - Import with entity name Book
2021-04-02=11:50:32 DEBUG EntityBinder:873 - Bind entity lesson7.domain.Book on table books
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(books), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson7.domain.Book] is safe
2021-04-02=11:50:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson7.domain.Book
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Book:id]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:50:32 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(books), mappingColumn=author, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property author with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Book:author]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for author
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property author
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(books), mappingColumn=client, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property client
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(books), mappingColumn=subject, insertable=true, updatable=true, unique=true}
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property subject with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Book:subject]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for subject
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property subject
2021-04-02=11:50:32 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson7.domain.Subject
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:50:32 DEBUG EntityBinder:430 - Import with entity name Subject
2021-04-02=11:50:32 DEBUG EntityBinder:873 - Bind entity lesson7.domain.Subject on table subjects
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subjects), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson7.domain.Subject] is safe
2021-04-02=11:50:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson7.domain.Subject
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Subject:id]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:50:32 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subjects), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subjects), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subjects), mappingColumn=clients_KEY, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='clients_KEY', referencedColumn='null', mappedBy='null'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='subjects'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='subjects'}
2021-04-02=11:50:32 DEBUG CollectionBinder:449 - Collection role: lesson7.domain.Subject.clients
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property clients
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subjects), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Subject:description]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property description
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subjects), mappingColumn=name, insertable=true, updatable=true, unique=true}
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Subject:name]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property name
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subjects), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subjects), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subjects), mappingColumn=teachers_KEY, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='teachers_KEY', referencedColumn='null', mappedBy='null'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='subject_id', referencedColumn='', mappedBy=''}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='teacher_id', referencedColumn='', mappedBy=''}
2021-04-02=11:50:32 DEBUG CollectionBinder:449 - Collection role: lesson7.domain.Subject.teachers
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property teachers
2021-04-02=11:50:32 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson7.domain.Passport
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:50:32 DEBUG EntityBinder:430 - Import with entity name Passport
2021-04-02=11:50:32 DEBUG EntityBinder:873 - Bind entity lesson7.domain.Passport on table passports
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(passports), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson7.domain.Passport] is safe
2021-04-02=11:50:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson7.domain.Passport
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Passport:id]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:50:32 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='passport'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(passports), mappingColumn=client, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(passports), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Passport:number]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property number
2021-04-02=11:50:32 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson7.domain.Teacher
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:50:32 DEBUG EntityBinder:430 - Import with entity name Teacher
2021-04-02=11:50:32 DEBUG EntityBinder:873 - Bind entity lesson7.domain.Teacher on table teachers
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teachers), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson7.domain.Teacher] is safe
2021-04-02=11:50:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson7.domain.Teacher
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Teacher:id]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:50:32 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teachers), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teachers), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teachers), mappingColumn=clients_KEY, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='clients_KEY', referencedColumn='null', mappedBy='null'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teachers'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teachers'}
2021-04-02=11:50:32 DEBUG CollectionBinder:449 - Collection role: lesson7.domain.Teacher.clients
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property clients
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teachers), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Teacher:name]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property name
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teachers), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teachers), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teachers), mappingColumn=runks_KEY, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='runks_KEY', referencedColumn='null', mappedBy='null'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='teacher_id', referencedColumn='', mappedBy=''}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='runk_id', referencedColumn='', mappedBy=''}
2021-04-02=11:50:32 DEBUG CollectionBinder:449 - Collection role: lesson7.domain.Teacher.runks
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property runks
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teachers), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teachers), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teachers), mappingColumn=subjects_KEY, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='subjects_KEY', referencedColumn='null', mappedBy='null'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teachers'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teachers'}
2021-04-02=11:50:32 DEBUG CollectionBinder:449 - Collection role: lesson7.domain.Teacher.subjects
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property subjects
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teachers), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Teacher:surname]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for surname
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property surname
2021-04-02=11:50:32 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson7.domain.Runk
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:50:32 DEBUG EntityBinder:430 - Import with entity name Runk
2021-04-02=11:50:32 DEBUG EntityBinder:873 - Bind entity lesson7.domain.Runk on table runks
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(runks), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson7.domain.Runk] is safe
2021-04-02=11:50:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson7.domain.Runk
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Runk:id]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:50:32 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(runks), mappingColumn=alias, insertable=true, updatable=true, unique=true}
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Runk:alias]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property alias
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(runks), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(runks), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(runks), mappingColumn=teachers_KEY, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='teachers_KEY', referencedColumn='null', mappedBy='null'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='runks'}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='runks'}
2021-04-02=11:50:32 DEBUG CollectionBinder:449 - Collection role: lesson7.domain.Runk.teachers
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property teachers
2021-04-02=11:50:32 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson7.domain.Status
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:50:32 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-02=11:50:32 DEBUG EntityBinder:873 - Bind entity lesson7.domain.Status on table statuses
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson7.domain.Status] is safe
2021-04-02=11:50:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson7.domain.Status
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Status:id]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:50:32 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=true}
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Status:alias]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property alias
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=client, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property client
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Status:description]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property description
2021-04-02=11:50:32 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson7.domain.Account
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:50:32 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-02=11:50:32 DEBUG EntityBinder:873 - Bind entity lesson7.domain.Account on table accounts
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson7.domain.Account] is safe
2021-04-02=11:50:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson7.domain.Account
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Account:id]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:50:32 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='account_owner_id', referencedColumn='', mappedBy=''}
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property client
2021-04-02=11:50:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02=11:50:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02=11:50:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson7.domain.Account:number]
2021-04-02=11:50:32 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property number
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for surname
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for author
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for subject
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for surname
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:50:32 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-02=11:50:32 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-02=11:50:32 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [books]
2021-04-02=11:50:32 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [subjects]
2021-04-02=11:50:32 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [passports]
2021-04-02=11:50:32 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [teachers]
2021-04-02=11:50:32 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [runks]
2021-04-02=11:50:32 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-02=11:50:32 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-02=11:50:32 DEBUG CollectionSecondPass:50 - Second pass for collection: lesson7.domain.Teacher.runks
2021-04-02=11:50:32 DEBUG CollectionBinder:1338 - Binding as ManyToMany: lesson7.domain.Teacher.runks
2021-04-02=11:50:32 DEBUG PrimaryKey:35 - Forcing column [teacher_id] to be non-null as it is part of the primary key for table [teacher_runk]
2021-04-02=11:50:32 DEBUG PrimaryKey:35 - Forcing column [runk_id] to be non-null as it is part of the primary key for table [teacher_runk]
2021-04-02=11:50:32 DEBUG CollectionSecondPass:67 - Mapped collection key: teacher_id, element: runk_id
2021-04-02=11:50:32 DEBUG CollectionSecondPass:50 - Second pass for collection: lesson7.domain.Subject.teachers
2021-04-02=11:50:32 DEBUG CollectionBinder:1338 - Binding as ManyToMany: lesson7.domain.Subject.teachers
2021-04-02=11:50:32 DEBUG PrimaryKey:35 - Forcing column [subject_id] to be non-null as it is part of the primary key for table [subject_teacher]
2021-04-02=11:50:32 DEBUG PrimaryKey:35 - Forcing column [teacher_id] to be non-null as it is part of the primary key for table [subject_teacher]
2021-04-02=11:50:32 DEBUG CollectionSecondPass:67 - Mapped collection key: subject_id, element: teacher_id
2021-04-02=11:50:32 DEBUG CollectionSecondPass:50 - Second pass for collection: lesson7.domain.Client.teachers
2021-04-02=11:50:32 DEBUG CollectionBinder:1338 - Binding as ManyToMany: lesson7.domain.Client.teachers
2021-04-02=11:50:32 DEBUG PrimaryKey:35 - Forcing column [client_id] to be non-null as it is part of the primary key for table [client_teacher]
2021-04-02=11:50:32 DEBUG PrimaryKey:35 - Forcing column [teacher_id] to be non-null as it is part of the primary key for table [client_teacher]
2021-04-02=11:50:32 DEBUG CollectionSecondPass:67 - Mapped collection key: client_id, element: teacher_id
2021-04-02=11:50:32 DEBUG CollectionSecondPass:50 - Second pass for collection: lesson7.domain.Client.subjects
2021-04-02=11:50:32 DEBUG CollectionBinder:1338 - Binding as ManyToMany: lesson7.domain.Client.subjects
2021-04-02=11:50:32 DEBUG PrimaryKey:35 - Forcing column [client_id] to be non-null as it is part of the primary key for table [client_subject]
2021-04-02=11:50:32 DEBUG PrimaryKey:35 - Forcing column [subject_id] to be non-null as it is part of the primary key for table [client_subject]
2021-04-02=11:50:32 DEBUG CollectionSecondPass:67 - Mapped collection key: client_id, element: subject_id
2021-04-02=11:50:32 DEBUG CollectionSecondPass:50 - Second pass for collection: lesson7.domain.Client.accounts
2021-04-02=11:50:32 DEBUG CollectionBinder:903 - Binding a OneToMany: lesson7.domain.Client.accounts through a foreign key
2021-04-02=11:50:32 DEBUG CollectionBinder:941 - Mapping collection: lesson7.domain.Client.accounts -> accounts
2021-04-02=11:50:32 DEBUG TableBinder:554 - Retrieving property lesson7.domain.Account.client
2021-04-02=11:50:32 DEBUG CollectionSecondPass:67 - Mapped collection key: account_owner_id, one-to-many: lesson7.domain.Account
2021-04-02=11:50:32 DEBUG CollectionSecondPass:50 - Second pass for collection: lesson7.domain.Client.books
2021-04-02=11:50:32 DEBUG CollectionBinder:903 - Binding a OneToMany: lesson7.domain.Client.books through a foreign key
2021-04-02=11:50:32 DEBUG CollectionBinder:941 - Mapping collection: lesson7.domain.Client.books -> books
2021-04-02=11:50:32 DEBUG TableBinder:554 - Retrieving property lesson7.domain.Book.client
2021-04-02=11:50:32 DEBUG CollectionSecondPass:67 - Mapped collection key: client_id, one-to-many: lesson7.domain.Book
2021-04-02=11:50:32 DEBUG CollectionSecondPass:50 - Second pass for collection: lesson7.domain.Client.statuses
2021-04-02=11:50:32 DEBUG CollectionBinder:903 - Binding a OneToMany: lesson7.domain.Client.statuses through a foreign key
2021-04-02=11:50:32 DEBUG CollectionBinder:941 - Mapping collection: lesson7.domain.Client.statuses -> statuses
2021-04-02=11:50:32 DEBUG TableBinder:554 - Retrieving property lesson7.domain.Status.client
2021-04-02=11:50:32 DEBUG CollectionSecondPass:67 - Mapped collection key: client_id, one-to-many: lesson7.domain.Status
2021-04-02=11:50:32 DEBUG CollectionSecondPass:50 - Second pass for collection: lesson7.domain.Subject.clients
2021-04-02=11:50:32 DEBUG CollectionBinder:1338 - Binding as ManyToMany: lesson7.domain.Subject.clients
2021-04-02=11:50:32 DEBUG TableBinder:554 - Retrieving property lesson7.domain.Client.subjects
2021-04-02=11:50:32 DEBUG CollectionSecondPass:67 - Mapped collection key: subject_id, element: client_id
2021-04-02=11:50:32 DEBUG PropertyBinder:266 - Building property client
2021-04-02=11:50:32 DEBUG CollectionSecondPass:50 - Second pass for collection: lesson7.domain.Teacher.clients
2021-04-02=11:50:32 DEBUG CollectionBinder:1338 - Binding as ManyToMany: lesson7.domain.Teacher.clients
2021-04-02=11:50:32 DEBUG TableBinder:554 - Retrieving property lesson7.domain.Client.teachers
2021-04-02=11:50:32 DEBUG CollectionSecondPass:67 - Mapped collection key: teacher_id, element: client_id
2021-04-02=11:50:32 DEBUG CollectionSecondPass:50 - Second pass for collection: lesson7.domain.Teacher.subjects
2021-04-02=11:50:32 DEBUG CollectionBinder:1338 - Binding as ManyToMany: lesson7.domain.Teacher.subjects
2021-04-02=11:50:32 DEBUG TableBinder:554 - Retrieving property lesson7.domain.Subject.teachers
2021-04-02=11:50:32 DEBUG CollectionSecondPass:67 - Mapped collection key: teacher_id, element: subject_id
2021-04-02=11:50:32 DEBUG CollectionSecondPass:50 - Second pass for collection: lesson7.domain.Runk.teachers
2021-04-02=11:50:32 DEBUG CollectionBinder:1338 - Binding as ManyToMany: lesson7.domain.Runk.teachers
2021-04-02=11:50:32 DEBUG TableBinder:554 - Retrieving property lesson7.domain.Teacher.runks
2021-04-02=11:50:32 DEBUG CollectionSecondPass:67 - Mapped collection key: runk_id, element: teacher_id
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1964 - Processing association property references
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Client
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Client
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Subject
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Client
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Teacher
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Client
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Passport
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Client
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Teacher
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Subject
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Runk
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Teacher
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1964 - Processing association property references
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Client
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Client
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Subject
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Client
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Teacher
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Client
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Passport
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Client
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Teacher
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Subject
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Runk
2021-04-02=11:50:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: lesson7.domain.Teacher
2021-04-02=11:50:32 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-02=11:50:32 DEBUG Settings:68 - SessionFactory name : null
2021-04-02=11:50:32 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-02=11:50:32 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-02=11:50:32 DEBUG Settings:72 - Statistics: disabled
2021-04-02=11:50:32 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-02=11:50:32 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-02=11:50:32 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-02=11:50:32 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-02=11:50:32 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-02=11:50:32 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-02=11:50:32 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-02=11:50:32 DEBUG Settings:82 - Default null ordering: NONE
2021-04-02=11:50:32 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-02=11:50:32 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-02=11:50:32 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-02=11:50:32 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-02=11:50:32 DEBUG Settings:90 - Query language substitutions: {}
2021-04-02=11:50:32 DEBUG Settings:91 - Named query checking : enabled
2021-04-02=11:50:32 DEBUG Settings:93 - Second-level cache: disabled
2021-04-02=11:50:32 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-02=11:50:32 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-02=11:50:32 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-02=11:50:32 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-02=11:50:32 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-02=11:50:32 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-02=11:50:32 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-02=11:50:32 DEBUG Settings:102 - JDBC batch size: 15
2021-04-02=11:50:32 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-02=11:50:32 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-02=11:50:32 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-02=11:50:32 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-02=11:50:32 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-02=11:50:32 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-02=11:50:32 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-02=11:50:32 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-02=11:50:32 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-02=11:50:32 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-02=11:50:32 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-02=11:50:32 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-02=11:50:32 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\target\classes;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.annotation.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jstl.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.jms.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.resource.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.ejb.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\pc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\pc\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\pc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\pc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pc\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\pc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\pc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\pc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\pc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\pc\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\pc\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\pc\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\pc\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Downloads\JetBrains IntelliJ IDEA Ultimate 2020.1 x64\IDEE\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=EET, user.country.format=UA, os.name=Windows 10, java.vm.specification.version=1.8, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, sun.java.command=lesson7.Main, sun.cpu.endian=little, user.home=C:\Users\pc, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=pc, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=D:\Kate\LessonsHillel\02(1)\Hillel-Elementary, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@617fe9e1, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Common Files\Autodesk Shared\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;D:\Program files\Git\cmd;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Java\jdk1.8.0_271\bin;D:\Program Files\PostgreSQL\13\bin;C:\Users\pc\AppData\Local\Microsoft\WindowsApps;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-04-02=11:50:33 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-02=11:50:33 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-02=11:50:33 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c5529ab] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@71a9b4c7]
2021-04-02=11:50:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson7.domain.Book] is safe
2021-04-02=11:50:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson7.domain.Book
2021-04-02=11:50:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson7.domain.Subject] is safe
2021-04-02=11:50:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson7.domain.Subject
2021-04-02=11:50:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson7.domain.Passport] is safe
2021-04-02=11:50:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson7.domain.Passport
2021-04-02=11:50:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson7.domain.Runk] is safe
2021-04-02=11:50:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson7.domain.Runk
2021-04-02=11:50:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson7.domain.Account] is safe
2021-04-02=11:50:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson7.domain.Account
2021-04-02=11:50:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson7.domain.Client] is safe
2021-04-02=11:50:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson7.domain.Client
2021-04-02=11:50:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson7.domain.Status] is safe
2021-04-02=11:50:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson7.domain.Status
2021-04-02=11:50:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson7.domain.Teacher] is safe
2021-04-02=11:50:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson7.domain.Teacher
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: lesson7.domain.Client.books
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:694 -  Row insert: update books set client_id=? where id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:697 -  Row update: update books set  where id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:700 -  Row delete: update books set client_id=null where client_id=? and id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update books set client_id=null where client_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: lesson7.domain.Client.teachers
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:694 -  Row insert: insert into client_teacher (client_id, teacher_id) values (?, ?)
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:697 -  Row update: update client_teacher set teacher_id=? where client_id=? and teacher_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:700 -  Row delete: delete from client_teacher where client_id=? and teacher_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:703 -  One-shot delete: delete from client_teacher where client_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: lesson7.domain.Teacher.subjects
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:694 -  Row insert: insert into subject_teacher (teacher_id, subject_id) values (?, ?)
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:697 -  Row update: update subject_teacher set subject_id=? where teacher_id=? and subject_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:700 -  Row delete: delete from subject_teacher where teacher_id=? and subject_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:703 -  One-shot delete: delete from subject_teacher where teacher_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: lesson7.domain.Client.statuses
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:694 -  Row insert: update statuses set client_id=? where id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:697 -  Row update: update statuses set  where id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:700 -  Row delete: update statuses set client_id=null where client_id=? and id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update statuses set client_id=null where client_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: lesson7.domain.Runk.teachers
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:694 -  Row insert: insert into teacher_runk (runk_id, teacher_id) values (?, ?)
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:697 -  Row update: update teacher_runk set teacher_id=? where runk_id=? and teacher_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:700 -  Row delete: delete from teacher_runk where runk_id=? and teacher_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:703 -  One-shot delete: delete from teacher_runk where runk_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: lesson7.domain.Client.subjects
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:694 -  Row insert: insert into client_subject (client_id, subject_id) values (?, ?)
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:697 -  Row update: update client_subject set subject_id=? where client_id=? and subject_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:700 -  Row delete: delete from client_subject where client_id=? and subject_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:703 -  One-shot delete: delete from client_subject where client_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: lesson7.domain.Subject.clients
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:694 -  Row insert: insert into client_subject (subject_id, client_id) values (?, ?)
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:697 -  Row update: update client_subject set client_id=? where subject_id=? and client_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:700 -  Row delete: delete from client_subject where subject_id=? and client_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:703 -  One-shot delete: delete from client_subject where subject_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: lesson7.domain.Client.accounts
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:694 -  Row insert: update accounts set account_owner_id=? where id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:697 -  Row update: update accounts set  where id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:700 -  Row delete: update accounts set account_owner_id=null where account_owner_id=? and id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update accounts set account_owner_id=null where account_owner_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: lesson7.domain.Subject.teachers
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:694 -  Row insert: insert into subject_teacher (subject_id, teacher_id) values (?, ?)
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:697 -  Row update: update subject_teacher set teacher_id=? where subject_id=? and teacher_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:700 -  Row delete: delete from subject_teacher where subject_id=? and teacher_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:703 -  One-shot delete: delete from subject_teacher where subject_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: lesson7.domain.Teacher.clients
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:694 -  Row insert: insert into client_teacher (teacher_id, client_id) values (?, ?)
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:697 -  Row update: update client_teacher set client_id=? where teacher_id=? and client_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:700 -  Row delete: delete from client_teacher where teacher_id=? and client_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:703 -  One-shot delete: delete from client_teacher where teacher_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: lesson7.domain.Teacher.runks
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:694 -  Row insert: insert into teacher_runk (teacher_id, runk_id) values (?, ?)
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:697 -  Row update: update teacher_runk set runk_id=? where teacher_id=? and runk_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:700 -  Row delete: delete from teacher_runk where teacher_id=? and runk_id=?
2021-04-02=11:50:34 DEBUG AbstractCollectionPersister:703 -  One-shot delete: delete from teacher_runk where teacher_id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson7.domain.Book
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3923 -  Version select: select id from books where id =?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select book_.id, book_.author as author2_1_, book_.client_id as client_i4_1_, book_.subject as subject3_1_ from books book_ where book_.id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into books (author, client_id, subject, id) values (?, ?, ?, ?)
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Update 0: update books set author=?, client_id=?, subject=? where id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from books where id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into books (author, client_id, subject) values (?, ?, ?)
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ac04654]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2df3c564]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.about
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.accounts
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fd1660]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@546621c4]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.accounts.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.accounts.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.accounts.number
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.books
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.email
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.name
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.passport
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@676ff3b0]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.passport.number
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.passport.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.passport.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.phone
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.statuses
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fb7183b]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@476a736d]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.statuses.alias
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.statuses.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.statuses.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.statuses.description
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.subjects
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7159139f]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65bcf7c2]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.surname
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.teachers
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3db64bd4]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e106680]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subject
2021-04-02=11:50:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson7.domain.Book)
    - Returns
       - EntityReturnImpl(entity=lesson7.domain.Book, querySpaceUid=<gen:0>, path=lesson7.domain.Book)
          - EntityAttributeFetchImpl(entity=lesson7.domain.Client, querySpaceUid=<gen:1>, path=lesson7.domain.Book.client)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.accounts, querySpaceUid=<gen:2>, path=lesson7.domain.Book.client.accounts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Account, querySpaceUid=<gen:3>, path=lesson7.domain.Book.client.accounts.<elements>)
             - EntityAttributeFetchImpl(entity=lesson7.domain.Passport, querySpaceUid=<gen:4>, path=lesson7.domain.Book.client.passport)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.statuses, querySpaceUid=<gen:5>, path=lesson7.domain.Book.client.statuses)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Status, querySpaceUid=<gen:6>, path=lesson7.domain.Book.client.statuses.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.subjects, querySpaceUid=<gen:7>, path=lesson7.domain.Book.client.subjects)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:8>, path=lesson7.domain.Book.client.subjects.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.teachers, querySpaceUid=<gen:9>, path=lesson7.domain.Book.client.teachers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:10>, path=lesson7.domain.Book.client.teachers.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson7.domain.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(accounts)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=lesson7.domain.Client.accounts)
                      - SQL table alias mapping - accounts2_
                      - alias suffix - 2_
                      - suffixed key columns - {account_3_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=lesson7.domain.Account)
                            - SQL table alias mapping - accounts2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                - JOIN (JoinDefinedByMetadata(passport)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=lesson7.domain.Passport)
                      - SQL table alias mapping - passport3_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_5_4_}
                - JOIN (JoinDefinedByMetadata(statuses)) : <gen:1> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=lesson7.domain.Client.statuses)
                      - SQL table alias mapping - statuses4_
                      - alias suffix - 5_
                      - suffixed key columns - {client_i4_7_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_7_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=lesson7.domain.Status)
                            - SQL table alias mapping - statuses4_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_7_6_}

2021-04-02=11:50:34 DEBUG EntityLoader:129 - Static select for entity lesson7.domain.Book [NONE]: select book0_.id as id1_1_0_, book0_.author as author2_1_0_, book0_.client_id as client_i4_1_0_, book0_.subject as subject3_1_0_, client1_.id as id1_4_1_, client1_.about as about2_4_1_, client1_.email as email3_4_1_, client1_.name as name4_4_1_, client1_.passport_id as passport7_4_1_, client1_.phone as phone5_4_1_, client1_.surname as surname6_4_1_, accounts2_.account_owner_id as account_3_0_2_, accounts2_.id as id1_0_2_, accounts2_.id as id1_0_3_, accounts2_.account_owner_id as account_3_0_3_, accounts2_.number as number2_0_3_, passport3_.id as id1_5_4_, passport3_.number as number2_5_4_, statuses4_.client_id as client_i4_7_5_, statuses4_.id as id1_7_5_, statuses4_.id as id1_7_6_, statuses4_.alias as alias2_7_6_, statuses4_.client_id as client_i4_7_6_, statuses4_.description as descript3_7_6_ from books book0_ left outer join clients client1_ on book0_.client_id=client1_.id left outer join accounts accounts2_ on client1_.id=accounts2_.account_owner_id left outer join passports passport3_ on client1_.passport_id=passport3_.id left outer join statuses statuses4_ on client1_.id=statuses4_.client_id where book0_.id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson7.domain.Subject
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3923 -  Version select: select id from subjects where id =?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select subject_.id, subject_.description as descript2_9_, subject_.name as name3_9_ from subjects subject_ where subject_.id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into subjects (description, name, id) values (?, ?, ?)
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Update 0: update subjects set description=?, name=? where id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from subjects where id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into subjects (description, name) values (?, ?)
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bca7664]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clients
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3fae596]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a0df195]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : teachers
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42fcc7e6]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9255c05]
2021-04-02=11:50:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson7.domain.Subject)
    - Returns
       - EntityReturnImpl(entity=lesson7.domain.Subject, querySpaceUid=<gen:0>, path=lesson7.domain.Subject)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Subject.clients, querySpaceUid=<gen:1>, path=lesson7.domain.Subject.clients)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Client, querySpaceUid=<gen:2>, path=lesson7.domain.Subject.clients.<elements>)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Subject.teachers, querySpaceUid=<gen:3>, path=lesson7.domain.Subject.teachers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:4>, path=lesson7.domain.Subject.teachers.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson7.domain.Subject)
          - SQL table alias mapping - subject0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

2021-04-02=11:50:34 DEBUG EntityLoader:129 - Static select for entity lesson7.domain.Subject [NONE]: select subject0_.id as id1_9_0_, subject0_.description as descript2_9_0_, subject0_.name as name3_9_0_ from subjects subject0_ where subject0_.id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson7.domain.Passport
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3923 -  Version select: select id from passports where id =?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select passport_.id, passport_.number as number2_5_ from passports passport_ where passport_.id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into passports (number, id) values (?, ?)
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Update 0: update passports set number=? where id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from passports where id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into passports (number) values (?)
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5da7cee2]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ce4369b]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.about
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.accounts
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1cb19dba]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c3ebc6b]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.accounts.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.accounts.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.accounts.number
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ad54c55]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73017a80]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books.author
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.books.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books.subject
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.email
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.name
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.passport
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.passport
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.phone
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.statuses
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a3e5f23]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6293e39e]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.statuses.alias
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.statuses.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.statuses.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.statuses.description
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.subjects
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c0f79f0]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21fdfefc]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.surname
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.teachers
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3daa82be]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ec1b2e4]
2021-04-02=11:50:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson7.domain.Passport)
    - Returns
       - EntityReturnImpl(entity=lesson7.domain.Passport, querySpaceUid=<gen:0>, path=lesson7.domain.Passport)
          - EntityAttributeFetchImpl(entity=lesson7.domain.Client, querySpaceUid=<gen:1>, path=lesson7.domain.Passport.client)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.accounts, querySpaceUid=<gen:2>, path=lesson7.domain.Passport.client.accounts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Account, querySpaceUid=<gen:3>, path=lesson7.domain.Passport.client.accounts.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.books, querySpaceUid=<gen:4>, path=lesson7.domain.Passport.client.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Book, querySpaceUid=<gen:5>, path=lesson7.domain.Passport.client.books.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.statuses, querySpaceUid=<gen:6>, path=lesson7.domain.Passport.client.statuses)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Status, querySpaceUid=<gen:7>, path=lesson7.domain.Passport.client.statuses.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.subjects, querySpaceUid=<gen:8>, path=lesson7.domain.Passport.client.subjects)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:9>, path=lesson7.domain.Passport.client.subjects.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.teachers, querySpaceUid=<gen:10>, path=lesson7.domain.Passport.client.teachers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:11>, path=lesson7.domain.Passport.client.teachers.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson7.domain.Passport)
          - SQL table alias mapping - passport0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(accounts)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=lesson7.domain.Client.accounts)
                      - SQL table alias mapping - accounts2_
                      - alias suffix - 2_
                      - suffixed key columns - {account_3_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=lesson7.domain.Account)
                            - SQL table alias mapping - accounts2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                - JOIN (JoinDefinedByMetadata(books)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=lesson7.domain.Client.books)
                      - SQL table alias mapping - books3_
                      - alias suffix - 4_
                      - suffixed key columns - {client_i4_1_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_1_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=lesson7.domain.Book)
                            - SQL table alias mapping - books3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_1_5_}
                - JOIN (JoinDefinedByMetadata(statuses)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=lesson7.domain.Client.statuses)
                      - SQL table alias mapping - statuses4_
                      - alias suffix - 6_
                      - suffixed key columns - {client_i4_7_6_}
                      - entity-element alias suffix - 7_
                      - 7_entity-element suffixed key columns - id1_7_7_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=lesson7.domain.Status)
                            - SQL table alias mapping - statuses4_
                            - alias suffix - 7_
                            - suffixed key columns - {id1_7_7_}

2021-04-02=11:50:34 DEBUG EntityLoader:129 - Static select for entity lesson7.domain.Passport [NONE]: select passport0_.id as id1_5_0_, passport0_.number as number2_5_0_, client1_.id as id1_4_1_, client1_.about as about2_4_1_, client1_.email as email3_4_1_, client1_.name as name4_4_1_, client1_.passport_id as passport7_4_1_, client1_.phone as phone5_4_1_, client1_.surname as surname6_4_1_, accounts2_.account_owner_id as account_3_0_2_, accounts2_.id as id1_0_2_, accounts2_.id as id1_0_3_, accounts2_.account_owner_id as account_3_0_3_, accounts2_.number as number2_0_3_, books3_.client_id as client_i4_1_4_, books3_.id as id1_1_4_, books3_.id as id1_1_5_, books3_.author as author2_1_5_, books3_.client_id as client_i4_1_5_, books3_.subject as subject3_1_5_, statuses4_.client_id as client_i4_7_6_, statuses4_.id as id1_7_6_, statuses4_.id as id1_7_7_, statuses4_.alias as alias2_7_7_, statuses4_.client_id as client_i4_7_7_, statuses4_.description as descript3_7_7_ from passports passport0_ left outer join clients client1_ on passport0_.id=client1_.passport_id left outer join accounts accounts2_ on client1_.id=accounts2_.account_owner_id left outer join books books3_ on client1_.id=books3_.client_id left outer join statuses statuses4_ on client1_.id=statuses4_.client_id where passport0_.id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson7.domain.Runk
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3923 -  Version select: select id from runks where id =?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select runk_.id, runk_.alias as alias2_6_ from runks runk_ where runk_.id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into runks (alias, id) values (?, ?)
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Update 0: update runks set alias=? where id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from runks where id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into runks (alias) values (?)
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29a69a35]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : teachers
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e344ad3]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@de18f63]
2021-04-02=11:50:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson7.domain.Runk)
    - Returns
       - EntityReturnImpl(entity=lesson7.domain.Runk, querySpaceUid=<gen:0>, path=lesson7.domain.Runk)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Runk.teachers, querySpaceUid=<gen:1>, path=lesson7.domain.Runk.teachers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:2>, path=lesson7.domain.Runk.teachers.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson7.domain.Runk)
          - SQL table alias mapping - runk0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

2021-04-02=11:50:34 DEBUG EntityLoader:129 - Static select for entity lesson7.domain.Runk [NONE]: select runk0_.id as id1_6_0_, runk0_.alias as alias2_6_0_ from runks runk0_ where runk0_.id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson7.domain.Account
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3923 -  Version select: select id from accounts where id =?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select account_.id, account_.account_owner_id as account_3_0_, account_.number as number2_0_ from accounts account_ where account_.id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (account_owner_id, number, id) values (?, ?, ?)
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set account_owner_id=?, number=? where id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into accounts (account_owner_id, number) values (?, ?)
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@108bdbd8]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f8b4bd0]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.about
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.accounts
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.accounts
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b18c4]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cbf4f53]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books.author
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.books.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books.subject
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.email
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.name
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.passport
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d48bd85]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.passport.number
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.passport.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.passport.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.phone
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.statuses
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58a120b0]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27d57a2c]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.statuses.alias
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.statuses.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.statuses.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.statuses.description
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.subjects
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58a4a74d]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54aca26f]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.surname
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.teachers
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@314ed053]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35088e87]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=11:50:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson7.domain.Account)
    - Returns
       - EntityReturnImpl(entity=lesson7.domain.Account, querySpaceUid=<gen:0>, path=lesson7.domain.Account)
          - EntityAttributeFetchImpl(entity=lesson7.domain.Client, querySpaceUid=<gen:1>, path=lesson7.domain.Account.client)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.books, querySpaceUid=<gen:2>, path=lesson7.domain.Account.client.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Book, querySpaceUid=<gen:3>, path=lesson7.domain.Account.client.books.<elements>)
             - EntityAttributeFetchImpl(entity=lesson7.domain.Passport, querySpaceUid=<gen:4>, path=lesson7.domain.Account.client.passport)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.statuses, querySpaceUid=<gen:5>, path=lesson7.domain.Account.client.statuses)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Status, querySpaceUid=<gen:6>, path=lesson7.domain.Account.client.statuses.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.subjects, querySpaceUid=<gen:7>, path=lesson7.domain.Account.client.subjects)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:8>, path=lesson7.domain.Account.client.subjects.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.teachers, querySpaceUid=<gen:9>, path=lesson7.domain.Account.client.teachers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:10>, path=lesson7.domain.Account.client.teachers.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson7.domain.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(books)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=lesson7.domain.Client.books)
                      - SQL table alias mapping - books2_
                      - alias suffix - 2_
                      - suffixed key columns - {client_i4_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=lesson7.domain.Book)
                            - SQL table alias mapping - books2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}
                - JOIN (JoinDefinedByMetadata(passport)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=lesson7.domain.Passport)
                      - SQL table alias mapping - passport3_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_5_4_}
                - JOIN (JoinDefinedByMetadata(statuses)) : <gen:1> -> <gen:5>
                   - CollectionQuerySpaceImpl(uid=<gen:5>, collection=lesson7.domain.Client.statuses)
                      - SQL table alias mapping - statuses4_
                      - alias suffix - 5_
                      - suffixed key columns - {client_i4_7_5_}
                      - entity-element alias suffix - 6_
                      - 6_entity-element suffixed key columns - id1_7_6_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=lesson7.domain.Status)
                            - SQL table alias mapping - statuses4_
                            - alias suffix - 6_
                            - suffixed key columns - {id1_7_6_}

2021-04-02=11:50:34 DEBUG EntityLoader:129 - Static select for entity lesson7.domain.Account [NONE]: select account0_.id as id1_0_0_, account0_.account_owner_id as account_3_0_0_, account0_.number as number2_0_0_, client1_.id as id1_4_1_, client1_.about as about2_4_1_, client1_.email as email3_4_1_, client1_.name as name4_4_1_, client1_.passport_id as passport7_4_1_, client1_.phone as phone5_4_1_, client1_.surname as surname6_4_1_, books2_.client_id as client_i4_1_2_, books2_.id as id1_1_2_, books2_.id as id1_1_3_, books2_.author as author2_1_3_, books2_.client_id as client_i4_1_3_, books2_.subject as subject3_1_3_, passport3_.id as id1_5_4_, passport3_.number as number2_5_4_, statuses4_.client_id as client_i4_7_5_, statuses4_.id as id1_7_5_, statuses4_.id as id1_7_6_, statuses4_.alias as alias2_7_6_, statuses4_.client_id as client_i4_7_6_, statuses4_.description as descript3_7_6_ from accounts account0_ left outer join clients client1_ on account0_.account_owner_id=client1_.id left outer join books books2_ on client1_.id=books2_.client_id left outer join passports passport3_ on client1_.passport_id=passport3_.id left outer join statuses statuses4_ on client1_.id=statuses4_.client_id where account0_.id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson7.domain.Client
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3923 -  Version select: select id from clients where id =?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select client_.id, client_.about as about2_4_, client_.email as email3_4_, client_.name as name4_4_, client_.passport_id as passport7_4_, client_.phone as phone5_4_, client_.surname as surname6_4_ from clients client_ where client_.id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, passport_id, phone, surname, id) values (?, ?, ?, ?, ?, ?, ?)
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, passport_id=?, phone=?, surname=? where id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into clients (about, email, name, passport_id, phone, surname) values (?, ?, ?, ?, ?, ?)
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@486bc9a4]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accounts
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3eee3e2b]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f63e3c7]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accounts.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : accounts.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accounts.number
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : books
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@421a4ee1]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1237e0be]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : books.author
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : books.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : books.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : books.subject
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e54cb33]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport.number
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : passport.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : statuses
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d96d872]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c748168]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : statuses.alias
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : statuses.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : statuses.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : statuses.description
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subjects
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@234a8f27]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b4d25e7]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : teachers
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31c2affc]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dc2de84]
2021-04-02=11:50:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson7.domain.Client)
    - Returns
       - EntityReturnImpl(entity=lesson7.domain.Client, querySpaceUid=<gen:0>, path=lesson7.domain.Client)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.accounts, querySpaceUid=<gen:1>, path=lesson7.domain.Client.accounts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Account, querySpaceUid=<gen:2>, path=lesson7.domain.Client.accounts.<elements>)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.books, querySpaceUid=<gen:3>, path=lesson7.domain.Client.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Book, querySpaceUid=<gen:4>, path=lesson7.domain.Client.books.<elements>)
          - EntityAttributeFetchImpl(entity=lesson7.domain.Passport, querySpaceUid=<gen:5>, path=lesson7.domain.Client.passport)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.statuses, querySpaceUid=<gen:6>, path=lesson7.domain.Client.statuses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Status, querySpaceUid=<gen:7>, path=lesson7.domain.Client.statuses.<elements>)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.subjects, querySpaceUid=<gen:8>, path=lesson7.domain.Client.subjects)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:9>, path=lesson7.domain.Client.subjects.<elements>)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.teachers, querySpaceUid=<gen:10>, path=lesson7.domain.Client.teachers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:11>, path=lesson7.domain.Client.teachers.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson7.domain.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(accounts)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=lesson7.domain.Client.accounts)
                - SQL table alias mapping - accounts1_
                - alias suffix - 1_
                - suffixed key columns - {account_3_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=lesson7.domain.Account)
                      - SQL table alias mapping - accounts1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(books)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=lesson7.domain.Client.books)
                - SQL table alias mapping - books2_
                - alias suffix - 3_
                - suffixed key columns - {client_i4_1_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_1_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=lesson7.domain.Book)
                      - SQL table alias mapping - books2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_1_4_}
          - JOIN (JoinDefinedByMetadata(passport)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=lesson7.domain.Passport)
                - SQL table alias mapping - passport3_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(statuses)) : <gen:0> -> <gen:6>
             - CollectionQuerySpaceImpl(uid=<gen:6>, collection=lesson7.domain.Client.statuses)
                - SQL table alias mapping - statuses4_
                - alias suffix - 6_
                - suffixed key columns - {client_i4_7_6_}
                - entity-element alias suffix - 7_
                - 7_entity-element suffixed key columns - id1_7_7_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=lesson7.domain.Status)
                      - SQL table alias mapping - statuses4_
                      - alias suffix - 7_
                      - suffixed key columns - {id1_7_7_}

2021-04-02=11:50:34 DEBUG EntityLoader:129 - Static select for entity lesson7.domain.Client [NONE]: select client0_.id as id1_4_0_, client0_.about as about2_4_0_, client0_.email as email3_4_0_, client0_.name as name4_4_0_, client0_.passport_id as passport7_4_0_, client0_.phone as phone5_4_0_, client0_.surname as surname6_4_0_, accounts1_.account_owner_id as account_3_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.account_owner_id as account_3_0_2_, accounts1_.number as number2_0_2_, books2_.client_id as client_i4_1_3_, books2_.id as id1_1_3_, books2_.id as id1_1_4_, books2_.author as author2_1_4_, books2_.client_id as client_i4_1_4_, books2_.subject as subject3_1_4_, passport3_.id as id1_5_5_, passport3_.number as number2_5_5_, statuses4_.client_id as client_i4_7_6_, statuses4_.id as id1_7_6_, statuses4_.id as id1_7_7_, statuses4_.alias as alias2_7_7_, statuses4_.client_id as client_i4_7_7_, statuses4_.description as descript3_7_7_ from clients client0_ left outer join accounts accounts1_ on client0_.id=accounts1_.account_owner_id left outer join books books2_ on client0_.id=books2_.client_id left outer join passports passport3_ on client0_.passport_id=passport3_.id left outer join statuses statuses4_ on client0_.id=statuses4_.client_id where client0_.id=?
2021-04-02=11:50:34 DEBUG Loader:106 - Static select for entity lesson7.domain.Client [NONE]: select client0_.id as id1_4_4_, client0_.about as about2_4_4_, client0_.email as email3_4_4_, client0_.name as name4_4_4_, client0_.passport_id as passport7_4_4_, client0_.phone as phone5_4_4_, client0_.surname as surname6_4_4_, accounts1_.account_owner_id as account_3_0_6_, accounts1_.id as id1_0_6_, accounts1_.id as id1_0_0_, accounts1_.account_owner_id as account_3_0_0_, accounts1_.number as number2_0_0_, books2_.client_id as client_i4_1_7_, books2_.id as id1_1_7_, books2_.id as id1_1_1_, books2_.author as author2_1_1_, books2_.client_id as client_i4_1_1_, books2_.subject as subject3_1_1_, passport3_.id as id1_5_2_, passport3_.number as number2_5_2_, statuses4_.client_id as client_i4_7_8_, statuses4_.id as id1_7_8_, statuses4_.id as id1_7_3_, statuses4_.alias as alias2_7_3_, statuses4_.client_id as client_i4_7_3_, statuses4_.description as descript3_7_3_ from clients client0_ left outer join accounts accounts1_ on client0_.id=accounts1_.account_owner_id left outer join books books2_ on client0_.id=books2_.client_id left outer join passports passport3_ on client0_.passport_id=passport3_.id left outer join statuses statuses4_ on client0_.id=statuses4_.client_id where client0_.passport_id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson7.domain.Status
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3923 -  Version select: select id from statuses where id =?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select status_.id, status_.alias as alias2_7_, status_.client_id as client_i4_7_, status_.description as descript3_7_ from statuses status_ where status_.id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, client_id, description, id) values (?, ?, ?, ?)
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, client_id=?, description=? where id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into statuses (alias, client_id, description) values (?, ?, ?)
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7e336b]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e1218b4]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.about
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.accounts
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c6e0f32]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f3f0fae]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.accounts.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.accounts.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.accounts.number
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63fdffcd]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7428de63]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books.author
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.books.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.books.subject
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.email
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.name
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.passport
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46678e49]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.passport.number
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.passport.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.passport.client
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.phone
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.statuses
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client.statuses
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.subjects
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2063c53e]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a9bc08f]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.surname
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client.teachers
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50f40653]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50a3d0f6]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=11:50:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson7.domain.Status)
    - Returns
       - EntityReturnImpl(entity=lesson7.domain.Status, querySpaceUid=<gen:0>, path=lesson7.domain.Status)
          - EntityAttributeFetchImpl(entity=lesson7.domain.Client, querySpaceUid=<gen:1>, path=lesson7.domain.Status.client)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.accounts, querySpaceUid=<gen:2>, path=lesson7.domain.Status.client.accounts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Account, querySpaceUid=<gen:3>, path=lesson7.domain.Status.client.accounts.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.books, querySpaceUid=<gen:4>, path=lesson7.domain.Status.client.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Book, querySpaceUid=<gen:5>, path=lesson7.domain.Status.client.books.<elements>)
             - EntityAttributeFetchImpl(entity=lesson7.domain.Passport, querySpaceUid=<gen:6>, path=lesson7.domain.Status.client.passport)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.subjects, querySpaceUid=<gen:7>, path=lesson7.domain.Status.client.subjects)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:8>, path=lesson7.domain.Status.client.subjects.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.teachers, querySpaceUid=<gen:9>, path=lesson7.domain.Status.client.teachers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:10>, path=lesson7.domain.Status.client.teachers.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson7.domain.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(accounts)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=lesson7.domain.Client.accounts)
                      - SQL table alias mapping - accounts2_
                      - alias suffix - 2_
                      - suffixed key columns - {account_3_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=lesson7.domain.Account)
                            - SQL table alias mapping - accounts2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                - JOIN (JoinDefinedByMetadata(books)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=lesson7.domain.Client.books)
                      - SQL table alias mapping - books3_
                      - alias suffix - 4_
                      - suffixed key columns - {client_i4_1_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_1_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=lesson7.domain.Book)
                            - SQL table alias mapping - books3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_1_5_}
                - JOIN (JoinDefinedByMetadata(passport)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=lesson7.domain.Passport)
                      - SQL table alias mapping - passport4_
                      - alias suffix - 6_
                      - suffixed key columns - {id1_5_6_}

2021-04-02=11:50:34 DEBUG EntityLoader:129 - Static select for entity lesson7.domain.Status [NONE]: select status0_.id as id1_7_0_, status0_.alias as alias2_7_0_, status0_.client_id as client_i4_7_0_, status0_.description as descript3_7_0_, client1_.id as id1_4_1_, client1_.about as about2_4_1_, client1_.email as email3_4_1_, client1_.name as name4_4_1_, client1_.passport_id as passport7_4_1_, client1_.phone as phone5_4_1_, client1_.surname as surname6_4_1_, accounts2_.account_owner_id as account_3_0_2_, accounts2_.id as id1_0_2_, accounts2_.id as id1_0_3_, accounts2_.account_owner_id as account_3_0_3_, accounts2_.number as number2_0_3_, books3_.client_id as client_i4_1_4_, books3_.id as id1_1_4_, books3_.id as id1_1_5_, books3_.author as author2_1_5_, books3_.client_id as client_i4_1_5_, books3_.subject as subject3_1_5_, passport4_.id as id1_5_6_, passport4_.number as number2_5_6_ from statuses status0_ left outer join clients client1_ on status0_.client_id=client1_.id left outer join accounts accounts2_ on client1_.id=accounts2_.account_owner_id left outer join books books3_ on client1_.id=books3_.client_id left outer join passports passport4_ on client1_.passport_id=passport4_.id where status0_.id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson7.domain.Teacher
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3923 -  Version select: select id from teachers where id =?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select teacher_.id, teacher_.name as name2_11_, teacher_.surname as surname3_11_ from teachers teacher_ where teacher_.id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into teachers (name, surname, id) values (?, ?, ?)
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Update 0: update teachers set name=?, surname=? where id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from teachers where id=?
2021-04-02=11:50:34 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into teachers (name, surname) values (?, ?)
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e57b5e9]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clients
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a0ac48e]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24e08d59]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : runks
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77cb9cd1]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@971e903]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subjects
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35636217]
2021-04-02=11:50:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1549bba7]
2021-04-02=11:50:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2021-04-02=11:50:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson7.domain.Teacher)
    - Returns
       - EntityReturnImpl(entity=lesson7.domain.Teacher, querySpaceUid=<gen:0>, path=lesson7.domain.Teacher)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.clients, querySpaceUid=<gen:1>, path=lesson7.domain.Teacher.clients)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Client, querySpaceUid=<gen:2>, path=lesson7.domain.Teacher.clients.<elements>)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.runks, querySpaceUid=<gen:3>, path=lesson7.domain.Teacher.runks)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Runk, querySpaceUid=<gen:4>, path=lesson7.domain.Teacher.runks.<elements>)
          - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.subjects, querySpaceUid=<gen:5>, path=lesson7.domain.Teacher.subjects)
             - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:6>, path=lesson7.domain.Teacher.subjects.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson7.domain.Teacher)
          - SQL table alias mapping - teacher0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

2021-04-02=11:50:35 DEBUG EntityLoader:129 - Static select for entity lesson7.domain.Teacher [NONE]: select teacher0_.id as id1_11_0_, teacher0_.name as name2_11_0_, teacher0_.surname as surname3_11_0_ from teachers teacher0_ where teacher0_.id=?
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bb35cc6]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203c20cf]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subject
2021-04-02=11:50:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Client.books)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Client.books, querySpaceUid=<gen:0>, path=[lesson7.domain.Client.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Book, querySpaceUid=<gen:1>, path=[lesson7.domain.Client.books].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Client.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {client_i4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2021-04-02=11:50:35 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Client.books: select books0_.client_id as client_i4_1_0_, books0_.id as id1_1_0_, books0_.id as id1_1_1_, books0_.author as author2_1_1_, books0_.client_id as client_i4_1_1_, books0_.subject as subject3_1_1_ from books books0_ where books0_.client_id=?
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62b969c4]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dcc6211]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clients
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : clients
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : runks
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@610df783]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f3fcd59]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subjects
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b56f5f8]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79d743e6]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2021-04-02=11:50:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Client.teachers)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Client.teachers, querySpaceUid=<gen:0>, path=[lesson7.domain.Client.teachers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:1>, path=[lesson7.domain.Client.teachers].<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.runks, querySpaceUid=<gen:2>, path=[lesson7.domain.Client.teachers].<elements>.runks)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Runk, querySpaceUid=<gen:3>, path=[lesson7.domain.Client.teachers].<elements>.runks.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.subjects, querySpaceUid=<gen:4>, path=[lesson7.domain.Client.teachers].<elements>.subjects)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:5>, path=[lesson7.domain.Client.teachers].<elements>.subjects.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Client.teachers)
          - SQL table alias mapping - teachers0_
          - alias suffix - 0_
          - suffixed key columns - {client_i1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Teacher)
                - SQL table alias mapping - teacher1_
                - alias suffix - 1_
                - suffixed key columns - {id1_11_1_}

2021-04-02=11:50:35 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Client.teachers: select teachers0_.client_id as client_i1_3_0_, teachers0_.teacher_id as teacher_2_3_0_, teacher1_.id as id1_11_1_, teacher1_.name as name2_11_1_, teacher1_.surname as surname3_11_1_ from client_teacher teachers0_ inner join teachers teacher1_ on teachers0_.teacher_id=teacher1_.id where teachers0_.client_id=?
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ee8dcd3]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a20b94b]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clients
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cd59ef5]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33b082c5]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : teachers
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : teachers
2021-04-02=11:50:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Teacher.subjects)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Teacher.subjects, querySpaceUid=<gen:0>, path=[lesson7.domain.Teacher.subjects])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:1>, path=[lesson7.domain.Teacher.subjects].<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Subject.clients, querySpaceUid=<gen:2>, path=[lesson7.domain.Teacher.subjects].<elements>.clients)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Client, querySpaceUid=<gen:3>, path=[lesson7.domain.Teacher.subjects].<elements>.clients.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Teacher.subjects)
          - SQL table alias mapping - subjects0_
          - alias suffix - 0_
          - suffixed key columns - {teacher_2_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_9_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Subject)
                - SQL table alias mapping - subject1_
                - alias suffix - 1_
                - suffixed key columns - {id1_9_1_}

2021-04-02=11:50:35 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Teacher.subjects: select subjects0_.teacher_id as teacher_2_8_0_, subjects0_.subject_id as subject_1_8_0_, subject1_.id as id1_9_1_, subject1_.description as descript2_9_1_, subject1_.name as name3_9_1_ from subject_teacher subjects0_ inner join subjects subject1_ on subjects0_.subject_id=subject1_.id where subjects0_.teacher_id=?
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16073fa8]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cc9cfb2]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=11:50:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Client.statuses)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Client.statuses, querySpaceUid=<gen:0>, path=[lesson7.domain.Client.statuses])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Status, querySpaceUid=<gen:1>, path=[lesson7.domain.Client.statuses].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Client.statuses)
          - SQL table alias mapping - statuses0_
          - alias suffix - 0_
          - suffixed key columns - {client_i4_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_7_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Status)
                - SQL table alias mapping - statuses0_
                - alias suffix - 1_
                - suffixed key columns - {id1_7_1_}

2021-04-02=11:50:35 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Client.statuses: select statuses0_.client_id as client_i4_7_0_, statuses0_.id as id1_7_0_, statuses0_.id as id1_7_1_, statuses0_.alias as alias2_7_1_, statuses0_.client_id as client_i4_7_1_, statuses0_.description as descript3_7_1_ from statuses statuses0_ where statuses0_.client_id=?
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14bf57b2]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46d9aec8]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clients
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17740dae]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c504e66]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : runks
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : runks
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subjects
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@345cf395]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bc4d5e1]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2021-04-02=11:50:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Runk.teachers)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Runk.teachers, querySpaceUid=<gen:0>, path=[lesson7.domain.Runk.teachers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:1>, path=[lesson7.domain.Runk.teachers].<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.clients, querySpaceUid=<gen:2>, path=[lesson7.domain.Runk.teachers].<elements>.clients)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Client, querySpaceUid=<gen:3>, path=[lesson7.domain.Runk.teachers].<elements>.clients.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.subjects, querySpaceUid=<gen:4>, path=[lesson7.domain.Runk.teachers].<elements>.subjects)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:5>, path=[lesson7.domain.Runk.teachers].<elements>.subjects.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Runk.teachers)
          - SQL table alias mapping - teachers0_
          - alias suffix - 0_
          - suffixed key columns - {runk_id2_10_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Teacher)
                - SQL table alias mapping - teacher1_
                - alias suffix - 1_
                - suffixed key columns - {id1_11_1_}

2021-04-02=11:50:35 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Runk.teachers: select teachers0_.runk_id as runk_id2_10_0_, teachers0_.teacher_id as teacher_1_10_0_, teacher1_.id as id1_11_1_, teacher1_.name as name2_11_1_, teacher1_.surname as surname3_11_1_ from teacher_runk teachers0_ inner join teachers teacher1_ on teachers0_.teacher_id=teacher1_.id where teachers0_.runk_id=?
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c6aa04a]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2257fadf]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clients
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : clients
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : teachers
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35835e65]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@289fdb08]
2021-04-02=11:50:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Client.subjects)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Client.subjects, querySpaceUid=<gen:0>, path=[lesson7.domain.Client.subjects])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:1>, path=[lesson7.domain.Client.subjects].<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Subject.teachers, querySpaceUid=<gen:2>, path=[lesson7.domain.Client.subjects].<elements>.teachers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:3>, path=[lesson7.domain.Client.subjects].<elements>.teachers.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Client.subjects)
          - SQL table alias mapping - subjects0_
          - alias suffix - 0_
          - suffixed key columns - {client_i1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_9_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Subject)
                - SQL table alias mapping - subject1_
                - alias suffix - 1_
                - suffixed key columns - {id1_9_1_}

2021-04-02=11:50:35 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Client.subjects: select subjects0_.client_id as client_i1_2_0_, subjects0_.subject_id as subject_2_2_0_, subject1_.id as id1_9_1_, subject1_.description as descript2_9_1_, subject1_.name as name3_9_1_ from client_subject subjects0_ inner join subjects subject1_ on subjects0_.subject_id=subject1_.id where subjects0_.client_id=?
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a231dfd]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30814f43]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accounts
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b61a019]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11a00961]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : books
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ce9e05a]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4992613f]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fd5717c]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport.number
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport.client
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : passport.client
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : statuses
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d774249]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17b64941]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subjects
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : subjects
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : teachers
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53ac845a]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5136207f]
2021-04-02=11:50:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Subject.clients)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Subject.clients, querySpaceUid=<gen:0>, path=[lesson7.domain.Subject.clients])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Client, querySpaceUid=<gen:1>, path=[lesson7.domain.Subject.clients].<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.accounts, querySpaceUid=<gen:2>, path=[lesson7.domain.Subject.clients].<elements>.accounts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Account, querySpaceUid=<gen:3>, path=[lesson7.domain.Subject.clients].<elements>.accounts.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.books, querySpaceUid=<gen:4>, path=[lesson7.domain.Subject.clients].<elements>.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Book, querySpaceUid=<gen:5>, path=[lesson7.domain.Subject.clients].<elements>.books.<elements>)
             - EntityAttributeFetchImpl(entity=lesson7.domain.Passport, querySpaceUid=<gen:6>, path=[lesson7.domain.Subject.clients].<elements>.passport)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.statuses, querySpaceUid=<gen:7>, path=[lesson7.domain.Subject.clients].<elements>.statuses)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Status, querySpaceUid=<gen:8>, path=[lesson7.domain.Subject.clients].<elements>.statuses.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.teachers, querySpaceUid=<gen:9>, path=[lesson7.domain.Subject.clients].<elements>.teachers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:10>, path=[lesson7.domain.Subject.clients].<elements>.teachers.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Subject.clients)
          - SQL table alias mapping - clients0_
          - alias suffix - 0_
          - suffixed key columns - {subject_2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(passport)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=lesson7.domain.Passport)
                      - SQL table alias mapping - passport2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}

2021-04-02=11:50:35 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Subject.clients: select clients0_.subject_id as subject_2_2_0_, clients0_.client_id as client_i1_2_0_, client1_.id as id1_4_1_, client1_.about as about2_4_1_, client1_.email as email3_4_1_, client1_.name as name4_4_1_, client1_.passport_id as passport7_4_1_, client1_.phone as phone5_4_1_, client1_.surname as surname6_4_1_, passport2_.id as id1_5_2_, passport2_.number as number2_5_2_ from client_subject clients0_ inner join clients client1_ on clients0_.client_id=client1_.id left outer join passports passport2_ on client1_.passport_id=passport2_.id where clients0_.subject_id=?
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@26a4551a]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fdecce]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : client
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=11:50:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Client.accounts)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Client.accounts, querySpaceUid=<gen:0>, path=[lesson7.domain.Client.accounts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Account, querySpaceUid=<gen:1>, path=[lesson7.domain.Client.accounts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Client.accounts)
          - SQL table alias mapping - accounts0_
          - alias suffix - 0_
          - suffixed key columns - {account_3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Account)
                - SQL table alias mapping - accounts0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2021-04-02=11:50:35 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Client.accounts: select accounts0_.account_owner_id as account_3_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.account_owner_id as account_3_0_1_, accounts0_.number as number2_0_1_ from accounts accounts0_ where accounts0_.account_owner_id=?
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cee53dc]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@290aeb20]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clients
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2764c546]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59496961]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : runks
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@408b87aa]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b08632]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subjects
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : subjects
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2021-04-02=11:50:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Subject.teachers)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Subject.teachers, querySpaceUid=<gen:0>, path=[lesson7.domain.Subject.teachers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Teacher, querySpaceUid=<gen:1>, path=[lesson7.domain.Subject.teachers].<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.clients, querySpaceUid=<gen:2>, path=[lesson7.domain.Subject.teachers].<elements>.clients)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Client, querySpaceUid=<gen:3>, path=[lesson7.domain.Subject.teachers].<elements>.clients.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Teacher.runks, querySpaceUid=<gen:4>, path=[lesson7.domain.Subject.teachers].<elements>.runks)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Runk, querySpaceUid=<gen:5>, path=[lesson7.domain.Subject.teachers].<elements>.runks.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Subject.teachers)
          - SQL table alias mapping - teachers0_
          - alias suffix - 0_
          - suffixed key columns - {subject_1_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Teacher)
                - SQL table alias mapping - teacher1_
                - alias suffix - 1_
                - suffixed key columns - {id1_11_1_}

2021-04-02=11:50:35 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Subject.teachers: select teachers0_.subject_id as subject_1_8_0_, teachers0_.teacher_id as teacher_2_8_0_, teacher1_.id as id1_11_1_, teacher1_.name as name2_11_1_, teacher1_.surname as surname3_11_1_ from subject_teacher teachers0_ inner join teachers teacher1_ on teachers0_.teacher_id=teacher1_.id where teachers0_.subject_id=?
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@787f32b7]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aef4eb8]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : accounts
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a52ca2e]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ad8df52]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : books
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45d6ef73]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f29e26]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f6d27cc]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport.number
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : passport.client
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : passport.client
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : statuses
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@314c8b4a]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26d820eb]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : subjects
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@507d20bb]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9fec931]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : teachers
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : teachers
2021-04-02=11:50:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Teacher.clients)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Teacher.clients, querySpaceUid=<gen:0>, path=[lesson7.domain.Teacher.clients])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Client, querySpaceUid=<gen:1>, path=[lesson7.domain.Teacher.clients].<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.accounts, querySpaceUid=<gen:2>, path=[lesson7.domain.Teacher.clients].<elements>.accounts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Account, querySpaceUid=<gen:3>, path=[lesson7.domain.Teacher.clients].<elements>.accounts.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.books, querySpaceUid=<gen:4>, path=[lesson7.domain.Teacher.clients].<elements>.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Book, querySpaceUid=<gen:5>, path=[lesson7.domain.Teacher.clients].<elements>.books.<elements>)
             - EntityAttributeFetchImpl(entity=lesson7.domain.Passport, querySpaceUid=<gen:6>, path=[lesson7.domain.Teacher.clients].<elements>.passport)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.statuses, querySpaceUid=<gen:7>, path=[lesson7.domain.Teacher.clients].<elements>.statuses)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Status, querySpaceUid=<gen:8>, path=[lesson7.domain.Teacher.clients].<elements>.statuses.<elements>)
             - CollectionAttributeFetchImpl(collection=lesson7.domain.Client.subjects, querySpaceUid=<gen:9>, path=[lesson7.domain.Teacher.clients].<elements>.subjects)
                - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Subject, querySpaceUid=<gen:10>, path=[lesson7.domain.Teacher.clients].<elements>.subjects.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Teacher.clients)
          - SQL table alias mapping - clients0_
          - alias suffix - 0_
          - suffixed key columns - {teacher_2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(passport)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=lesson7.domain.Passport)
                      - SQL table alias mapping - passport2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}

2021-04-02=11:50:35 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Teacher.clients: select clients0_.teacher_id as teacher_2_3_0_, clients0_.client_id as client_i1_3_0_, client1_.id as id1_4_1_, client1_.about as about2_4_1_, client1_.email as email3_4_1_, client1_.name as name4_4_1_, client1_.passport_id as passport7_4_1_, client1_.phone as phone5_4_1_, client1_.surname as surname6_4_1_, passport2_.id as id1_5_2_, passport2_.number as number2_5_2_ from client_teacher clients0_ inner join clients client1_ on clients0_.client_id=client1_.id left outer join passports passport2_ on client1_.passport_id=passport2_.id where clients0_.teacher_id=?
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cbd159f]
2021-04-02=11:50:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b05a99b]
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : teachers
2021-04-02=11:50:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : teachers
2021-04-02=11:50:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=lesson7.domain.Teacher.runks)
    - Returns
       - CollectionReturnImpl(collection=lesson7.domain.Teacher.runks, querySpaceUid=<gen:0>, path=[lesson7.domain.Teacher.runks])
          - (collection element) CollectionFetchableElementEntityGraph(entity=lesson7.domain.Runk, querySpaceUid=<gen:1>, path=[lesson7.domain.Teacher.runks].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=lesson7.domain.Teacher.runks)
          - SQL table alias mapping - runks0_
          - alias suffix - 0_
          - suffixed key columns - {teacher_1_10_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=lesson7.domain.Runk)
                - SQL table alias mapping - runk1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}

2021-04-02=11:50:35 DEBUG CollectionLoader:83 - Static select for collection lesson7.domain.Teacher.runks: select runks0_.teacher_id as teacher_1_10_0_, runks0_.runk_id as runk_id2_10_0_, runk1_.id as id1_6_1_, runk1_.alias as alias2_6_1_ from teacher_runk runks0_ inner join runks runk1_ on runks0_.runk_id=runk1_.id where runks0_.teacher_id=?
2021-04-02=11:50:35 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7a1f8def] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-02=11:50:35 DEBUG Table:520 - No alter strings for table : accounts
2021-04-02=11:50:35 DEBUG Table:520 - No alter strings for table : books
2021-04-02=11:50:35 DEBUG Table:520 - No alter strings for table : client_subject
2021-04-02=11:50:35 DEBUG Table:520 - No alter strings for table : client_teacher
2021-04-02=11:50:35 DEBUG Table:520 - No alter strings for table : clients
2021-04-02=11:50:35 DEBUG Table:520 - No alter strings for table : passports
2021-04-02=11:50:35 DEBUG Table:520 - No alter strings for table : runks
2021-04-02=11:50:35 DEBUG Table:520 - No alter strings for table : statuses
2021-04-02=11:50:35 DEBUG Table:520 - No alter strings for table : subject_teacher
2021-04-02=11:50:35 DEBUG Table:520 - No alter strings for table : subjects
2021-04-02=11:50:35 DEBUG Table:520 - No alter strings for table : teacher_runk
2021-04-02=11:50:35 DEBUG Table:520 - No alter strings for table : teachers
2021-04-02=11:50:37 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-02=11:50:37 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-02=11:50:37 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=11:50:37 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=11:50:37 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-02=11:50:37 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-02=11:50:37 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@100c567f
2021-04-02=11:50:37 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 6adad6e1-5d10-404d-bf7b-d3bcd397a021 (<unnamed>)
2021-04-02=11:50:37 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-02=11:50:37 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-02=11:50:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-02=11:50:37 DEBUG TransactionImpl:81 - begin
2021-04-02=11:50:37 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-04-02=11:50:37 DEBUG SQL:144 - insert into clients (about, email, name, passport_id, phone, surname) values (?, ?, ?, ?, ?, ?)
2021-04-02=11:50:37 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ОШИБКА: повторяющееся значение ключа нарушает ограничение уникальности "uk_srv16ica2c1csub334bxjjb59"
  Подробности: Ключ "(email)=(maria@mail.com)" уже существует.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3195)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3801)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:194)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:179)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:636)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:629)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:624)
	at lesson7.Main.main(Main.java:71)
2021-04-02=11:50:37 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 23505
2021-04-02=11:50:37 ERROR SqlExceptionHelper:142 - ОШИБКА: повторяющееся значение ключа нарушает ограничение уникальности "uk_srv16ica2c1csub334bxjjb59"
  Подробности: Ключ "(email)=(maria@mail.com)" уже существует.
2021-04-02=11:50:49 DEBUG StatusServiceImpl:12 - status. save {id = 0, alias = ADMIN}
2021-04-02=11:50:49 DEBUG StatusDaoImpl:15 - status. save {id = 0, alias = ADMIN}
2021-04-02=11:50:50 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02=11:50:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=11:50:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=11:50:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=11:50:50 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.29.Final
2021-04-02=11:50:50 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-02=11:50:51 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02=11:50:51 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02=11:50:51 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02=11:50:52 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=11:50:52 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=11:50:52 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=11:50:52 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02=11:50:52 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02=11:50:52 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02=11:50:52 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02=11:50:52 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2cdd0d4b
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61d6015a
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@152aa092
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@5939a379
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@366647c2
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3972a855
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@49dc7102
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@49dc7102
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10959ece
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f095f8
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@747edf66
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@747edf66
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=11:50:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b48a640
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d5c822d
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4d5b6aac
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25084a1e
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@28f2a10f
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@7fee8714
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3f6b0be5
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@48f278eb
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e04fa0a
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@741a8937
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6fd83fc1
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@2ed2d9cb
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ee37e5a
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2ea41516
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a44431a
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c7f66c4
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@194bcebf
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17497425
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f0da945
2021-04-02=11:50:54 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4803b726
2021-04-02=11:50:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02=11:50:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02=11:50:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=11:50:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=11:50:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02=11:50:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02=11:50:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02=11:50:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=11:50:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02=11:50:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02=11:50:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02=11:50:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02=11:50:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=11:50:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02=11:50:54 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02=11:50:54 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02=11:50:54 INFO  pooling:121 - HHH10001001: Connection properties: {user=postgres, password=postgres}
2021-04-02=11:50:54 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02=11:50:54 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02=11:50:54 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 1 (min=1)
2021-04-02=11:50:56 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-02=11:50:56 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-02=11:50:56 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-02=11:50:56 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02=11:50:56 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-02=11:50:57 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-02=11:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=11:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=11:50:57 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=11:50:57 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6492fab5]
2021-04-02=11:50:57 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Client
2021-04-02=11:50:57 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:50:57 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-02=11:50:57 DEBUG EntityBinder:873 - Bind entity lesson9.model.Client on table clients
2021-04-02=11:50:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=11:50:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=11:50:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:50:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:id]
2021-04-02=11:50:57 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:50:57 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:50:57 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:50:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-02=11:50:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:about]
2021-04-02=11:50:57 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-02=11:50:57 DEBUG PropertyBinder:266 - Building property about
2021-04-02=11:50:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-02=11:50:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-02=11:50:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:email]
2021-04-02=11:50:57 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-02=11:50:57 DEBUG PropertyBinder:266 - Building property email
2021-04-02=11:50:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=11:50:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:name]
2021-04-02=11:50:57 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=11:50:57 DEBUG PropertyBinder:266 - Building property name
2021-04-02=11:50:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-02=11:50:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-02=11:50:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:phone]
2021-04-02=11:50:57 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-02=11:50:57 DEBUG PropertyBinder:266 - Building property phone
2021-04-02=11:50:57 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Account
2021-04-02=11:50:57 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:50:57 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-02=11:50:57 DEBUG EntityBinder:873 - Bind entity lesson9.model.Account on table accounts
2021-04-02=11:50:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=11:50:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=11:50:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:50:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:id]
2021-04-02=11:50:57 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:50:57 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:50:57 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:50:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-04-02=11:50:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:clientId]
2021-04-02=11:50:57 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-04-02=11:50:57 DEBUG PropertyBinder:266 - Building property clientId
2021-04-02=11:50:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02=11:50:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02=11:50:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:number]
2021-04-02=11:50:57 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02=11:50:57 DEBUG PropertyBinder:266 - Building property number
2021-04-02=11:50:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-02=11:50:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:value]
2021-04-02=11:50:57 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-02=11:50:57 DEBUG PropertyBinder:266 - Building property value
2021-04-02=11:50:57 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Status
2021-04-02=11:50:57 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:50:57 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-02=11:50:57 DEBUG EntityBinder:873 - Bind entity lesson9.model.Status on table statuses
2021-04-02=11:50:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=11:50:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=11:50:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:50:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:id]
2021-04-02=11:50:57 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:50:57 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:50:57 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:50:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02=11:50:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:alias]
2021-04-02=11:50:57 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-02=11:50:57 DEBUG PropertyBinder:266 - Building property alias
2021-04-02=11:50:57 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-02=11:50:57 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-02=11:50:57 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:description]
2021-04-02=11:50:57 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-02=11:50:57 DEBUG PropertyBinder:266 - Building property description
2021-04-02=11:50:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:50:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-02=11:50:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-02=11:50:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02=11:50:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-02=11:50:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:50:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-04-02=11:50:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-02=11:50:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-02=11:50:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:50:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-02=11:50:57 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-02=11:50:57 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-02=11:50:57 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-02=11:50:57 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-02=11:50:57 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-02=11:50:57 DEBUG Settings:68 - SessionFactory name : null
2021-04-02=11:50:57 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-02=11:50:57 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-02=11:50:57 DEBUG Settings:72 - Statistics: disabled
2021-04-02=11:50:57 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-02=11:50:57 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-02=11:50:57 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-02=11:50:57 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-02=11:50:57 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-02=11:50:57 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-02=11:50:57 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-02=11:50:57 DEBUG Settings:82 - Default null ordering: NONE
2021-04-02=11:50:57 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-02=11:50:57 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-02=11:50:57 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-02=11:50:57 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-02=11:50:57 DEBUG Settings:90 - Query language substitutions: {}
2021-04-02=11:50:57 DEBUG Settings:91 - Named query checking : enabled
2021-04-02=11:50:57 DEBUG Settings:93 - Second-level cache: disabled
2021-04-02=11:50:57 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-02=11:50:57 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-02=11:50:57 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-02=11:50:57 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-02=11:50:57 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-02=11:50:57 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-02=11:50:57 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-02=11:50:57 DEBUG Settings:102 - JDBC batch size: 15
2021-04-02=11:50:57 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-02=11:50:57 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-02=11:50:57 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-02=11:50:57 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-02=11:50:57 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-02=11:50:57 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-02=11:50:57 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-02=11:50:57 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-02=11:50:57 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-02=11:50:57 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-02=11:50:57 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-02=11:50:58 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-02=11:50:58 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\target\classes;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.annotation.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jstl.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.jms.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.resource.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.ejb.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\pc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\pc\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\pc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\pc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pc\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\pc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\pc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\pc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\pc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\pc\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\pc\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\pc\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\pc\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Downloads\JetBrains IntelliJ IDEA Ultimate 2020.1 x64\IDEE\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=EET, user.country.format=UA, os.name=Windows 10, java.vm.specification.version=1.8, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, sun.java.command=lesson9.Main, sun.cpu.endian=little, user.home=C:\Users\pc, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=pc, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=D:\Kate\LessonsHillel\02(1)\Hillel-Elementary, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1601e47, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Common Files\Autodesk Shared\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;D:\Program files\Git\cmd;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Java\jdk1.8.0_271\bin;D:\Program Files\PostgreSQL\13\bin;C:\Users\pc\AppData\Local\Microsoft\WindowsApps;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-04-02=11:50:58 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-02=11:50:58 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-02=11:50:58 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3bd7f8dc]
2021-04-02=11:50:58 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=11:50:58 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=11:50:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=11:50:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=11:50:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=11:50:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Client
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:3923 -  Version select: select id from clients where id =?
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=11:50:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b9fc7d]
2021-04-02=11:50:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=11:50:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=11:50:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:50:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=11:50:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Client)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Client, querySpaceUid=<gen:0>, path=lesson9.model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-02=11:50:59 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Status
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:3923 -  Version select: select id from statuses where id =?
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-02=11:50:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1917d90f]
2021-04-02=11:50:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=11:50:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=11:50:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Status)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Status, querySpaceUid=<gen:0>, path=lesson9.model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-02=11:50:59 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Account
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:3923 -  Version select: select id from accounts where id =?
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-02=11:50:59 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-02=11:50:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aac85fa]
2021-04-02=11:50:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-04-02=11:50:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=11:50:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-02=11:50:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:50:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:50:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Account)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Account, querySpaceUid=<gen:0>, path=lesson9.model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-02=11:50:59 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-02=11:50:59 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1bbae752] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-02=11:50:59 DEBUG SQL:144 - alter table accounts add column client_id int4
2021-04-02=11:50:59 DEBUG SQL:144 - alter table accounts add column value float8 not null
2021-04-02=11:50:59 DEBUG Table:520 - No alter strings for table : clients
2021-04-02=11:50:59 DEBUG Table:520 - No alter strings for table : statuses
2021-04-02=11:50:59 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-02=11:50:59 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-02=11:50:59 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=11:50:59 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=11:50:59 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-02=11:50:59 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-02=11:50:59 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bcec6a6
2021-04-02=11:50:59 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 4c52374f-6098-471b-8f7e-95de9167dda4 (<unnamed>)
2021-04-02=11:50:59 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-02=11:51:00 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-02=11:51:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-02=11:51:00 DEBUG TransactionImpl:81 - begin
2021-04-02=11:51:00 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-04-02=11:51:00 DEBUG SQL:144 - insert into statuses (alias, description) values (?, ?)
2021-04-02=11:51:00 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2021-04-02=11:51:00 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-04-02=11:51:00 DEBUG TransactionImpl:98 - committing
2021-04-02=11:51:00 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-02=11:51:00 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-02=11:51:00 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-02=11:51:00 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-04-02=11:51:00 DEBUG EntityPrinter:110 - Listing entities:
2021-04-02=11:51:00 DEBUG EntityPrinter:117 - lesson9.model.Status{alias=ADMIN, description=high level responsibility, id=1}
2021-04-02=11:51:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=11:51:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=11:51:00 DEBUG StatusServiceImpl:19 - status. update {id = 1, alias = ADMIN}
2021-04-02=11:51:00 DEBUG StatusDaoImpl:26 - status. update {id = 1, alias = ADMIN}
2021-04-02=11:51:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-02=11:51:00 DEBUG TransactionImpl:81 - begin
2021-04-02=11:51:00 DEBUG TransactionImpl:98 - committing
2021-04-02=11:51:00 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-02=11:51:00 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-02=11:51:00 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2021-04-02=11:51:00 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-04-02=11:51:00 DEBUG EntityPrinter:110 - Listing entities:
2021-04-02=11:51:00 DEBUG EntityPrinter:117 - lesson9.model.Status{alias=ADMIN, description=high level responsibility, id=1}
2021-04-02=11:51:00 DEBUG SQL:144 - update statuses set alias=?, description=? where id=?
2021-04-02=11:51:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=11:51:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction



2021-04-02=11:53:13 DEBUG StatusServiceImpl:12 - status. save {id = 0, alias = USER}
2021-04-02=11:53:13 DEBUG StatusDaoImpl:15 - status. save {id = 0, alias = USER}
2021-04-02=11:53:13 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02=11:53:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=11:53:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=11:53:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=11:53:14 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.29.Final
2021-04-02=11:53:14 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-02=11:53:15 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02=11:53:15 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02=11:53:15 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02=11:53:16 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=11:53:16 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=11:53:16 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=11:53:16 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02=11:53:16 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02=11:53:16 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02=11:53:16 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02=11:53:16 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2cdd0d4b
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61d6015a
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@152aa092
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@5939a379
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@366647c2
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3972a855
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@49dc7102
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@49dc7102
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10959ece
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f095f8
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@747edf66
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@747edf66
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b48a640
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d5c822d
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4d5b6aac
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25084a1e
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@28f2a10f
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@7fee8714
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3f6b0be5
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@48f278eb
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e04fa0a
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@741a8937
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6fd83fc1
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@2ed2d9cb
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ee37e5a
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2ea41516
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a44431a
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c7f66c4
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@194bcebf
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17497425
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f0da945
2021-04-02=11:53:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4803b726
2021-04-02=11:53:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02=11:53:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02=11:53:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=11:53:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=11:53:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02=11:53:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02=11:53:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02=11:53:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=11:53:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02=11:53:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02=11:53:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02=11:53:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02=11:53:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=11:53:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02=11:53:18 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02=11:53:18 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02=11:53:18 INFO  pooling:121 - HHH10001001: Connection properties: {user=postgres, password=postgres}
2021-04-02=11:53:18 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02=11:53:18 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02=11:53:18 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 1 (min=1)
2021-04-02=11:53:20 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-02=11:53:20 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-02=11:53:20 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-02=11:53:20 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02=11:53:20 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-02=11:53:20 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-02=11:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=11:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=11:53:20 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=11:53:20 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6492fab5]
2021-04-02=11:53:21 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Client
2021-04-02=11:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:53:21 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-02=11:53:21 DEBUG EntityBinder:873 - Bind entity lesson9.model.Client on table clients
2021-04-02=11:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:53:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=11:53:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=11:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:id]
2021-04-02=11:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:53:21 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:53:21 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-02=11:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-02=11:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:about]
2021-04-02=11:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-02=11:53:21 DEBUG PropertyBinder:266 - Building property about
2021-04-02=11:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-02=11:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-02=11:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:email]
2021-04-02=11:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-02=11:53:21 DEBUG PropertyBinder:266 - Building property email
2021-04-02=11:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02=11:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=11:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:name]
2021-04-02=11:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=11:53:21 DEBUG PropertyBinder:266 - Building property name
2021-04-02=11:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-02=11:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-02=11:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:phone]
2021-04-02=11:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-02=11:53:21 DEBUG PropertyBinder:266 - Building property phone
2021-04-02=11:53:21 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Account
2021-04-02=11:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:53:21 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-02=11:53:21 DEBUG EntityBinder:873 - Bind entity lesson9.model.Account on table accounts
2021-04-02=11:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:53:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=11:53:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=11:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:id]
2021-04-02=11:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:53:21 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:53:21 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-02=11:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-04-02=11:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:clientId]
2021-04-02=11:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-04-02=11:53:21 DEBUG PropertyBinder:266 - Building property clientId
2021-04-02=11:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02=11:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02=11:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:number]
2021-04-02=11:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02=11:53:21 DEBUG PropertyBinder:266 - Building property number
2021-04-02=11:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-02=11:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-02=11:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:value]
2021-04-02=11:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-02=11:53:21 DEBUG PropertyBinder:266 - Building property value
2021-04-02=11:53:21 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Status
2021-04-02=11:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:53:21 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-02=11:53:21 DEBUG EntityBinder:873 - Bind entity lesson9.model.Status on table statuses
2021-04-02=11:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:53:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=11:53:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=11:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:id]
2021-04-02=11:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:53:21 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:53:21 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-02=11:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02=11:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:alias]
2021-04-02=11:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-02=11:53:21 DEBUG PropertyBinder:266 - Building property alias
2021-04-02=11:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-02=11:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-02=11:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:description]
2021-04-02=11:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-02=11:53:21 DEBUG PropertyBinder:266 - Building property description
2021-04-02=11:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-02=11:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-02=11:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02=11:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-02=11:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-04-02=11:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-02=11:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-02=11:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-02=11:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-02=11:53:21 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-02=11:53:21 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-02=11:53:21 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-02=11:53:21 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-02=11:53:21 DEBUG Settings:68 - SessionFactory name : null
2021-04-02=11:53:21 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-02=11:53:21 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-02=11:53:21 DEBUG Settings:72 - Statistics: disabled
2021-04-02=11:53:21 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-02=11:53:21 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-02=11:53:21 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-02=11:53:21 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-02=11:53:21 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-02=11:53:21 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-02=11:53:21 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-02=11:53:21 DEBUG Settings:82 - Default null ordering: NONE
2021-04-02=11:53:21 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-02=11:53:21 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-02=11:53:21 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-02=11:53:21 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-02=11:53:21 DEBUG Settings:90 - Query language substitutions: {}
2021-04-02=11:53:21 DEBUG Settings:91 - Named query checking : enabled
2021-04-02=11:53:21 DEBUG Settings:93 - Second-level cache: disabled
2021-04-02=11:53:21 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-02=11:53:21 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-02=11:53:21 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-02=11:53:21 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-02=11:53:21 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-02=11:53:21 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-02=11:53:21 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-02=11:53:21 DEBUG Settings:102 - JDBC batch size: 15
2021-04-02=11:53:21 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-02=11:53:21 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-02=11:53:21 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-02=11:53:21 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-02=11:53:21 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-02=11:53:21 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-02=11:53:21 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-02=11:53:21 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-02=11:53:21 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-02=11:53:21 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-02=11:53:21 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-02=11:53:21 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-02=11:53:21 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\target\classes;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.annotation.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jstl.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.jms.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.resource.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.ejb.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\pc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\pc\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\pc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\pc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pc\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\pc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\pc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\pc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\pc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\pc\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\pc\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\pc\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\pc\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Downloads\JetBrains IntelliJ IDEA Ultimate 2020.1 x64\IDEE\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=EET, user.country.format=UA, os.name=Windows 10, java.vm.specification.version=1.8, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, sun.java.command=lesson9.Main, sun.cpu.endian=little, user.home=C:\Users\pc, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=pc, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=D:\Kate\LessonsHillel\02(1)\Hillel-Elementary, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1601e47, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Common Files\Autodesk Shared\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;D:\Program files\Git\cmd;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Java\jdk1.8.0_271\bin;D:\Program Files\PostgreSQL\13\bin;C:\Users\pc\AppData\Local\Microsoft\WindowsApps;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-04-02=11:53:21 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-02=11:53:21 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-02=11:53:21 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3bd7f8dc]
2021-04-02=11:53:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=11:53:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=11:53:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=11:53:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=11:53:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=11:53:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Client
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:3923 -  Version select: select id from clients where id =?
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=11:53:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b9fc7d]
2021-04-02=11:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=11:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=11:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=11:53:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:53:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:53:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Client)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Client, querySpaceUid=<gen:0>, path=lesson9.model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-02=11:53:22 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Status
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:3923 -  Version select: select id from statuses where id =?
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-02=11:53:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1917d90f]
2021-04-02=11:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=11:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=11:53:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:53:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:53:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Status)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Status, querySpaceUid=<gen:0>, path=lesson9.model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-02=11:53:22 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Account
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:3923 -  Version select: select id from accounts where id =?
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-02=11:53:22 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-02=11:53:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aac85fa]
2021-04-02=11:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-04-02=11:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=11:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-02=11:53:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:53:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:53:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Account)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Account, querySpaceUid=<gen:0>, path=lesson9.model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-02=11:53:22 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-02=11:53:23 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1bbae752] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-02=11:53:23 DEBUG Table:520 - No alter strings for table : accounts
2021-04-02=11:53:23 DEBUG Table:520 - No alter strings for table : clients
2021-04-02=11:53:23 DEBUG Table:520 - No alter strings for table : statuses
2021-04-02=11:53:23 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-02=11:53:23 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-02=11:53:23 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=11:53:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=11:53:23 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-02=11:53:23 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-02=11:53:23 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bcec6a6
2021-04-02=11:53:23 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 35895813-3ced-4a59-bd58-35180eeaf561 (<unnamed>)
2021-04-02=11:53:23 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-02=11:53:23 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-02=11:53:23 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-02=11:53:23 DEBUG TransactionImpl:81 - begin
2021-04-02=11:53:23 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-04-02=11:53:23 DEBUG SQL:144 - insert into statuses (alias, description) values (?, ?)
2021-04-02=11:53:23 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2021-04-02=11:53:23 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-04-02=11:53:23 DEBUG TransactionImpl:98 - committing
2021-04-02=11:53:23 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-02=11:53:23 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-02=11:53:23 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-02=11:53:23 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-04-02=11:53:23 DEBUG EntityPrinter:110 - Listing entities:
2021-04-02=11:53:23 DEBUG EntityPrinter:117 - lesson9.model.Status{alias=USER, description=low level responsibility, id=2}
2021-04-02=11:53:23 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=11:53:23 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=11:53:57 DEBUG AccountServiceImpl:15 - account. save {id = 0, number = 234872}
2021-04-02=11:53:57 DEBUG AccountDaoImpl:17 - client. save {id = 0, email = 234872}
2021-04-02=11:53:57 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02=11:53:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=11:53:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=11:53:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=11:53:58 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.29.Final
2021-04-02=11:53:58 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-02=11:53:59 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02=11:53:59 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02=11:53:59 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02=11:54:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=11:54:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=11:54:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=11:54:00 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02=11:54:00 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02=11:54:00 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02=11:54:00 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02=11:54:00 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@8317c52
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@8317c52
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8317c52
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6f27a732
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2cdd0d4b
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@61d6015a
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4ef37659
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4ef37659
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4ef37659
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@306cf3ea
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@306cf3ea
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@306cf3ea
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@52102734
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@52102734
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@52102734
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@2892dae4
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@2892dae4
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2892dae4
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@5fa07e12
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@5fa07e12
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5fa07e12
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1649b0e6
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1649b0e6
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1649b0e6
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@503d687a
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@503d687a
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@503d687a
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@51f116b8
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@51f116b8
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@26275bef
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@26275bef
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@61386958
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@61386958
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@49dc7102
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@10959ece
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@3e6ef8ad
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3e6ef8ad
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@62230c58
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@62230c58
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@41fecb8b
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@41fecb8b
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@cad498c
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@cad498c
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5ace1ed4
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5ace1ed4
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@693fe6c9
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@693fe6c9
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a4013
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a4013
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@49912c99
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@49912c99
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d29f28
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d29f28
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@793be5ca
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@793be5ca
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@4de4b452
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4de4b452
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7ea9e1e2
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7ea9e1e2
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7ea9e1e2
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3fb1549b
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@2053d869
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2053d869
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2053d869
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4bb33f74
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@73700b80
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@4a7f959b
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4a7f959b
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@63a12c68
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63a12c68
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6d4e5011
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6d4e5011
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@fba92d3
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fba92d3
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16a0ee18
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16a0ee18
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fbdfdcf
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@3bf9ce3e
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3bf9ce3e
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@3bf9ce3e
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53fdffa1
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53fdffa1
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53fdffa1
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@3232a28a
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@28f2a10f
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@56cdfb3b
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@56cdfb3b
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@56cdfb3b
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@35aea049
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@35aea049
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@35aea049
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@22ef9844
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@3f6b0be5
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@5acf93bb
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5acf93bb
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@614ca7df
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@58695725
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58695725
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@2c35e847
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2c35e847
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5ba3f27a
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@741a8937
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@e15b7e8
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@57cf54e1
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57cf54e1
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@434a63ab
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e0f5f7f
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2805d709
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ee37e5a
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ea41516
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3a44431a
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3c7f66c4
2021-04-02=11:54:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@194bcebf
2021-04-02=11:54:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02=11:54:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02=11:54:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=11:54:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=11:54:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02=11:54:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02=11:54:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02=11:54:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=11:54:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02=11:54:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02=11:54:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02=11:54:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02=11:54:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=11:54:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02=11:54:02 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02=11:54:02 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02=11:54:02 INFO  pooling:121 - HHH10001001: Connection properties: {user=postgres, password=postgres}
2021-04-02=11:54:02 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02=11:54:02 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02=11:54:02 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 1 (min=1)
2021-04-02=11:54:05 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-02=11:54:05 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-02=11:54:05 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-02=11:54:05 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02=11:54:05 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-02=11:54:06 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-02=11:54:06 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@61f05988
2021-04-02=11:54:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@61f05988
2021-04-02=11:54:06 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@16a0ee18
2021-04-02=11:54:06 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ebf0f36] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@18920cc]
2021-04-02=11:54:06 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Client
2021-04-02=11:54:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:54:06 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-02=11:54:06 DEBUG EntityBinder:873 - Bind entity lesson9.model.Client on table clients
2021-04-02=11:54:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:54:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=11:54:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=11:54:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:54:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:id]
2021-04-02=11:54:06 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:54:06 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:54:06 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:54:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-02=11:54:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-02=11:54:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:about]
2021-04-02=11:54:06 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-02=11:54:06 DEBUG PropertyBinder:266 - Building property about
2021-04-02=11:54:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-02=11:54:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-02=11:54:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:email]
2021-04-02=11:54:06 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-02=11:54:06 DEBUG PropertyBinder:266 - Building property email
2021-04-02=11:54:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02=11:54:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=11:54:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:name]
2021-04-02=11:54:06 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=11:54:06 DEBUG PropertyBinder:266 - Building property name
2021-04-02=11:54:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-02=11:54:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-02=11:54:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:phone]
2021-04-02=11:54:06 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-02=11:54:06 DEBUG PropertyBinder:266 - Building property phone
2021-04-02=11:54:06 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Account
2021-04-02=11:54:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:54:06 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-02=11:54:06 DEBUG EntityBinder:873 - Bind entity lesson9.model.Account on table accounts
2021-04-02=11:54:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:54:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=11:54:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=11:54:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:54:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:id]
2021-04-02=11:54:06 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:54:06 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:54:06 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:54:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-02=11:54:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-04-02=11:54:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:clientId]
2021-04-02=11:54:06 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-04-02=11:54:06 DEBUG PropertyBinder:266 - Building property clientId
2021-04-02=11:54:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02=11:54:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02=11:54:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:number]
2021-04-02=11:54:06 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02=11:54:06 DEBUG PropertyBinder:266 - Building property number
2021-04-02=11:54:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-02=11:54:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-02=11:54:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:value]
2021-04-02=11:54:06 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-02=11:54:06 DEBUG PropertyBinder:266 - Building property value
2021-04-02=11:54:06 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Status
2021-04-02=11:54:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:54:06 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-02=11:54:06 DEBUG EntityBinder:873 - Bind entity lesson9.model.Status on table statuses
2021-04-02=11:54:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:54:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=11:54:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=11:54:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:54:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:id]
2021-04-02=11:54:06 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:54:06 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:54:06 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:54:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-02=11:54:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02=11:54:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:alias]
2021-04-02=11:54:06 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-02=11:54:06 DEBUG PropertyBinder:266 - Building property alias
2021-04-02=11:54:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-02=11:54:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-02=11:54:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:description]
2021-04-02=11:54:06 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-02=11:54:06 DEBUG PropertyBinder:266 - Building property description
2021-04-02=11:54:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:54:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-02=11:54:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-02=11:54:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02=11:54:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-02=11:54:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:54:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-04-02=11:54:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-02=11:54:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-02=11:54:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:54:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-02=11:54:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-02=11:54:06 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-02=11:54:06 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-02=11:54:06 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-02=11:54:06 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-02=11:54:06 DEBUG Settings:68 - SessionFactory name : null
2021-04-02=11:54:06 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-02=11:54:06 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-02=11:54:06 DEBUG Settings:72 - Statistics: disabled
2021-04-02=11:54:06 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-02=11:54:06 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-02=11:54:06 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-02=11:54:06 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-02=11:54:06 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-02=11:54:06 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-02=11:54:06 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-02=11:54:06 DEBUG Settings:82 - Default null ordering: NONE
2021-04-02=11:54:06 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-02=11:54:06 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-02=11:54:06 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-02=11:54:06 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-02=11:54:06 DEBUG Settings:90 - Query language substitutions: {}
2021-04-02=11:54:06 DEBUG Settings:91 - Named query checking : enabled
2021-04-02=11:54:06 DEBUG Settings:93 - Second-level cache: disabled
2021-04-02=11:54:06 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-02=11:54:06 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-02=11:54:06 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-02=11:54:06 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-02=11:54:06 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-02=11:54:06 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-02=11:54:06 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-02=11:54:06 DEBUG Settings:102 - JDBC batch size: 15
2021-04-02=11:54:06 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-02=11:54:06 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-02=11:54:06 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-02=11:54:06 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-02=11:54:06 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-02=11:54:06 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-02=11:54:06 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-02=11:54:06 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-02=11:54:06 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-02=11:54:06 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-02=11:54:06 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-02=11:54:07 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-02=11:54:07 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\target\classes;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.annotation.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jstl.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.jms.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.resource.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.ejb.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\pc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\pc\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\pc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\pc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pc\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\pc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\pc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\pc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\pc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\pc\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\pc\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\pc\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\pc\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Downloads\JetBrains IntelliJ IDEA Ultimate 2020.1 x64\IDEE\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=EET, user.country.format=UA, os.name=Windows 10, java.vm.specification.version=1.8, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, sun.java.command=lesson9.Main, sun.cpu.endian=little, user.home=C:\Users\pc, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=pc, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=D:\Kate\LessonsHillel\02(1)\Hillel-Elementary, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@299266e2, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Common Files\Autodesk Shared\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;D:\Program files\Git\cmd;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Java\jdk1.8.0_271\bin;D:\Program Files\PostgreSQL\13\bin;C:\Users\pc\AppData\Local\Microsoft\WindowsApps;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-04-02=11:54:07 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-02=11:54:07 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-02=11:54:07 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ebf0f36] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1b11ef33]
2021-04-02=11:54:07 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=11:54:07 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=11:54:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=11:54:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=11:54:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=11:54:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Client
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:3923 -  Version select: select id from clients where id =?
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=11:54:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8f8a80]
2021-04-02=11:54:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=11:54:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=11:54:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:54:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=11:54:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:54:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:54:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Client)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Client, querySpaceUid=<gen:0>, path=lesson9.model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-02=11:54:08 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Status
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:3923 -  Version select: select id from statuses where id =?
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-02=11:54:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22fba58c]
2021-04-02=11:54:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=11:54:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=11:54:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:54:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:54:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Status)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Status, querySpaceUid=<gen:0>, path=lesson9.model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-02=11:54:08 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Account
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:3923 -  Version select: select id from accounts where id =?
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-02=11:54:08 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-02=11:54:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fe88a09]
2021-04-02=11:54:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-04-02=11:54:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=11:54:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-02=11:54:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:54:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:54:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Account)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Account, querySpaceUid=<gen:0>, path=lesson9.model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-02=11:54:08 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-02=11:54:08 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5f404594] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-02=11:54:08 DEBUG Table:520 - No alter strings for table : accounts
2021-04-02=11:54:08 DEBUG Table:520 - No alter strings for table : clients
2021-04-02=11:54:08 DEBUG Table:520 - No alter strings for table : statuses
2021-04-02=11:54:08 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-02=11:54:08 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-02=11:54:08 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=11:54:08 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=11:54:08 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-02=11:54:08 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-02=11:54:08 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6f667ad1
2021-04-02=11:54:08 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 31a63982-f5c7-4c01-8f34-f3a87c3419f6 (<unnamed>)
2021-04-02=11:54:08 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-02=11:54:08 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-02=11:54:09 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-02=11:54:09 DEBUG TransactionImpl:81 - begin
2021-04-02=11:54:09 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-04-02=11:54:09 DEBUG SQL:144 - insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-02=11:54:09 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2021-04-02=11:54:09 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-04-02=11:54:09 DEBUG TransactionImpl:98 - committing
2021-04-02=11:54:09 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-02=11:54:09 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-02=11:54:09 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-02=11:54:09 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-04-02=11:54:09 DEBUG EntityPrinter:110 - Listing entities:
2021-04-02=11:54:09 DEBUG EntityPrinter:117 - lesson9.model.Account{number=234872, clientId=0, id=1, value=5348.43}
2021-04-02=11:54:09 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=11:54:09 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=11:54:56 DEBUG ClientServiceImpl:15 - client. save {id = 0, email = victor@mail.com, phone = true}
2021-04-02=11:54:56 DEBUG ClientDaoImpl:16 - client. save {id = 0, email = victor@mail.com, phone = true}
2021-04-02=11:54:56 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02=11:54:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=11:54:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=11:54:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=11:54:57 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.29.Final
2021-04-02=11:54:57 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-02=11:54:57 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02=11:54:57 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02=11:54:57 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02=11:54:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=11:54:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=11:54:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=11:54:59 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02=11:54:59 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02=11:54:59 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02=11:54:59 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02=11:54:59 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@8317c52
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@8317c52
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8317c52
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6f27a732
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2cdd0d4b
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@61d6015a
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4ef37659
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4ef37659
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4ef37659
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@306cf3ea
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@306cf3ea
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@306cf3ea
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@52102734
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@52102734
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@52102734
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@2892dae4
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@2892dae4
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2892dae4
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@5fa07e12
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@5fa07e12
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5fa07e12
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1649b0e6
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1649b0e6
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1649b0e6
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@503d687a
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@503d687a
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@503d687a
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@51f116b8
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@51f116b8
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@26275bef
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@26275bef
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@61386958
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@61386958
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@49dc7102
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@10959ece
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@3e6ef8ad
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3e6ef8ad
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@62230c58
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@62230c58
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@41fecb8b
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@41fecb8b
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@cad498c
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@cad498c
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5ace1ed4
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5ace1ed4
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@693fe6c9
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@693fe6c9
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a4013
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a4013
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@49912c99
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@49912c99
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d29f28
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d29f28
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@793be5ca
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@793be5ca
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@4de4b452
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4de4b452
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7ea9e1e2
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7ea9e1e2
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7ea9e1e2
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3fb1549b
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@2053d869
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2053d869
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2053d869
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4bb33f74
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@73700b80
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@4a7f959b
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4a7f959b
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@63a12c68
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63a12c68
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6d4e5011
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6d4e5011
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@fba92d3
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fba92d3
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16a0ee18
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16a0ee18
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fbdfdcf
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@3bf9ce3e
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3bf9ce3e
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@3bf9ce3e
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53fdffa1
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53fdffa1
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53fdffa1
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@3232a28a
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@28f2a10f
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@56cdfb3b
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@56cdfb3b
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@56cdfb3b
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@35aea049
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@35aea049
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@35aea049
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@22ef9844
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@3f6b0be5
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@5acf93bb
2021-04-02=11:55:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5acf93bb
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@614ca7df
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@58695725
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58695725
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@2c35e847
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2c35e847
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5ba3f27a
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@741a8937
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@e15b7e8
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@57cf54e1
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57cf54e1
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@434a63ab
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e0f5f7f
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2805d709
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ee37e5a
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ea41516
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3a44431a
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3c7f66c4
2021-04-02=11:55:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@194bcebf
2021-04-02=11:55:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02=11:55:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02=11:55:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=11:55:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=11:55:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02=11:55:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02=11:55:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02=11:55:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=11:55:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02=11:55:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02=11:55:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02=11:55:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02=11:55:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=11:55:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02=11:55:02 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02=11:55:02 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02=11:55:02 INFO  pooling:121 - HHH10001001: Connection properties: {user=postgres, password=postgres}
2021-04-02=11:55:02 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02=11:55:02 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02=11:55:02 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 1 (min=1)
2021-04-02=11:55:05 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-02=11:55:05 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-02=11:55:05 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-02=11:55:05 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02=11:55:05 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-02=11:55:05 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-02=11:55:05 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@61f05988
2021-04-02=11:55:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@61f05988
2021-04-02=11:55:05 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@16a0ee18
2021-04-02=11:55:05 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ebf0f36] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@18920cc]
2021-04-02=11:55:05 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Client
2021-04-02=11:55:05 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:55:05 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-02=11:55:05 DEBUG EntityBinder:873 - Bind entity lesson9.model.Client on table clients
2021-04-02=11:55:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:55:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=11:55:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=11:55:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:55:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:id]
2021-04-02=11:55:06 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:55:06 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:55:06 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:55:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-02=11:55:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-02=11:55:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:about]
2021-04-02=11:55:06 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-02=11:55:06 DEBUG PropertyBinder:266 - Building property about
2021-04-02=11:55:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-02=11:55:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-02=11:55:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:email]
2021-04-02=11:55:06 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-02=11:55:06 DEBUG PropertyBinder:266 - Building property email
2021-04-02=11:55:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02=11:55:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=11:55:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:name]
2021-04-02=11:55:06 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=11:55:06 DEBUG PropertyBinder:266 - Building property name
2021-04-02=11:55:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-02=11:55:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-02=11:55:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:phone]
2021-04-02=11:55:06 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-02=11:55:06 DEBUG PropertyBinder:266 - Building property phone
2021-04-02=11:55:06 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Account
2021-04-02=11:55:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:55:06 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-02=11:55:06 DEBUG EntityBinder:873 - Bind entity lesson9.model.Account on table accounts
2021-04-02=11:55:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:55:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=11:55:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=11:55:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:55:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:id]
2021-04-02=11:55:06 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:55:06 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:55:06 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:55:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-02=11:55:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-04-02=11:55:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:clientId]
2021-04-02=11:55:06 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-04-02=11:55:06 DEBUG PropertyBinder:266 - Building property clientId
2021-04-02=11:55:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02=11:55:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02=11:55:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:number]
2021-04-02=11:55:06 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02=11:55:06 DEBUG PropertyBinder:266 - Building property number
2021-04-02=11:55:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-02=11:55:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-02=11:55:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:value]
2021-04-02=11:55:06 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-02=11:55:06 DEBUG PropertyBinder:266 - Building property value
2021-04-02=11:55:06 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Status
2021-04-02=11:55:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:55:06 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-02=11:55:06 DEBUG EntityBinder:873 - Bind entity lesson9.model.Status on table statuses
2021-04-02=11:55:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:55:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=11:55:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=11:55:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:55:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:id]
2021-04-02=11:55:06 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:55:06 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:55:06 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:55:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-02=11:55:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02=11:55:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:alias]
2021-04-02=11:55:06 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-02=11:55:06 DEBUG PropertyBinder:266 - Building property alias
2021-04-02=11:55:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-02=11:55:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-02=11:55:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:description]
2021-04-02=11:55:06 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-02=11:55:06 DEBUG PropertyBinder:266 - Building property description
2021-04-02=11:55:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:55:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-02=11:55:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-02=11:55:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02=11:55:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-02=11:55:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:55:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-04-02=11:55:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-02=11:55:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-02=11:55:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:55:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-02=11:55:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-02=11:55:06 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-02=11:55:06 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-02=11:55:06 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-02=11:55:06 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-02=11:55:06 DEBUG Settings:68 - SessionFactory name : null
2021-04-02=11:55:06 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-02=11:55:06 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-02=11:55:06 DEBUG Settings:72 - Statistics: disabled
2021-04-02=11:55:06 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-02=11:55:06 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-02=11:55:06 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-02=11:55:06 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-02=11:55:06 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-02=11:55:06 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-02=11:55:06 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-02=11:55:06 DEBUG Settings:82 - Default null ordering: NONE
2021-04-02=11:55:06 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-02=11:55:06 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-02=11:55:06 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-02=11:55:06 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-02=11:55:06 DEBUG Settings:90 - Query language substitutions: {}
2021-04-02=11:55:06 DEBUG Settings:91 - Named query checking : enabled
2021-04-02=11:55:06 DEBUG Settings:93 - Second-level cache: disabled
2021-04-02=11:55:06 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-02=11:55:06 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-02=11:55:06 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-02=11:55:06 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-02=11:55:06 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-02=11:55:06 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-02=11:55:06 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-02=11:55:06 DEBUG Settings:102 - JDBC batch size: 15
2021-04-02=11:55:06 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-02=11:55:06 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-02=11:55:06 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-02=11:55:06 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-02=11:55:06 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-02=11:55:06 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-02=11:55:06 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-02=11:55:06 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-02=11:55:06 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-02=11:55:06 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-02=11:55:06 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-02=11:55:06 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-02=11:55:06 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\target\classes;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.annotation.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jstl.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.jms.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.resource.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.ejb.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\pc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\pc\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\pc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\pc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pc\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\pc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\pc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\pc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\pc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\pc\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\pc\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\pc\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\pc\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Downloads\JetBrains IntelliJ IDEA Ultimate 2020.1 x64\IDEE\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=EET, user.country.format=UA, os.name=Windows 10, java.vm.specification.version=1.8, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, sun.java.command=lesson9.Main, sun.cpu.endian=little, user.home=C:\Users\pc, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=pc, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=D:\Kate\LessonsHillel\02(1)\Hillel-Elementary, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@299266e2, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Common Files\Autodesk Shared\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;D:\Program files\Git\cmd;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Java\jdk1.8.0_271\bin;D:\Program Files\PostgreSQL\13\bin;C:\Users\pc\AppData\Local\Microsoft\WindowsApps;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-04-02=11:55:06 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-02=11:55:06 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-02=11:55:06 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ebf0f36] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1b11ef33]
2021-04-02=11:55:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=11:55:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=11:55:07 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=11:55:07 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=11:55:07 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=11:55:07 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Client
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:3923 -  Version select: select id from clients where id =?
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=11:55:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8f8a80]
2021-04-02=11:55:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=11:55:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=11:55:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:55:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=11:55:07 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:55:07 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:55:07 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Client)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Client, querySpaceUid=<gen:0>, path=lesson9.model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-02=11:55:07 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Status
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:3923 -  Version select: select id from statuses where id =?
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-02=11:55:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22fba58c]
2021-04-02=11:55:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=11:55:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=11:55:07 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:55:07 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:55:07 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Status)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Status, querySpaceUid=<gen:0>, path=lesson9.model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-02=11:55:07 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Account
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:3923 -  Version select: select id from accounts where id =?
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-02=11:55:07 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-02=11:55:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fe88a09]
2021-04-02=11:55:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-04-02=11:55:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=11:55:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-02=11:55:07 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:55:07 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:55:07 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Account)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Account, querySpaceUid=<gen:0>, path=lesson9.model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-02=11:55:07 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-02=11:55:08 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5f404594] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-02=11:55:08 DEBUG Table:520 - No alter strings for table : accounts
2021-04-02=11:55:08 DEBUG Table:520 - No alter strings for table : clients
2021-04-02=11:55:08 DEBUG Table:520 - No alter strings for table : statuses
2021-04-02=11:55:08 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-02=11:55:08 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-02=11:55:08 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=11:55:08 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=11:55:08 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-02=11:55:08 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-02=11:55:08 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6f667ad1
2021-04-02=11:55:08 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 6650fdca-52ea-4e1a-878f-39da47701ad4 (<unnamed>)
2021-04-02=11:55:08 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-02=11:55:08 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-02=11:55:08 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-02=11:55:08 DEBUG TransactionImpl:81 - begin
2021-04-02=11:55:08 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-04-02=11:55:08 DEBUG SQL:144 - insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=11:55:08 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 4
2021-04-02=11:55:08 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-04-02=11:55:08 DEBUG TransactionImpl:98 - committing
2021-04-02=11:55:08 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-02=11:55:08 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-02=11:55:08 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-02=11:55:08 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-04-02=11:55:08 DEBUG EntityPrinter:110 - Listing entities:
2021-04-02=11:55:08 DEBUG EntityPrinter:117 - lesson9.model.Client{phone=380671429773, about=very bad client, name=Victor, id=4, email=victor@mail.com}
2021-04-02=11:55:08 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=11:55:08 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction


2021-04-02=11:56:26 DEBUG ClientServiceImpl:15 - client. save {id = 0, email = kateryna@mail.com, phone = true}
2021-04-02=11:56:26 DEBUG ClientDaoImpl:16 - client. save {id = 0, email = kateryna@mail.com, phone = true}
2021-04-02=11:56:27 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02=11:56:27 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=11:56:27 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=11:56:27 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=11:56:27 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.29.Final
2021-04-02=11:56:27 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-02=11:56:28 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02=11:56:28 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02=11:56:28 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02=11:56:29 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=11:56:29 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=11:56:29 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=11:56:29 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02=11:56:29 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02=11:56:29 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02=11:56:29 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02=11:56:29 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2cdd0d4b
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61d6015a
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@152aa092
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@5939a379
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@366647c2
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3972a855
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@49dc7102
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@49dc7102
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10959ece
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f095f8
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@747edf66
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@747edf66
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b48a640
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d5c822d
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4d5b6aac
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25084a1e
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@28f2a10f
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@7fee8714
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3f6b0be5
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@48f278eb
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=11:56:30 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e04fa0a
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@741a8937
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6fd83fc1
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@2ed2d9cb
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ee37e5a
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2ea41516
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a44431a
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c7f66c4
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@194bcebf
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17497425
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f0da945
2021-04-02=11:56:31 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4803b726
2021-04-02=11:56:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02=11:56:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02=11:56:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=11:56:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=11:56:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02=11:56:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02=11:56:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02=11:56:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=11:56:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02=11:56:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02=11:56:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02=11:56:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02=11:56:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=11:56:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02=11:56:31 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02=11:56:31 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02=11:56:31 INFO  pooling:121 - HHH10001001: Connection properties: {user=postgres, password=postgres}
2021-04-02=11:56:31 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02=11:56:31 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02=11:56:31 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 1 (min=1)
2021-04-02=11:56:33 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-02=11:56:33 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-02=11:56:33 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-02=11:56:33 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02=11:56:33 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-02=11:56:34 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-02=11:56:34 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=11:56:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=11:56:34 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=11:56:34 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6492fab5]
2021-04-02=11:56:34 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Client
2021-04-02=11:56:34 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:56:34 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-02=11:56:34 DEBUG EntityBinder:873 - Bind entity lesson9.model.Client on table clients
2021-04-02=11:56:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:56:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=11:56:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=11:56:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:56:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:id]
2021-04-02=11:56:34 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:56:34 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:56:34 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:56:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-02=11:56:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-02=11:56:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:about]
2021-04-02=11:56:34 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-02=11:56:34 DEBUG PropertyBinder:266 - Building property about
2021-04-02=11:56:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-02=11:56:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-02=11:56:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:email]
2021-04-02=11:56:34 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-02=11:56:34 DEBUG PropertyBinder:266 - Building property email
2021-04-02=11:56:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02=11:56:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=11:56:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:name]
2021-04-02=11:56:34 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=11:56:34 DEBUG PropertyBinder:266 - Building property name
2021-04-02=11:56:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-02=11:56:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-02=11:56:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:phone]
2021-04-02=11:56:34 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-02=11:56:34 DEBUG PropertyBinder:266 - Building property phone
2021-04-02=11:56:34 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Account
2021-04-02=11:56:34 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:56:34 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-02=11:56:34 DEBUG EntityBinder:873 - Bind entity lesson9.model.Account on table accounts
2021-04-02=11:56:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:56:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=11:56:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=11:56:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:56:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:id]
2021-04-02=11:56:34 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:56:34 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:56:34 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:56:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-02=11:56:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-04-02=11:56:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:clientId]
2021-04-02=11:56:34 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-04-02=11:56:34 DEBUG PropertyBinder:266 - Building property clientId
2021-04-02=11:56:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02=11:56:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02=11:56:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:number]
2021-04-02=11:56:34 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02=11:56:34 DEBUG PropertyBinder:266 - Building property number
2021-04-02=11:56:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-02=11:56:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-02=11:56:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:value]
2021-04-02=11:56:34 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-02=11:56:34 DEBUG PropertyBinder:266 - Building property value
2021-04-02=11:56:34 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Status
2021-04-02=11:56:34 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=11:56:34 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-02=11:56:34 DEBUG EntityBinder:873 - Bind entity lesson9.model.Status on table statuses
2021-04-02=11:56:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=11:56:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=11:56:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=11:56:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=11:56:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:id]
2021-04-02=11:56:34 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=11:56:34 DEBUG PropertyBinder:266 - Building property id
2021-04-02=11:56:34 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=11:56:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-02=11:56:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02=11:56:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:alias]
2021-04-02=11:56:34 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-02=11:56:34 DEBUG PropertyBinder:266 - Building property alias
2021-04-02=11:56:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-02=11:56:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-02=11:56:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:description]
2021-04-02=11:56:34 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-02=11:56:34 DEBUG PropertyBinder:266 - Building property description
2021-04-02=11:56:34 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:56:34 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-02=11:56:34 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-02=11:56:34 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02=11:56:34 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-02=11:56:34 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:56:34 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-04-02=11:56:34 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-02=11:56:34 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-02=11:56:34 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=11:56:34 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-02=11:56:34 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-02=11:56:34 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-02=11:56:34 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-02=11:56:34 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-02=11:56:34 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-02=11:56:34 DEBUG Settings:68 - SessionFactory name : null
2021-04-02=11:56:34 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-02=11:56:34 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-02=11:56:34 DEBUG Settings:72 - Statistics: disabled
2021-04-02=11:56:34 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-02=11:56:34 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-02=11:56:34 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-02=11:56:34 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-02=11:56:34 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-02=11:56:34 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-02=11:56:34 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-02=11:56:34 DEBUG Settings:82 - Default null ordering: NONE
2021-04-02=11:56:34 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-02=11:56:34 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-02=11:56:34 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-02=11:56:34 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-02=11:56:34 DEBUG Settings:90 - Query language substitutions: {}
2021-04-02=11:56:34 DEBUG Settings:91 - Named query checking : enabled
2021-04-02=11:56:34 DEBUG Settings:93 - Second-level cache: disabled
2021-04-02=11:56:34 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-02=11:56:34 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-02=11:56:34 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-02=11:56:34 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-02=11:56:34 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-02=11:56:34 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-02=11:56:34 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-02=11:56:34 DEBUG Settings:102 - JDBC batch size: 15
2021-04-02=11:56:34 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-02=11:56:34 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-02=11:56:34 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-02=11:56:34 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-02=11:56:34 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-02=11:56:34 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-02=11:56:34 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-02=11:56:34 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-02=11:56:34 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-02=11:56:34 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-02=11:56:34 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-02=11:56:34 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-02=11:56:34 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\target\classes;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.annotation.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jstl.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.jms.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.resource.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.ejb.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\pc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\pc\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\pc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\pc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pc\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\pc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\pc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\pc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\pc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\pc\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\pc\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\pc\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\pc\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Downloads\JetBrains IntelliJ IDEA Ultimate 2020.1 x64\IDEE\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=EET, user.country.format=UA, os.name=Windows 10, java.vm.specification.version=1.8, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, sun.java.command=lesson9.Main, sun.cpu.endian=little, user.home=C:\Users\pc, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=pc, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=D:\Kate\LessonsHillel\02(1)\Hillel-Elementary, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1601e47, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Common Files\Autodesk Shared\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;D:\Program files\Git\cmd;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Java\jdk1.8.0_271\bin;D:\Program Files\PostgreSQL\13\bin;C:\Users\pc\AppData\Local\Microsoft\WindowsApps;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-04-02=11:56:34 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-02=11:56:34 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-02=11:56:34 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3bd7f8dc]
2021-04-02=11:56:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=11:56:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=11:56:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=11:56:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=11:56:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=11:56:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Client
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:3923 -  Version select: select id from clients where id =?
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=11:56:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b9fc7d]
2021-04-02=11:56:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=11:56:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=11:56:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=11:56:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=11:56:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:56:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:56:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Client)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Client, querySpaceUid=<gen:0>, path=lesson9.model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-02=11:56:35 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Status
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:3923 -  Version select: select id from statuses where id =?
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-02=11:56:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1917d90f]
2021-04-02=11:56:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=11:56:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=11:56:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:56:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:56:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Status)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Status, querySpaceUid=<gen:0>, path=lesson9.model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-02=11:56:35 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Account
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:3923 -  Version select: select id from accounts where id =?
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-02=11:56:35 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-02=11:56:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aac85fa]
2021-04-02=11:56:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-04-02=11:56:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=11:56:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-02=11:56:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=11:56:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=11:56:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Account)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Account, querySpaceUid=<gen:0>, path=lesson9.model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-02=11:56:35 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-02=11:56:36 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1bbae752] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-02=11:56:36 DEBUG Table:520 - No alter strings for table : accounts
2021-04-02=11:56:36 DEBUG Table:520 - No alter strings for table : clients
2021-04-02=11:56:36 DEBUG Table:520 - No alter strings for table : statuses
2021-04-02=11:56:36 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-02=11:56:36 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-02=11:56:36 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=11:56:36 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=11:56:36 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-02=11:56:36 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-02=11:56:36 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bcec6a6
2021-04-02=11:56:36 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: ea8749a1-1aa2-4480-a6bf-620307c23719 (<unnamed>)
2021-04-02=11:56:36 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-02=11:56:36 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-02=11:56:36 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-02=11:56:36 DEBUG TransactionImpl:81 - begin
2021-04-02=11:56:36 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-04-02=11:56:36 DEBUG SQL:144 - insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=11:56:36 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 5
2021-04-02=11:56:36 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-04-02=11:56:36 DEBUG TransactionImpl:98 - committing
2021-04-02=11:56:36 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-02=11:56:36 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-02=11:56:36 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-02=11:56:36 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-04-02=11:56:36 DEBUG EntityPrinter:110 - Listing entities:
2021-04-02=11:56:36 DEBUG EntityPrinter:117 - lesson9.model.Client{phone=380677886256, about=good client, name=Kateryna, id=5, email=kateryna@mail.com}
2021-04-02=11:56:36 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=11:56:36 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction



2021-04-02=11:59:48 ERROR Main:49 - Something wrong in main
java.lang.ArithmeticException
	at lesson9.Main.main(Main.java:20)





2021-04-02=12:10:17 DEBUG ClientServiceImpl:42 - client. getById {id = 4}
2021-04-02=12:10:18 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02=12:10:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:10:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:10:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:10:18 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.29.Final
2021-04-02=12:10:18 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-02=12:10:19 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02=12:10:19 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02=12:10:19 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02=12:10:20 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:10:20 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:10:20 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:10:20 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02=12:10:20 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02=12:10:20 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02=12:10:20 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02=12:10:20 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2cdd0d4b
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61d6015a
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@152aa092
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@49dc7102
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@49dc7102
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10959ece
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f095f8
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@747edf66
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@747edf66
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b48a640
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d5c822d
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4d5b6aac
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25084a1e
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@28f2a10f
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@7fee8714
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3f6b0be5
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@48f278eb
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e04fa0a
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@741a8937
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6fd83fc1
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@2ed2d9cb
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ee37e5a
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2ea41516
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a44431a
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c7f66c4
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@194bcebf
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17497425
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f0da945
2021-04-02=12:10:21 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4803b726
2021-04-02=12:10:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02=12:10:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02=12:10:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:10:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:10:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02=12:10:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02=12:10:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02=12:10:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:10:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02=12:10:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02=12:10:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02=12:10:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02=12:10:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:10:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02=12:10:21 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02=12:10:21 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02=12:10:21 INFO  pooling:121 - HHH10001001: Connection properties: {user=postgres, password=postgres}
2021-04-02=12:10:21 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02=12:10:21 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02=12:10:21 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 1 (min=1)
2021-04-02=12:10:23 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-02=12:10:23 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-02=12:10:23 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-02=12:10:23 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02=12:10:24 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-02=12:10:24 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-02=12:10:24 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=12:10:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=12:10:24 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:10:24 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6492fab5]
2021-04-02=12:10:24 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Client
2021-04-02=12:10:24 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:10:24 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-02=12:10:24 DEBUG EntityBinder:873 - Bind entity lesson9.model.Client on table clients
2021-04-02=12:10:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:10:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:10:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:10:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:10:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:id]
2021-04-02=12:10:24 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:10:24 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:10:24 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:10:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-02=12:10:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-02=12:10:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:about]
2021-04-02=12:10:24 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-02=12:10:24 DEBUG PropertyBinder:266 - Building property about
2021-04-02=12:10:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-02=12:10:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-02=12:10:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:email]
2021-04-02=12:10:24 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-02=12:10:24 DEBUG PropertyBinder:266 - Building property email
2021-04-02=12:10:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02=12:10:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=12:10:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:name]
2021-04-02=12:10:24 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=12:10:24 DEBUG PropertyBinder:266 - Building property name
2021-04-02=12:10:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-02=12:10:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-02=12:10:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:phone]
2021-04-02=12:10:24 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-02=12:10:24 DEBUG PropertyBinder:266 - Building property phone
2021-04-02=12:10:24 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Account
2021-04-02=12:10:24 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:10:24 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-02=12:10:24 DEBUG EntityBinder:873 - Bind entity lesson9.model.Account on table accounts
2021-04-02=12:10:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:10:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:10:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:10:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:10:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:id]
2021-04-02=12:10:24 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:10:24 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:10:24 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:10:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-02=12:10:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-04-02=12:10:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:clientId]
2021-04-02=12:10:24 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-04-02=12:10:24 DEBUG PropertyBinder:266 - Building property clientId
2021-04-02=12:10:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02=12:10:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02=12:10:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:number]
2021-04-02=12:10:24 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02=12:10:24 DEBUG PropertyBinder:266 - Building property number
2021-04-02=12:10:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-02=12:10:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-02=12:10:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:value]
2021-04-02=12:10:24 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-02=12:10:24 DEBUG PropertyBinder:266 - Building property value
2021-04-02=12:10:24 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Status
2021-04-02=12:10:24 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:10:24 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-02=12:10:24 DEBUG EntityBinder:873 - Bind entity lesson9.model.Status on table statuses
2021-04-02=12:10:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:10:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:10:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:10:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:10:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:id]
2021-04-02=12:10:24 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:10:24 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:10:24 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:10:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-02=12:10:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02=12:10:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:alias]
2021-04-02=12:10:24 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-02=12:10:24 DEBUG PropertyBinder:266 - Building property alias
2021-04-02=12:10:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-02=12:10:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-02=12:10:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:description]
2021-04-02=12:10:24 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-02=12:10:24 DEBUG PropertyBinder:266 - Building property description
2021-04-02=12:10:24 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:10:24 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-02=12:10:24 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-02=12:10:24 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02=12:10:24 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-02=12:10:24 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:10:24 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-04-02=12:10:24 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-02=12:10:24 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-02=12:10:24 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:10:24 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-02=12:10:24 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-02=12:10:24 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-02=12:10:24 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-02=12:10:24 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-02=12:10:24 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-02=12:10:24 DEBUG Settings:68 - SessionFactory name : null
2021-04-02=12:10:24 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-02=12:10:24 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-02=12:10:24 DEBUG Settings:72 - Statistics: disabled
2021-04-02=12:10:24 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-02=12:10:24 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-02=12:10:24 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-02=12:10:24 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-02=12:10:24 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-02=12:10:24 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-02=12:10:24 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-02=12:10:24 DEBUG Settings:82 - Default null ordering: NONE
2021-04-02=12:10:24 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-02=12:10:24 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-02=12:10:24 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-02=12:10:24 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-02=12:10:24 DEBUG Settings:90 - Query language substitutions: {}
2021-04-02=12:10:24 DEBUG Settings:91 - Named query checking : enabled
2021-04-02=12:10:24 DEBUG Settings:93 - Second-level cache: disabled
2021-04-02=12:10:24 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-02=12:10:24 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-02=12:10:24 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-02=12:10:24 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-02=12:10:24 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-02=12:10:24 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-02=12:10:24 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-02=12:10:24 DEBUG Settings:102 - JDBC batch size: 15
2021-04-02=12:10:24 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-02=12:10:24 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-02=12:10:24 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-02=12:10:24 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-02=12:10:24 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-02=12:10:24 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-02=12:10:24 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-02=12:10:24 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-02=12:10:24 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-02=12:10:24 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-02=12:10:24 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-02=12:10:25 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-02=12:10:25 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\target\classes;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.annotation.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jstl.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.jms.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.resource.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.ejb.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\pc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\pc\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\pc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\pc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pc\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\pc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\pc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\pc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\pc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\pc\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\pc\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\pc\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\pc\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Downloads\JetBrains IntelliJ IDEA Ultimate 2020.1 x64\IDEE\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=EET, user.country.format=UA, os.name=Windows 10, java.vm.specification.version=1.8, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, sun.java.command=lesson9.Main, sun.cpu.endian=little, user.home=C:\Users\pc, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=pc, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=D:\Kate\LessonsHillel\02(1)\Hillel-Elementary, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1601e47, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Common Files\Autodesk Shared\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;D:\Program files\Git\cmd;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Java\jdk1.8.0_271\bin;D:\Program Files\PostgreSQL\13\bin;C:\Users\pc\AppData\Local\Microsoft\WindowsApps;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-04-02=12:10:25 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-02=12:10:25 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-02=12:10:25 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3bd7f8dc]
2021-04-02=12:10:25 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:10:25 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:10:26 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:10:26 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:10:26 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:10:26 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Client
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:3923 -  Version select: select id from clients where id =?
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=12:10:26 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b9fc7d]
2021-04-02=12:10:26 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=12:10:26 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=12:10:26 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=12:10:26 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=12:10:26 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:10:26 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:10:26 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Client)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Client, querySpaceUid=<gen:0>, path=lesson9.model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-02=12:10:26 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Status
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:3923 -  Version select: select id from statuses where id =?
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-02=12:10:26 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1917d90f]
2021-04-02=12:10:26 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=12:10:26 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=12:10:26 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:10:26 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:10:26 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Status)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Status, querySpaceUid=<gen:0>, path=lesson9.model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-02=12:10:26 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Account
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:3923 -  Version select: select id from accounts where id =?
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-02=12:10:26 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-02=12:10:26 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aac85fa]
2021-04-02=12:10:26 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-04-02=12:10:26 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=12:10:26 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-02=12:10:26 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:10:26 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:10:26 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Account)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Account, querySpaceUid=<gen:0>, path=lesson9.model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-02=12:10:26 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-02=12:10:26 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1bbae752] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-02=12:10:26 DEBUG Table:520 - No alter strings for table : accounts
2021-04-02=12:10:26 DEBUG Table:520 - No alter strings for table : clients
2021-04-02=12:10:26 DEBUG Table:520 - No alter strings for table : statuses
2021-04-02=12:10:26 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-02=12:10:26 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-02=12:10:26 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=12:10:26 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=12:10:26 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-02=12:10:26 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-02=12:10:26 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bcec6a6
2021-04-02=12:10:26 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 95726346-9262-4b39-9eb2-047523f6d6e5 (<unnamed>)
2021-04-02=12:10:26 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-02=12:10:26 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-02=12:10:26 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=12:10:26 DEBUG SessionImpl:1000 - Initializing proxy: [lesson9.model.Client#4]
2021-04-02=12:10:26 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02=12:10:26 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-02=12:10:26 DEBUG TwoPhaseLoad:198 - Resolving attributes for [lesson9.model.Client#4]
2021-04-02=12:10:26 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = very bad client
2021-04-02=12:10:26 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-02=12:10:26 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = victor@mail.com
2021-04-02=12:10:26 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-02=12:10:26 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Victor
2021-04-02=12:10:26 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-02=12:10:26 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380671429773
2021-04-02=12:10:26 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-02=12:10:26 DEBUG TwoPhaseLoad:381 - Done materializing entity [lesson9.model.Client#4]
2021-04-02=12:10:26 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : lesson9.model.Client#4
2021-04-02=12:10:26 DEBUG ClientDaoImpl:55 - client. getById {id = 4, email = victor@mail.com, phone = true}







2021-04-02=12:15:24 DEBUG ClientServiceImpl:42 - client. getById {id = 4}
2021-04-02=12:15:24 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02=12:15:24 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:15:24 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:15:24 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:15:25 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.29.Final
2021-04-02=12:15:25 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-02=12:15:25 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02=12:15:25 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02=12:15:25 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02=12:15:27 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:15:27 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:15:27 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:15:27 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02=12:15:27 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02=12:15:27 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02=12:15:27 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02=12:15:27 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2cdd0d4b
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61d6015a
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@152aa092
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@49dc7102
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@49dc7102
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10959ece
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f095f8
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@747edf66
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@747edf66
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b48a640
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d5c822d
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4d5b6aac
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25084a1e
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@28f2a10f
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@7fee8714
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3f6b0be5
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@48f278eb
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e04fa0a
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@741a8937
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6fd83fc1
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@2ed2d9cb
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ee37e5a
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2ea41516
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a44431a
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c7f66c4
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@194bcebf
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17497425
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f0da945
2021-04-02=12:15:28 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4803b726
2021-04-02=12:15:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02=12:15:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02=12:15:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:15:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:15:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02=12:15:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02=12:15:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02=12:15:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:15:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02=12:15:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02=12:15:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02=12:15:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02=12:15:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:15:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02=12:15:28 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02=12:15:29 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02=12:15:29 INFO  pooling:121 - HHH10001001: Connection properties: {user=postgres, password=postgres}
2021-04-02=12:15:29 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02=12:15:29 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02=12:15:29 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 1 (min=1)
2021-04-02=12:15:30 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-02=12:15:30 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-02=12:15:30 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-02=12:15:31 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02=12:15:31 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-02=12:15:31 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-02=12:15:31 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=12:15:31 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=12:15:31 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:15:31 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6492fab5]
2021-04-02=12:15:31 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Client
2021-04-02=12:15:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:15:31 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-02=12:15:31 DEBUG EntityBinder:873 - Bind entity lesson9.model.Client on table clients
2021-04-02=12:15:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:15:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:15:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:15:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:15:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:id]
2021-04-02=12:15:31 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:15:31 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:15:31 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:15:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-02=12:15:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-02=12:15:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:about]
2021-04-02=12:15:31 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-02=12:15:31 DEBUG PropertyBinder:266 - Building property about
2021-04-02=12:15:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-02=12:15:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-02=12:15:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:email]
2021-04-02=12:15:31 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-02=12:15:31 DEBUG PropertyBinder:266 - Building property email
2021-04-02=12:15:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02=12:15:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=12:15:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:name]
2021-04-02=12:15:31 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=12:15:31 DEBUG PropertyBinder:266 - Building property name
2021-04-02=12:15:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-02=12:15:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-02=12:15:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:phone]
2021-04-02=12:15:31 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-02=12:15:31 DEBUG PropertyBinder:266 - Building property phone
2021-04-02=12:15:31 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Account
2021-04-02=12:15:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:15:31 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-02=12:15:31 DEBUG EntityBinder:873 - Bind entity lesson9.model.Account on table accounts
2021-04-02=12:15:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:15:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:15:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:15:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:15:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:id]
2021-04-02=12:15:31 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:15:31 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:15:31 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:15:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-02=12:15:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-04-02=12:15:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:clientId]
2021-04-02=12:15:31 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-04-02=12:15:31 DEBUG PropertyBinder:266 - Building property clientId
2021-04-02=12:15:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02=12:15:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02=12:15:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:number]
2021-04-02=12:15:31 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02=12:15:31 DEBUG PropertyBinder:266 - Building property number
2021-04-02=12:15:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-02=12:15:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-02=12:15:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:value]
2021-04-02=12:15:31 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-02=12:15:31 DEBUG PropertyBinder:266 - Building property value
2021-04-02=12:15:31 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Status
2021-04-02=12:15:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:15:31 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-02=12:15:31 DEBUG EntityBinder:873 - Bind entity lesson9.model.Status on table statuses
2021-04-02=12:15:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:15:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:15:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:15:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:15:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:id]
2021-04-02=12:15:31 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:15:31 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:15:31 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:15:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-02=12:15:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02=12:15:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:alias]
2021-04-02=12:15:31 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-02=12:15:31 DEBUG PropertyBinder:266 - Building property alias
2021-04-02=12:15:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-02=12:15:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-02=12:15:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:description]
2021-04-02=12:15:31 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-02=12:15:31 DEBUG PropertyBinder:266 - Building property description
2021-04-02=12:15:31 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:15:31 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-02=12:15:31 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-02=12:15:31 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02=12:15:31 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-02=12:15:31 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:15:31 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-04-02=12:15:31 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-02=12:15:31 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-02=12:15:31 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:15:31 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-02=12:15:31 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-02=12:15:31 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-02=12:15:31 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-02=12:15:31 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-02=12:15:31 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-02=12:15:31 DEBUG Settings:68 - SessionFactory name : null
2021-04-02=12:15:31 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-02=12:15:31 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-02=12:15:31 DEBUG Settings:72 - Statistics: disabled
2021-04-02=12:15:31 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-02=12:15:31 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-02=12:15:31 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-02=12:15:31 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-02=12:15:31 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-02=12:15:31 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-02=12:15:31 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-02=12:15:31 DEBUG Settings:82 - Default null ordering: NONE
2021-04-02=12:15:31 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-02=12:15:31 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-02=12:15:31 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-02=12:15:31 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-02=12:15:31 DEBUG Settings:90 - Query language substitutions: {}
2021-04-02=12:15:31 DEBUG Settings:91 - Named query checking : enabled
2021-04-02=12:15:31 DEBUG Settings:93 - Second-level cache: disabled
2021-04-02=12:15:31 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-02=12:15:31 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-02=12:15:31 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-02=12:15:31 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-02=12:15:31 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-02=12:15:31 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-02=12:15:31 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-02=12:15:31 DEBUG Settings:102 - JDBC batch size: 15
2021-04-02=12:15:31 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-02=12:15:31 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-02=12:15:31 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-02=12:15:31 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-02=12:15:31 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-02=12:15:31 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-02=12:15:31 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-02=12:15:31 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-02=12:15:31 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-02=12:15:31 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-02=12:15:31 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-02=12:15:32 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-02=12:15:32 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\target\classes;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.annotation.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jstl.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.jms.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.resource.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.ejb.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\pc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\pc\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\pc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\pc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pc\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\pc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\pc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\pc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\pc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\pc\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\pc\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\pc\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\pc\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Downloads\JetBrains IntelliJ IDEA Ultimate 2020.1 x64\IDEE\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=EET, user.country.format=UA, os.name=Windows 10, java.vm.specification.version=1.8, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, sun.java.command=lesson9.Main, sun.cpu.endian=little, user.home=C:\Users\pc, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=pc, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=D:\Kate\LessonsHillel\02(1)\Hillel-Elementary, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1601e47, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Common Files\Autodesk Shared\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;D:\Program files\Git\cmd;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Java\jdk1.8.0_271\bin;D:\Program Files\PostgreSQL\13\bin;C:\Users\pc\AppData\Local\Microsoft\WindowsApps;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-04-02=12:15:32 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-02=12:15:32 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-02=12:15:32 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3bd7f8dc]
2021-04-02=12:15:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:15:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:15:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:15:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:15:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:15:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Client
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:3923 -  Version select: select id from clients where id =?
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=12:15:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b9fc7d]
2021-04-02=12:15:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=12:15:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=12:15:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=12:15:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=12:15:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:15:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:15:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Client)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Client, querySpaceUid=<gen:0>, path=lesson9.model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-02=12:15:33 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Status
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:3923 -  Version select: select id from statuses where id =?
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-02=12:15:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1917d90f]
2021-04-02=12:15:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=12:15:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=12:15:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:15:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:15:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Status)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Status, querySpaceUid=<gen:0>, path=lesson9.model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-02=12:15:33 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Account
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:3923 -  Version select: select id from accounts where id =?
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-02=12:15:33 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-02=12:15:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aac85fa]
2021-04-02=12:15:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-04-02=12:15:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=12:15:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-02=12:15:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:15:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:15:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Account)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Account, querySpaceUid=<gen:0>, path=lesson9.model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-02=12:15:33 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-02=12:15:33 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1bbae752] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-02=12:15:33 DEBUG Table:520 - No alter strings for table : accounts
2021-04-02=12:15:33 DEBUG Table:520 - No alter strings for table : clients
2021-04-02=12:15:33 DEBUG Table:520 - No alter strings for table : statuses
2021-04-02=12:15:33 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-02=12:15:33 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-02=12:15:33 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=12:15:33 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=12:15:33 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-02=12:15:33 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-02=12:15:33 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bcec6a6
2021-04-02=12:15:33 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: f02baac4-657a-474d-b77d-87ade1f75255 (<unnamed>)
2021-04-02=12:15:33 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-02=12:15:33 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-02=12:15:33 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=12:15:33 DEBUG SessionImpl:1000 - Initializing proxy: [lesson9.model.Client#4]
2021-04-02=12:15:33 DEBUG SQL:144 - select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02=12:15:33 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-04-02=12:15:34 DEBUG TwoPhaseLoad:198 - Resolving attributes for [lesson9.model.Client#4]
2021-04-02=12:15:34 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = very bad client
2021-04-02=12:15:34 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-02=12:15:34 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = victor@mail.com
2021-04-02=12:15:34 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-02=12:15:34 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Victor
2021-04-02=12:15:34 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-02=12:15:34 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380671429773
2021-04-02=12:15:34 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-02=12:15:34 DEBUG TwoPhaseLoad:381 - Done materializing entity [lesson9.model.Client#4]
2021-04-02=12:15:34 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : lesson9.model.Client#4
2021-04-02=12:15:34 DEBUG ClientDaoImpl:55 - client. getById {id = 4, email = victor@mail.com, phone = 380671429773}
2021-04-02=12:18:47 DEBUG ClientServiceImpl:15 - client. save {id = 0, email = kateryna1@mail.com, phone = 380677886257}
2021-04-02=12:18:47 DEBUG ClientDaoImpl:16 - client. save {id = 0, email = kateryna1@mail.com, phone = 380677886257}
2021-04-02=12:18:47 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02=12:18:47 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:18:47 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:18:47 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:18:47 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.29.Final
2021-04-02=12:18:47 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-02=12:18:48 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02=12:18:48 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02=12:18:48 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02=12:18:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:18:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:18:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:18:49 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02=12:18:49 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02=12:18:49 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02=12:18:49 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02=12:18:49 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2cdd0d4b
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61d6015a
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@152aa092
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@49dc7102
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@49dc7102
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10959ece
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f095f8
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@747edf66
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@747edf66
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b48a640
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d5c822d
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4d5b6aac
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25084a1e
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@28f2a10f
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@7fee8714
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3f6b0be5
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@48f278eb
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e04fa0a
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@741a8937
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6fd83fc1
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@2ed2d9cb
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ee37e5a
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2ea41516
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a44431a
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c7f66c4
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@194bcebf
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17497425
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f0da945
2021-04-02=12:18:51 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4803b726
2021-04-02=12:18:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02=12:18:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02=12:18:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:18:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:18:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02=12:18:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02=12:18:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02=12:18:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:18:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02=12:18:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02=12:18:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02=12:18:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02=12:18:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:18:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02=12:18:52 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02=12:18:52 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02=12:18:52 INFO  pooling:121 - HHH10001001: Connection properties: {user=postgres, password=postgres}
2021-04-02=12:18:52 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02=12:18:52 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02=12:18:52 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 1 (min=1)
2021-04-02=12:18:54 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-02=12:18:54 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-02=12:18:54 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-02=12:18:54 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02=12:18:54 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-02=12:18:54 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-02=12:18:54 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=12:18:54 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=12:18:54 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:18:54 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6492fab5]
2021-04-02=12:18:55 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Client
2021-04-02=12:18:55 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:18:55 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-02=12:18:55 DEBUG EntityBinder:873 - Bind entity lesson9.model.Client on table clients
2021-04-02=12:18:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:18:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:18:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:18:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:18:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:id]
2021-04-02=12:18:55 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:18:55 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:18:55 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:18:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-02=12:18:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-02=12:18:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:about]
2021-04-02=12:18:55 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-02=12:18:55 DEBUG PropertyBinder:266 - Building property about
2021-04-02=12:18:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-02=12:18:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-02=12:18:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:email]
2021-04-02=12:18:55 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-02=12:18:55 DEBUG PropertyBinder:266 - Building property email
2021-04-02=12:18:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02=12:18:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=12:18:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:name]
2021-04-02=12:18:55 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=12:18:55 DEBUG PropertyBinder:266 - Building property name
2021-04-02=12:18:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-02=12:18:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-02=12:18:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:phone]
2021-04-02=12:18:55 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-02=12:18:55 DEBUG PropertyBinder:266 - Building property phone
2021-04-02=12:18:55 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Account
2021-04-02=12:18:55 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:18:55 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-02=12:18:55 DEBUG EntityBinder:873 - Bind entity lesson9.model.Account on table accounts
2021-04-02=12:18:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:18:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:18:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:18:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:18:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:id]
2021-04-02=12:18:55 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:18:55 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:18:55 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:18:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-02=12:18:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-04-02=12:18:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:clientId]
2021-04-02=12:18:55 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-04-02=12:18:55 DEBUG PropertyBinder:266 - Building property clientId
2021-04-02=12:18:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02=12:18:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02=12:18:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:number]
2021-04-02=12:18:55 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02=12:18:55 DEBUG PropertyBinder:266 - Building property number
2021-04-02=12:18:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-02=12:18:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-02=12:18:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:value]
2021-04-02=12:18:55 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-02=12:18:55 DEBUG PropertyBinder:266 - Building property value
2021-04-02=12:18:55 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Status
2021-04-02=12:18:55 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:18:55 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-02=12:18:55 DEBUG EntityBinder:873 - Bind entity lesson9.model.Status on table statuses
2021-04-02=12:18:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:18:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:18:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:18:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:18:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:id]
2021-04-02=12:18:55 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:18:55 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:18:55 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:18:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-02=12:18:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02=12:18:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:alias]
2021-04-02=12:18:55 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-02=12:18:55 DEBUG PropertyBinder:266 - Building property alias
2021-04-02=12:18:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-02=12:18:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-02=12:18:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:description]
2021-04-02=12:18:55 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-02=12:18:55 DEBUG PropertyBinder:266 - Building property description
2021-04-02=12:18:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:18:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-02=12:18:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-02=12:18:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02=12:18:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-02=12:18:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:18:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-04-02=12:18:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-02=12:18:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-02=12:18:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:18:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-02=12:18:55 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-02=12:18:55 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-02=12:18:55 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-02=12:18:55 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-02=12:18:55 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-02=12:18:55 DEBUG Settings:68 - SessionFactory name : null
2021-04-02=12:18:55 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-02=12:18:55 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-02=12:18:55 DEBUG Settings:72 - Statistics: disabled
2021-04-02=12:18:55 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-02=12:18:55 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-02=12:18:55 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-02=12:18:55 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-02=12:18:55 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-02=12:18:55 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-02=12:18:55 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-02=12:18:55 DEBUG Settings:82 - Default null ordering: NONE
2021-04-02=12:18:55 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-02=12:18:55 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-02=12:18:55 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-02=12:18:55 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-02=12:18:55 DEBUG Settings:90 - Query language substitutions: {}
2021-04-02=12:18:55 DEBUG Settings:91 - Named query checking : enabled
2021-04-02=12:18:55 DEBUG Settings:93 - Second-level cache: disabled
2021-04-02=12:18:55 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-02=12:18:55 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-02=12:18:55 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-02=12:18:55 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-02=12:18:55 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-02=12:18:55 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-02=12:18:55 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-02=12:18:55 DEBUG Settings:102 - JDBC batch size: 15
2021-04-02=12:18:55 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-02=12:18:55 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-02=12:18:55 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-02=12:18:55 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-02=12:18:55 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-02=12:18:55 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-02=12:18:55 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-02=12:18:55 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-02=12:18:55 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-02=12:18:55 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-02=12:18:55 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-02=12:18:55 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-02=12:18:55 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\target\classes;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.annotation.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jstl.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.jms.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.resource.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.ejb.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\pc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\pc\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\pc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\pc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pc\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\pc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\pc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\pc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\pc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\pc\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\pc\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\pc\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\pc\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Downloads\JetBrains IntelliJ IDEA Ultimate 2020.1 x64\IDEE\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=EET, user.country.format=UA, os.name=Windows 10, java.vm.specification.version=1.8, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, sun.java.command=lesson9.Main, sun.cpu.endian=little, user.home=C:\Users\pc, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=pc, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=D:\Kate\LessonsHillel\02(1)\Hillel-Elementary, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1601e47, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Common Files\Autodesk Shared\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;D:\Program files\Git\cmd;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Java\jdk1.8.0_271\bin;D:\Program Files\PostgreSQL\13\bin;C:\Users\pc\AppData\Local\Microsoft\WindowsApps;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-04-02=12:18:55 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-02=12:18:55 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-02=12:18:55 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3bd7f8dc]
2021-04-02=12:18:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:18:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:18:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:18:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:18:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:18:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Client
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:3923 -  Version select: select id from clients where id =?
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=12:18:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b9fc7d]
2021-04-02=12:18:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=12:18:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=12:18:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=12:18:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=12:18:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:18:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:18:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Client)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Client, querySpaceUid=<gen:0>, path=lesson9.model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-02=12:18:56 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Status
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:3923 -  Version select: select id from statuses where id =?
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-02=12:18:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1917d90f]
2021-04-02=12:18:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=12:18:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=12:18:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:18:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:18:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Status)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Status, querySpaceUid=<gen:0>, path=lesson9.model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-02=12:18:56 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Account
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:3923 -  Version select: select id from accounts where id =?
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-02=12:18:56 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-02=12:18:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aac85fa]
2021-04-02=12:18:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-04-02=12:18:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=12:18:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-02=12:18:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:18:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:18:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Account)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Account, querySpaceUid=<gen:0>, path=lesson9.model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-02=12:18:56 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-02=12:18:57 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1bbae752] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-02=12:18:57 DEBUG Table:520 - No alter strings for table : accounts
2021-04-02=12:18:57 DEBUG Table:520 - No alter strings for table : clients
2021-04-02=12:18:57 DEBUG Table:520 - No alter strings for table : statuses
2021-04-02=12:18:57 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-02=12:18:57 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-02=12:18:57 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=12:18:57 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=12:18:57 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-02=12:18:57 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-02=12:18:57 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bcec6a6
2021-04-02=12:18:57 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: b63ad1db-e1db-459a-b536-0601081cf538 (<unnamed>)
2021-04-02=12:18:57 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-02=12:18:57 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-02=12:18:57 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-02=12:18:57 DEBUG TransactionImpl:81 - begin
2021-04-02=12:18:57 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-04-02=12:18:57 DEBUG SQL:144 - insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=12:18:57 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 6
2021-04-02=12:18:57 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-04-02=12:18:57 DEBUG TransactionImpl:98 - committing
2021-04-02=12:18:57 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-02=12:18:57 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-02=12:18:57 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-02=12:18:57 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-04-02=12:18:57 DEBUG EntityPrinter:110 - Listing entities:
2021-04-02=12:18:57 DEBUG EntityPrinter:117 - lesson9.model.Client{phone=380677886257, about=good client, name=Kateryna, id=6, email=kateryna1@mail.com}
2021-04-02=12:18:57 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=12:18:57 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=12:19:29 DEBUG ClientServiceImpl:15 - client. save {id = 0, email = kateryna21@mail.com, phone = 380677882257}
2021-04-02=12:19:29 DEBUG ClientDaoImpl:16 - client. save {id = 0, email = kateryna21@mail.com, phone = 380677882257}
2021-04-02=12:19:30 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02=12:19:30 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:19:30 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:19:30 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:19:30 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.29.Final
2021-04-02=12:19:30 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-02=12:19:31 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02=12:19:31 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02=12:19:31 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02=12:19:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:19:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:19:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:19:32 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02=12:19:32 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02=12:19:32 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02=12:19:32 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02=12:19:32 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2cdd0d4b
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61d6015a
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@152aa092
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@49dc7102
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@49dc7102
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10959ece
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f095f8
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@747edf66
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@747edf66
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b48a640
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d5c822d
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4d5b6aac
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25084a1e
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@28f2a10f
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@7fee8714
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3f6b0be5
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@48f278eb
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e04fa0a
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@741a8937
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6fd83fc1
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@2ed2d9cb
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ee37e5a
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2ea41516
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a44431a
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c7f66c4
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@194bcebf
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17497425
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f0da945
2021-04-02=12:19:33 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4803b726
2021-04-02=12:19:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02=12:19:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02=12:19:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:19:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:19:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02=12:19:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02=12:19:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02=12:19:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:19:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02=12:19:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02=12:19:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02=12:19:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02=12:19:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:19:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02=12:19:33 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02=12:19:33 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02=12:19:33 INFO  pooling:121 - HHH10001001: Connection properties: {user=postgres, password=postgres}
2021-04-02=12:19:33 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02=12:19:34 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02=12:19:34 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 1 (min=1)
2021-04-02=12:19:35 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-02=12:19:35 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-02=12:19:35 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-02=12:19:36 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02=12:19:36 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-02=12:19:36 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-02=12:19:36 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=12:19:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=12:19:36 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:19:36 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6492fab5]
2021-04-02=12:19:36 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Client
2021-04-02=12:19:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:19:36 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-02=12:19:36 DEBUG EntityBinder:873 - Bind entity lesson9.model.Client on table clients
2021-04-02=12:19:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:19:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:19:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:19:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:19:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:id]
2021-04-02=12:19:36 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:19:36 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:19:36 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:19:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-02=12:19:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-02=12:19:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:about]
2021-04-02=12:19:36 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-02=12:19:36 DEBUG PropertyBinder:266 - Building property about
2021-04-02=12:19:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-02=12:19:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-02=12:19:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:email]
2021-04-02=12:19:36 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-02=12:19:36 DEBUG PropertyBinder:266 - Building property email
2021-04-02=12:19:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02=12:19:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=12:19:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:name]
2021-04-02=12:19:36 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=12:19:36 DEBUG PropertyBinder:266 - Building property name
2021-04-02=12:19:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-02=12:19:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-02=12:19:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:phone]
2021-04-02=12:19:36 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-02=12:19:36 DEBUG PropertyBinder:266 - Building property phone
2021-04-02=12:19:36 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Account
2021-04-02=12:19:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:19:36 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-02=12:19:36 DEBUG EntityBinder:873 - Bind entity lesson9.model.Account on table accounts
2021-04-02=12:19:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:19:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:19:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:19:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:19:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:id]
2021-04-02=12:19:36 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:19:36 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:19:36 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:19:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-02=12:19:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-04-02=12:19:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:clientId]
2021-04-02=12:19:36 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-04-02=12:19:36 DEBUG PropertyBinder:266 - Building property clientId
2021-04-02=12:19:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02=12:19:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02=12:19:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:number]
2021-04-02=12:19:36 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02=12:19:36 DEBUG PropertyBinder:266 - Building property number
2021-04-02=12:19:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-02=12:19:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-02=12:19:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:value]
2021-04-02=12:19:36 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-02=12:19:36 DEBUG PropertyBinder:266 - Building property value
2021-04-02=12:19:36 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Status
2021-04-02=12:19:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:19:36 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-02=12:19:36 DEBUG EntityBinder:873 - Bind entity lesson9.model.Status on table statuses
2021-04-02=12:19:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:19:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:19:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:19:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:19:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:id]
2021-04-02=12:19:36 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:19:36 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:19:36 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:19:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-02=12:19:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02=12:19:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:alias]
2021-04-02=12:19:36 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-02=12:19:36 DEBUG PropertyBinder:266 - Building property alias
2021-04-02=12:19:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-02=12:19:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-02=12:19:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:description]
2021-04-02=12:19:36 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-02=12:19:36 DEBUG PropertyBinder:266 - Building property description
2021-04-02=12:19:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:19:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-02=12:19:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-02=12:19:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02=12:19:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-02=12:19:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:19:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-04-02=12:19:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-02=12:19:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-02=12:19:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:19:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-02=12:19:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-02=12:19:36 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-02=12:19:36 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-02=12:19:36 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-02=12:19:37 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-02=12:19:37 DEBUG Settings:68 - SessionFactory name : null
2021-04-02=12:19:37 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-02=12:19:37 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-02=12:19:37 DEBUG Settings:72 - Statistics: disabled
2021-04-02=12:19:37 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-02=12:19:37 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-02=12:19:37 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-02=12:19:37 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-02=12:19:37 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-02=12:19:37 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-02=12:19:37 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-02=12:19:37 DEBUG Settings:82 - Default null ordering: NONE
2021-04-02=12:19:37 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-02=12:19:37 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-02=12:19:37 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-02=12:19:37 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-02=12:19:37 DEBUG Settings:90 - Query language substitutions: {}
2021-04-02=12:19:37 DEBUG Settings:91 - Named query checking : enabled
2021-04-02=12:19:37 DEBUG Settings:93 - Second-level cache: disabled
2021-04-02=12:19:37 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-02=12:19:37 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-02=12:19:37 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-02=12:19:37 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-02=12:19:37 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-02=12:19:37 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-02=12:19:37 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-02=12:19:37 DEBUG Settings:102 - JDBC batch size: 15
2021-04-02=12:19:37 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-02=12:19:37 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-02=12:19:37 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-02=12:19:37 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-02=12:19:37 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-02=12:19:37 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-02=12:19:37 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-02=12:19:37 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-02=12:19:37 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-02=12:19:37 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-02=12:19:37 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-02=12:19:37 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-02=12:19:37 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\target\classes;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.annotation.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jstl.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.jms.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.resource.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.ejb.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\pc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\pc\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\pc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\pc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pc\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\pc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\pc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\pc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\pc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\pc\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\pc\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\pc\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\pc\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Downloads\JetBrains IntelliJ IDEA Ultimate 2020.1 x64\IDEE\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=EET, user.country.format=UA, os.name=Windows 10, java.vm.specification.version=1.8, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, sun.java.command=lesson9.Main, sun.cpu.endian=little, user.home=C:\Users\pc, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=pc, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=D:\Kate\LessonsHillel\02(1)\Hillel-Elementary, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1601e47, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Common Files\Autodesk Shared\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;D:\Program files\Git\cmd;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Java\jdk1.8.0_271\bin;D:\Program Files\PostgreSQL\13\bin;C:\Users\pc\AppData\Local\Microsoft\WindowsApps;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-04-02=12:19:37 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-02=12:19:37 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-02=12:19:37 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3bd7f8dc]
2021-04-02=12:19:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:19:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:19:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:19:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:19:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:19:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Client
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:3923 -  Version select: select id from clients where id =?
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=12:19:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b9fc7d]
2021-04-02=12:19:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=12:19:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=12:19:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=12:19:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=12:19:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:19:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:19:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Client)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Client, querySpaceUid=<gen:0>, path=lesson9.model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-02=12:19:38 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Status
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:3923 -  Version select: select id from statuses where id =?
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-02=12:19:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1917d90f]
2021-04-02=12:19:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=12:19:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=12:19:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:19:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:19:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Status)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Status, querySpaceUid=<gen:0>, path=lesson9.model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-02=12:19:38 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Account
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:3923 -  Version select: select id from accounts where id =?
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-02=12:19:38 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-02=12:19:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aac85fa]
2021-04-02=12:19:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-04-02=12:19:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=12:19:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-02=12:19:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:19:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:19:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Account)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Account, querySpaceUid=<gen:0>, path=lesson9.model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-02=12:19:38 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-02=12:19:38 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1bbae752] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-02=12:19:39 DEBUG Table:520 - No alter strings for table : accounts
2021-04-02=12:19:39 DEBUG Table:520 - No alter strings for table : clients
2021-04-02=12:19:39 DEBUG Table:520 - No alter strings for table : statuses
2021-04-02=12:19:39 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-02=12:19:39 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-02=12:19:39 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=12:19:39 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=12:19:39 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-02=12:19:39 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-02=12:19:39 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bcec6a6
2021-04-02=12:19:39 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: bbdd6125-c778-4aae-84ba-af536b0a3f3d (<unnamed>)
2021-04-02=12:19:39 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-02=12:19:39 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-02=12:19:39 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-02=12:19:39 DEBUG TransactionImpl:81 - begin
2021-04-02=12:19:39 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-04-02=12:19:39 DEBUG SQL:144 - insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=12:19:39 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 7
2021-04-02=12:19:39 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-04-02=12:19:39 DEBUG TransactionImpl:98 - committing
2021-04-02=12:19:39 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-02=12:19:39 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-02=12:19:39 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-04-02=12:19:39 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-04-02=12:19:39 DEBUG EntityPrinter:110 - Listing entities:
2021-04-02=12:19:39 DEBUG EntityPrinter:117 - lesson9.model.Client{phone=380677882257, about=good client, name=Kateryna, id=7, email=kateryna21@mail.com}
2021-04-02=12:19:39 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=12:19:39 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=12:21:09 DEBUG ClientServiceImpl:34 - client. update {id = 7, email = kateryna2@mail.com}
2021-04-02=12:21:09 DEBUG ClientDaoImpl:40 - client. update {id = 7, email = kateryna2@mail.com, phone = 380677882257}
2021-04-02=12:21:09 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02=12:21:09 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:21:09 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:21:09 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:21:10 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.29.Final
2021-04-02=12:21:10 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-02=12:21:10 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02=12:21:10 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02=12:21:10 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02=12:21:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:21:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:21:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:21:11 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02=12:21:11 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02=12:21:11 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02=12:21:11 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02=12:21:12 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2cdd0d4b
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61d6015a
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@152aa092
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@49dc7102
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@49dc7102
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10959ece
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f095f8
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@747edf66
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@747edf66
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b48a640
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d5c822d
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4d5b6aac
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25084a1e
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@28f2a10f
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@7fee8714
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3f6b0be5
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@48f278eb
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e04fa0a
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@741a8937
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6fd83fc1
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@2ed2d9cb
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ee37e5a
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2ea41516
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a44431a
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c7f66c4
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@194bcebf
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17497425
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f0da945
2021-04-02=12:21:13 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4803b726
2021-04-02=12:21:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02=12:21:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02=12:21:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:21:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:21:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02=12:21:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02=12:21:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02=12:21:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:21:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02=12:21:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02=12:21:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02=12:21:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02=12:21:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:21:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02=12:21:13 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02=12:21:13 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02=12:21:13 INFO  pooling:121 - HHH10001001: Connection properties: {user=postgres, password=postgres}
2021-04-02=12:21:13 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02=12:21:13 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02=12:21:13 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 1 (min=1)
2021-04-02=12:21:16 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-02=12:21:16 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-02=12:21:16 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-02=12:21:16 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02=12:21:16 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-02=12:21:16 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-02=12:21:16 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=12:21:16 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=12:21:16 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:21:16 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6492fab5]
2021-04-02=12:21:16 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Client
2021-04-02=12:21:16 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:21:16 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-02=12:21:16 DEBUG EntityBinder:873 - Bind entity lesson9.model.Client on table clients
2021-04-02=12:21:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:21:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:21:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:21:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:21:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:id]
2021-04-02=12:21:16 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:21:16 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:21:16 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:21:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-02=12:21:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-02=12:21:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:about]
2021-04-02=12:21:16 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-02=12:21:16 DEBUG PropertyBinder:266 - Building property about
2021-04-02=12:21:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-02=12:21:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-02=12:21:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:email]
2021-04-02=12:21:16 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-02=12:21:16 DEBUG PropertyBinder:266 - Building property email
2021-04-02=12:21:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02=12:21:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=12:21:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:name]
2021-04-02=12:21:16 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=12:21:16 DEBUG PropertyBinder:266 - Building property name
2021-04-02=12:21:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-02=12:21:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-02=12:21:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:phone]
2021-04-02=12:21:16 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-02=12:21:16 DEBUG PropertyBinder:266 - Building property phone
2021-04-02=12:21:16 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Account
2021-04-02=12:21:16 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:21:16 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-02=12:21:16 DEBUG EntityBinder:873 - Bind entity lesson9.model.Account on table accounts
2021-04-02=12:21:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:21:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:21:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:21:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:21:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:id]
2021-04-02=12:21:16 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:21:16 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:21:16 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:21:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-02=12:21:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-04-02=12:21:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:clientId]
2021-04-02=12:21:16 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-04-02=12:21:16 DEBUG PropertyBinder:266 - Building property clientId
2021-04-02=12:21:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02=12:21:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02=12:21:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:number]
2021-04-02=12:21:16 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02=12:21:16 DEBUG PropertyBinder:266 - Building property number
2021-04-02=12:21:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-02=12:21:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-02=12:21:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:value]
2021-04-02=12:21:16 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-02=12:21:16 DEBUG PropertyBinder:266 - Building property value
2021-04-02=12:21:16 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Status
2021-04-02=12:21:16 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:21:16 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-02=12:21:16 DEBUG EntityBinder:873 - Bind entity lesson9.model.Status on table statuses
2021-04-02=12:21:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:21:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:21:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:21:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:21:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:id]
2021-04-02=12:21:17 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:21:17 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:21:17 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:21:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-02=12:21:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02=12:21:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:alias]
2021-04-02=12:21:17 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-02=12:21:17 DEBUG PropertyBinder:266 - Building property alias
2021-04-02=12:21:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-02=12:21:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-02=12:21:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:description]
2021-04-02=12:21:17 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-02=12:21:17 DEBUG PropertyBinder:266 - Building property description
2021-04-02=12:21:17 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:21:17 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-02=12:21:17 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-02=12:21:17 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02=12:21:17 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-02=12:21:17 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:21:17 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-04-02=12:21:17 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-02=12:21:17 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-02=12:21:17 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:21:17 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-02=12:21:17 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-02=12:21:17 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-02=12:21:17 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-02=12:21:17 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-02=12:21:17 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-02=12:21:17 DEBUG Settings:68 - SessionFactory name : null
2021-04-02=12:21:17 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-02=12:21:17 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-02=12:21:17 DEBUG Settings:72 - Statistics: disabled
2021-04-02=12:21:17 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-02=12:21:17 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-02=12:21:17 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-02=12:21:17 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-02=12:21:17 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-02=12:21:17 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-02=12:21:17 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-02=12:21:17 DEBUG Settings:82 - Default null ordering: NONE
2021-04-02=12:21:17 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-02=12:21:17 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-02=12:21:17 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-02=12:21:17 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-02=12:21:17 DEBUG Settings:90 - Query language substitutions: {}
2021-04-02=12:21:17 DEBUG Settings:91 - Named query checking : enabled
2021-04-02=12:21:17 DEBUG Settings:93 - Second-level cache: disabled
2021-04-02=12:21:17 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-02=12:21:17 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-02=12:21:17 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-02=12:21:17 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-02=12:21:17 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-02=12:21:17 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-02=12:21:17 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-02=12:21:17 DEBUG Settings:102 - JDBC batch size: 15
2021-04-02=12:21:17 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-02=12:21:17 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-02=12:21:17 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-02=12:21:17 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-02=12:21:17 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-02=12:21:17 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-02=12:21:17 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-02=12:21:17 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-02=12:21:17 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-02=12:21:17 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-02=12:21:17 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-02=12:21:17 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-02=12:21:17 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\target\classes;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.annotation.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jstl.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.jms.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.resource.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.ejb.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\pc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\pc\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\pc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\pc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pc\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\pc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\pc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\pc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\pc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\pc\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\pc\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\pc\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\pc\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Downloads\JetBrains IntelliJ IDEA Ultimate 2020.1 x64\IDEE\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=EET, user.country.format=UA, os.name=Windows 10, java.vm.specification.version=1.8, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, sun.java.command=lesson9.Main, sun.cpu.endian=little, user.home=C:\Users\pc, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=pc, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=D:\Kate\LessonsHillel\02(1)\Hillel-Elementary, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1601e47, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Common Files\Autodesk Shared\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;D:\Program files\Git\cmd;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Java\jdk1.8.0_271\bin;D:\Program Files\PostgreSQL\13\bin;C:\Users\pc\AppData\Local\Microsoft\WindowsApps;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-04-02=12:21:17 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-02=12:21:17 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-02=12:21:17 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3bd7f8dc]
2021-04-02=12:21:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:21:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:21:18 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:21:18 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:21:18 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:21:18 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Client
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:3923 -  Version select: select id from clients where id =?
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=12:21:18 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b9fc7d]
2021-04-02=12:21:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=12:21:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=12:21:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=12:21:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=12:21:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:21:18 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:21:18 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Client)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Client, querySpaceUid=<gen:0>, path=lesson9.model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-02=12:21:18 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Status
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:3923 -  Version select: select id from statuses where id =?
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-02=12:21:18 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1917d90f]
2021-04-02=12:21:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=12:21:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=12:21:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:21:18 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:21:18 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Status)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Status, querySpaceUid=<gen:0>, path=lesson9.model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-02=12:21:18 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Account
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:3923 -  Version select: select id from accounts where id =?
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-02=12:21:18 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-02=12:21:18 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aac85fa]
2021-04-02=12:21:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-04-02=12:21:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=12:21:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-02=12:21:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:21:18 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:21:18 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Account)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Account, querySpaceUid=<gen:0>, path=lesson9.model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-02=12:21:18 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-02=12:21:18 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1bbae752] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-02=12:21:18 DEBUG Table:520 - No alter strings for table : accounts
2021-04-02=12:21:18 DEBUG Table:520 - No alter strings for table : clients
2021-04-02=12:21:18 DEBUG Table:520 - No alter strings for table : statuses
2021-04-02=12:21:18 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-02=12:21:18 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-02=12:21:18 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=12:21:18 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=12:21:18 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-02=12:21:18 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-02=12:21:18 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bcec6a6
2021-04-02=12:21:18 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 2f3457df-7207-409f-87a2-9928319a3870 (<unnamed>)
2021-04-02=12:21:18 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-02=12:21:19 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-02=12:21:19 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-02=12:21:19 DEBUG TransactionImpl:81 - begin
2021-04-02=12:21:19 DEBUG TransactionImpl:98 - committing
2021-04-02=12:21:19 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-04-02=12:21:19 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-04-02=12:21:19 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2021-04-02=12:21:19 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-04-02=12:21:19 DEBUG EntityPrinter:110 - Listing entities:
2021-04-02=12:21:19 DEBUG EntityPrinter:117 - lesson9.model.Client{phone=380677882257, about=good client, name=Kateryna, id=7, email=kateryna2@mail.com}
2021-04-02=12:21:19 DEBUG SQL:144 - update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-02=12:21:19 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=12:21:19 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=12:23:45 DEBUG ClientServiceImpl:49 - client. getByPhone {phone = 380677882257}
2021-04-02=12:23:46 DEBUG ClientDaoImpl:62 - client. getByPhone {phone = 380677882257}
2021-04-02=12:23:46 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02=12:23:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:23:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:23:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:23:46 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.29.Final
2021-04-02=12:23:46 DEBUG Environment:199 - HHH000206: hibernate.properties not found


2021-04-02=12:23:47 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02=12:23:47 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02=12:23:47 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02=12:23:48 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:23:48 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:23:48 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:23:48 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02=12:23:48 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02=12:23:48 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02=12:23:48 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02=12:23:48 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2cdd0d4b
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61d6015a
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@152aa092
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@49dc7102
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@49dc7102
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10959ece
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f095f8
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@747edf66
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@747edf66
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b48a640
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d5c822d
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4d5b6aac
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25084a1e
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@28f2a10f
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@7fee8714
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3f6b0be5
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@48f278eb
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e04fa0a
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@741a8937
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6fd83fc1
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@2ed2d9cb
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ee37e5a
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2ea41516
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a44431a
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c7f66c4
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@194bcebf
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17497425
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f0da945
2021-04-02=12:23:50 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4803b726
2021-04-02=12:23:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02=12:23:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02=12:23:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:23:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:23:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02=12:23:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02=12:23:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02=12:23:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:23:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02=12:23:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02=12:23:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02=12:23:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02=12:23:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:23:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02=12:23:50 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02=12:23:50 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02=12:23:50 INFO  pooling:121 - HHH10001001: Connection properties: {user=postgres, password=postgres}
2021-04-02=12:23:50 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02=12:23:50 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02=12:23:50 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 1 (min=1)
2021-04-02=12:23:52 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-02=12:23:52 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-02=12:23:52 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-02=12:23:52 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02=12:23:52 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-02=12:23:53 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-02=12:23:53 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=12:23:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=12:23:53 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:23:53 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6492fab5]
2021-04-02=12:23:53 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Client
2021-04-02=12:23:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:23:53 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-02=12:23:53 DEBUG EntityBinder:873 - Bind entity lesson9.model.Client on table clients
2021-04-02=12:23:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:23:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:23:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:23:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:23:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:id]
2021-04-02=12:23:53 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:23:53 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:23:53 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:23:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-02=12:23:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-02=12:23:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:about]
2021-04-02=12:23:53 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-02=12:23:53 DEBUG PropertyBinder:266 - Building property about
2021-04-02=12:23:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-02=12:23:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-02=12:23:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:email]
2021-04-02=12:23:53 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-02=12:23:53 DEBUG PropertyBinder:266 - Building property email
2021-04-02=12:23:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02=12:23:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=12:23:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:name]
2021-04-02=12:23:53 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=12:23:53 DEBUG PropertyBinder:266 - Building property name
2021-04-02=12:23:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-02=12:23:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-02=12:23:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:phone]
2021-04-02=12:23:53 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-02=12:23:53 DEBUG PropertyBinder:266 - Building property phone
2021-04-02=12:23:53 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Account
2021-04-02=12:23:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:23:53 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-02=12:23:53 DEBUG EntityBinder:873 - Bind entity lesson9.model.Account on table accounts
2021-04-02=12:23:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:23:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:23:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:23:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:23:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:id]
2021-04-02=12:23:53 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:23:53 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:23:53 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:23:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-02=12:23:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-04-02=12:23:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:clientId]
2021-04-02=12:23:53 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-04-02=12:23:53 DEBUG PropertyBinder:266 - Building property clientId
2021-04-02=12:23:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02=12:23:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02=12:23:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:number]
2021-04-02=12:23:53 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02=12:23:53 DEBUG PropertyBinder:266 - Building property number
2021-04-02=12:23:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-02=12:23:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-02=12:23:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:value]
2021-04-02=12:23:53 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-02=12:23:53 DEBUG PropertyBinder:266 - Building property value
2021-04-02=12:23:53 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Status
2021-04-02=12:23:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:23:53 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-02=12:23:53 DEBUG EntityBinder:873 - Bind entity lesson9.model.Status on table statuses
2021-04-02=12:23:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:23:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:23:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:23:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:23:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:id]
2021-04-02=12:23:53 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:23:53 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:23:53 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:23:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-02=12:23:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02=12:23:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:alias]
2021-04-02=12:23:53 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-02=12:23:53 DEBUG PropertyBinder:266 - Building property alias
2021-04-02=12:23:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-02=12:23:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-02=12:23:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:description]
2021-04-02=12:23:53 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-02=12:23:53 DEBUG PropertyBinder:266 - Building property description
2021-04-02=12:23:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:23:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-02=12:23:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-02=12:23:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02=12:23:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-02=12:23:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:23:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-04-02=12:23:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-02=12:23:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-02=12:23:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:23:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-02=12:23:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-02=12:23:53 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-02=12:23:53 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-02=12:23:53 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-02=12:23:53 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-02=12:23:53 DEBUG Settings:68 - SessionFactory name : null
2021-04-02=12:23:53 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-02=12:23:53 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-02=12:23:53 DEBUG Settings:72 - Statistics: disabled
2021-04-02=12:23:53 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-02=12:23:53 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-02=12:23:53 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-02=12:23:53 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-02=12:23:53 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-02=12:23:53 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-02=12:23:53 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-02=12:23:53 DEBUG Settings:82 - Default null ordering: NONE
2021-04-02=12:23:53 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-02=12:23:53 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-02=12:23:53 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-02=12:23:53 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-02=12:23:53 DEBUG Settings:90 - Query language substitutions: {}
2021-04-02=12:23:53 DEBUG Settings:91 - Named query checking : enabled
2021-04-02=12:23:53 DEBUG Settings:93 - Second-level cache: disabled
2021-04-02=12:23:53 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-02=12:23:53 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-02=12:23:53 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-02=12:23:53 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-02=12:23:53 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-02=12:23:53 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-02=12:23:53 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-02=12:23:53 DEBUG Settings:102 - JDBC batch size: 15
2021-04-02=12:23:53 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-02=12:23:53 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-02=12:23:53 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-02=12:23:53 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-02=12:23:53 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-02=12:23:53 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-02=12:23:53 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-02=12:23:53 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-02=12:23:53 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-02=12:23:53 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-02=12:23:53 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-02=12:23:54 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-02=12:23:54 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\target\classes;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.annotation.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jstl.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.jms.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.resource.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.ejb.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\pc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\pc\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\pc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\pc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pc\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\pc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\pc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\pc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\pc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\pc\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\pc\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\pc\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\pc\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Downloads\JetBrains IntelliJ IDEA Ultimate 2020.1 x64\IDEE\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=EET, user.country.format=UA, os.name=Windows 10, java.vm.specification.version=1.8, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, sun.java.command=lesson9.Main, sun.cpu.endian=little, user.home=C:\Users\pc, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=pc, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=D:\Kate\LessonsHillel\02(1)\Hillel-Elementary, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1601e47, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Common Files\Autodesk Shared\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;D:\Program files\Git\cmd;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Java\jdk1.8.0_271\bin;D:\Program Files\PostgreSQL\13\bin;C:\Users\pc\AppData\Local\Microsoft\WindowsApps;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-04-02=12:23:54 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-02=12:23:54 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-02=12:23:54 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3bd7f8dc]
2021-04-02=12:23:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:23:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:23:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:23:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:23:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:23:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Client
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:3923 -  Version select: select id from clients where id =?
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=12:23:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b9fc7d]
2021-04-02=12:23:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=12:23:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=12:23:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=12:23:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=12:23:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:23:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:23:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Client)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Client, querySpaceUid=<gen:0>, path=lesson9.model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-02=12:23:55 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Status
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:3923 -  Version select: select id from statuses where id =?
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-02=12:23:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1917d90f]
2021-04-02=12:23:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=12:23:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=12:23:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:23:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:23:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Status)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Status, querySpaceUid=<gen:0>, path=lesson9.model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-02=12:23:55 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Account
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:3923 -  Version select: select id from accounts where id =?
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-02=12:23:55 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-02=12:23:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aac85fa]
2021-04-02=12:23:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-04-02=12:23:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=12:23:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-02=12:23:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:23:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:23:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Account)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Account, querySpaceUid=<gen:0>, path=lesson9.model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-02=12:23:55 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-02=12:23:55 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1bbae752] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-02=12:23:55 DEBUG Table:520 - No alter strings for table : accounts
2021-04-02=12:23:55 DEBUG Table:520 - No alter strings for table : clients
2021-04-02=12:23:55 DEBUG Table:520 - No alter strings for table : statuses
2021-04-02=12:23:55 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-02=12:23:55 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-02=12:23:55 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=12:23:55 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=12:23:55 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-02=12:23:55 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-02=12:23:55 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bcec6a6
2021-04-02=12:23:55 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: bb9f91c1-5230-456c-aca6-cbf62d09bed7 (<unnamed>)
2021-04-02=12:23:55 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-02=12:23:55 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-02=12:23:55 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3721177d
2021-04-02=12:23:55 DEBUG QueryTranslatorImpl:292 - parse() - HQL: FROM lesson9.model.Client WHERE phone = :phone
2021-04-02=12:23:55 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-04-02=12:23:55 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'lesson9'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Client'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'phone'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'phone'

2021-04-02=12:23:56 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-04-02=12:23:56 DEBUG FromElement:153 - FromClause{level=1} : lesson9.model.Client (<no alias>) -> client0_
2021-04-02=12:23:56 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-04-02=12:23:56 DEBUG DotNode:696 - getDataType() : phone -> org.hibernate.type.LongType@366647c2
2021-04-02=12:23:56 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.phone -> client0_.phone
2021-04-02=12:23:56 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-04-02=12:23:56 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( FromClause{level=1} clients client0_ ) ( WHERE ( = ( client0_.phone {synthetic-alias} phone ) ? ) ) )
2021-04-02=12:23:56 DEBUG HqlSqlWalker:1036 - Derived SELECT clause created.
2021-04-02=12:23:56 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Client): [clients]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(lesson9.model.Client)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(lesson9.model.Client)
          | path: {synthetic-alias}.phone
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(lesson9.model.Client)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: phone
          \-ParameterNode

2021-04-02=12:23:56 DEBUG JoinProcessor:304 - Using FROM fragment [clients client0_]
2021-04-02=12:23:56 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-04-02=12:23:56 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (clients)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'client0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=lesson9.model.Client}}}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.about as about2_1_, client0_.email as email3_1_, client0_.name as name4_1_, client0_.phone as phone5_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'clients client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=lesson9.model.Client}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.phone' {propertyName=phone,dereferenceType=PRIMITIVE,getPropertyPath=phone,path={synthetic-alias}.phone,tableAlias=client0_,className=lesson9.model.Client,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'phone' {originalText=phone}
          \-[NAMED_PARAM] ParameterNode: '?' {name=phone, expectedType=org.hibernate.type.LongType@366647c2}

2021-04-02=12:23:56 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-04-02=12:23:56 DEBUG QueryTranslatorImpl:258 - HQL: FROM lesson9.model.Client WHERE phone = :phone
2021-04-02=12:23:56 DEBUG QueryTranslatorImpl:259 - SQL: select client0_.id as id1_1_, client0_.about as about2_1_, client0_.email as email3_1_, client0_.name as name4_1_, client0_.phone as phone5_1_ from clients client0_ where client0_.phone=?
2021-04-02=12:23:56 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-04-02=12:23:56 DEBUG SQL:144 - select client0_.id as id1_1_, client0_.about as about2_1_, client0_.email as email3_1_, client0_.name as name4_1_, client0_.phone as phone5_1_ from clients client0_ where client0_.phone=?
2021-04-02=12:23:56 DEBUG Loader:384 - Result set row: 0
2021-04-02=12:23:56 DEBUG Loader:1593 - Result row: EntityKey[lesson9.model.Client#7]
2021-04-02=12:23:56 DEBUG TwoPhaseLoad:198 - Resolving attributes for [lesson9.model.Client#7]
2021-04-02=12:23:56 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = good client
2021-04-02=12:23:56 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-02=12:23:56 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = kateryna2@mail.com
2021-04-02=12:23:56 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-02=12:23:56 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Kateryna
2021-04-02=12:23:56 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-02=12:23:56 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380677882257
2021-04-02=12:23:56 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-02=12:23:56 DEBUG TwoPhaseLoad:381 - Done materializing entity [lesson9.model.Client#7]
2021-04-02=12:23:56 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-04-02=12:26:34 DEBUG ClientServiceImpl:49 - client. getByPhone {phone = 380677882257}
2021-04-02=12:26:34 DEBUG ClientDaoImpl:62 - client. getByPhone {phone = 380677882257}
2021-04-02=12:26:34 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02=12:26:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:26:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:26:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:26:35 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.29.Final
2021-04-02=12:26:35 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-02=12:26:36 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02=12:26:36 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02=12:26:36 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02=12:26:37 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:26:37 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:26:37 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:26:37 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02=12:26:37 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02=12:26:37 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02=12:26:37 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02=12:26:37 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f27a732
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2cdd0d4b
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61d6015a
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@152aa092
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e268090
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5939a379
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@40cb8df7
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3315d2d7
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@366647c2
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3972a855
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@770d3326
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@140c9f39
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3246fb96
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@49dc7102
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@49dc7102
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10959ece
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f095f8
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@747edf66
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@747edf66
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74455848
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51dcb805
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@b62d79
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4e096385
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a2431d0
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@702b8b12
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15bbf42f
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3514a4c0
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15aab8c6
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6babf3bf
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3fb1549b
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b48a640
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4bb33f74
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3d5c822d
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4d5b6aac
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@483f6d77
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32b260fa
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@78123e82
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71238fc2
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25084a1e
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@383bfa16
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d0f2471
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@28f2a10f
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@7fee8714
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2fb3536e
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ef9844
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3f6b0be5
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@48f278eb
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@614ca7df
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e04fa0a
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4fb3ee4e
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ba3f27a
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@741a8937
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6fd83fc1
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@2ed2d9cb
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@434a63ab
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ee37e5a
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2ea41516
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a44431a
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c7f66c4
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@194bcebf
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17497425
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f0da945
2021-04-02=12:26:38 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4803b726
2021-04-02=12:26:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02=12:26:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02=12:26:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:26:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:26:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02=12:26:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02=12:26:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02=12:26:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:26:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02=12:26:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02=12:26:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02=12:26:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02=12:26:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:26:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02=12:26:38 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02=12:26:38 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02=12:26:38 INFO  pooling:121 - HHH10001001: Connection properties: {user=postgres, password=postgres}
2021-04-02=12:26:38 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02=12:26:38 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02=12:26:38 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 1 (min=1)
2021-04-02=12:26:40 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-02=12:26:40 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-02=12:26:40 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-02=12:26:40 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02=12:26:40 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-02=12:26:41 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-02=12:26:41 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=12:26:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@67c2e933
2021-04-02=12:26:41 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5fbdfdcf
2021-04-02=12:26:41 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6492fab5]
2021-04-02=12:26:41 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Client
2021-04-02=12:26:41 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:26:41 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-02=12:26:41 DEBUG EntityBinder:873 - Bind entity lesson9.model.Client on table clients
2021-04-02=12:26:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:26:41 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:26:41 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:26:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:26:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:id]
2021-04-02=12:26:41 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:26:41 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:26:41 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:26:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-02=12:26:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-02=12:26:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:about]
2021-04-02=12:26:41 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-02=12:26:41 DEBUG PropertyBinder:266 - Building property about
2021-04-02=12:26:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-02=12:26:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-02=12:26:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:email]
2021-04-02=12:26:41 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-02=12:26:41 DEBUG PropertyBinder:266 - Building property email
2021-04-02=12:26:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02=12:26:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=12:26:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:name]
2021-04-02=12:26:41 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=12:26:41 DEBUG PropertyBinder:266 - Building property name
2021-04-02=12:26:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-02=12:26:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-02=12:26:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:phone]
2021-04-02=12:26:41 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-02=12:26:41 DEBUG PropertyBinder:266 - Building property phone
2021-04-02=12:26:41 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Account
2021-04-02=12:26:41 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:26:41 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-02=12:26:41 DEBUG EntityBinder:873 - Bind entity lesson9.model.Account on table accounts
2021-04-02=12:26:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:26:41 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:26:41 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:26:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:26:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:id]
2021-04-02=12:26:41 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:26:41 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:26:41 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:26:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-02=12:26:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-04-02=12:26:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:clientId]
2021-04-02=12:26:41 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-04-02=12:26:41 DEBUG PropertyBinder:266 - Building property clientId
2021-04-02=12:26:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02=12:26:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02=12:26:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:number]
2021-04-02=12:26:41 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02=12:26:41 DEBUG PropertyBinder:266 - Building property number
2021-04-02=12:26:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-02=12:26:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-02=12:26:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:value]
2021-04-02=12:26:41 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-02=12:26:41 DEBUG PropertyBinder:266 - Building property value
2021-04-02=12:26:41 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Status
2021-04-02=12:26:41 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:26:41 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-02=12:26:41 DEBUG EntityBinder:873 - Bind entity lesson9.model.Status on table statuses
2021-04-02=12:26:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:26:41 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:26:41 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:26:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:26:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:id]
2021-04-02=12:26:41 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:26:41 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:26:41 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:26:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-02=12:26:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02=12:26:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:alias]
2021-04-02=12:26:41 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-02=12:26:41 DEBUG PropertyBinder:266 - Building property alias
2021-04-02=12:26:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-02=12:26:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-02=12:26:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:description]
2021-04-02=12:26:41 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-02=12:26:41 DEBUG PropertyBinder:266 - Building property description
2021-04-02=12:26:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:26:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-02=12:26:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-02=12:26:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02=12:26:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-02=12:26:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:26:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-04-02=12:26:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-02=12:26:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-02=12:26:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:26:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-02=12:26:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-02=12:26:41 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-02=12:26:41 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-02=12:26:41 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-02=12:26:41 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-02=12:26:41 DEBUG Settings:68 - SessionFactory name : null
2021-04-02=12:26:41 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-02=12:26:41 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-02=12:26:41 DEBUG Settings:72 - Statistics: disabled
2021-04-02=12:26:41 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-02=12:26:41 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-02=12:26:41 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-02=12:26:41 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-02=12:26:41 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-02=12:26:41 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-02=12:26:41 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-02=12:26:41 DEBUG Settings:82 - Default null ordering: NONE
2021-04-02=12:26:41 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-02=12:26:41 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-02=12:26:41 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-02=12:26:41 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-02=12:26:41 DEBUG Settings:90 - Query language substitutions: {}
2021-04-02=12:26:41 DEBUG Settings:91 - Named query checking : enabled
2021-04-02=12:26:41 DEBUG Settings:93 - Second-level cache: disabled
2021-04-02=12:26:41 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-02=12:26:41 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-02=12:26:41 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-02=12:26:41 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-02=12:26:41 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-02=12:26:41 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-02=12:26:41 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-02=12:26:41 DEBUG Settings:102 - JDBC batch size: 15
2021-04-02=12:26:41 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-02=12:26:41 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-02=12:26:41 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-02=12:26:41 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-02=12:26:41 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-02=12:26:41 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-02=12:26:41 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-02=12:26:41 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-02=12:26:41 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-02=12:26:41 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-02=12:26:41 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-02=12:26:41 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-02=12:26:41 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\target\classes;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.annotation.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jstl.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.jms.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.resource.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.ejb.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\pc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\pc\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\pc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\pc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pc\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\pc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\pc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\pc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\pc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\pc\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\pc\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\pc\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\pc\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Downloads\JetBrains IntelliJ IDEA Ultimate 2020.1 x64\IDEE\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=EET, user.country.format=UA, os.name=Windows 10, java.vm.specification.version=1.8, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, sun.java.command=lesson9.Main, sun.cpu.endian=little, user.home=C:\Users\pc, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=pc, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=D:\Kate\LessonsHillel\02(1)\Hillel-Elementary, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1601e47, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Common Files\Autodesk Shared\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;D:\Program files\Git\cmd;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Java\jdk1.8.0_271\bin;D:\Program Files\PostgreSQL\13\bin;C:\Users\pc\AppData\Local\Microsoft\WindowsApps;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-04-02=12:26:42 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-02=12:26:42 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-02=12:26:42 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@72c28d64] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3bd7f8dc]
2021-04-02=12:26:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:26:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:26:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:26:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:26:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:26:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:26:42 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Client
2021-04-02=12:26:42 DEBUG AbstractEntityPersister:3923 -  Version select: select id from clients where id =?
2021-04-02=12:26:42 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-02=12:26:42 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-02=12:26:42 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-02=12:26:42 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-02=12:26:42 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=12:26:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b9fc7d]
2021-04-02=12:26:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=12:26:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=12:26:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=12:26:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=12:26:43 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:26:43 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:26:43 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Client)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Client, querySpaceUid=<gen:0>, path=lesson9.model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-02=12:26:43 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02=12:26:43 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Status
2021-04-02=12:26:43 DEBUG AbstractEntityPersister:3923 -  Version select: select id from statuses where id =?
2021-04-02=12:26:43 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-02=12:26:43 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-02=12:26:43 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-02=12:26:43 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-02=12:26:43 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-02=12:26:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1917d90f]
2021-04-02=12:26:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=12:26:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=12:26:43 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:26:43 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:26:43 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Status)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Status, querySpaceUid=<gen:0>, path=lesson9.model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-02=12:26:43 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-02=12:26:43 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Account
2021-04-02=12:26:43 DEBUG AbstractEntityPersister:3923 -  Version select: select id from accounts where id =?
2021-04-02=12:26:43 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-02=12:26:43 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-02=12:26:43 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-02=12:26:43 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-02=12:26:43 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-02=12:26:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aac85fa]
2021-04-02=12:26:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-04-02=12:26:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=12:26:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-02=12:26:43 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:26:43 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:26:43 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Account)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Account, querySpaceUid=<gen:0>, path=lesson9.model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-02=12:26:43 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-02=12:26:43 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1bbae752] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-02=12:26:43 DEBUG Table:520 - No alter strings for table : accounts
2021-04-02=12:26:43 DEBUG Table:520 - No alter strings for table : clients
2021-04-02=12:26:43 DEBUG Table:520 - No alter strings for table : statuses
2021-04-02=12:26:43 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-02=12:26:43 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-02=12:26:43 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=12:26:43 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=12:26:43 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-02=12:26:43 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-02=12:26:43 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bcec6a6
2021-04-02=12:26:43 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 40b5ac7c-27d6-4400-9fc2-33ed7c161343 (<unnamed>)
2021-04-02=12:26:43 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-02=12:26:43 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-02=12:26:43 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3721177d
2021-04-02=12:26:43 DEBUG QueryTranslatorImpl:292 - parse() - HQL: FROM lesson9.model.Client WHERE phone = :phone
2021-04-02=12:26:43 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-04-02=12:26:43 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'lesson9'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Client'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'phone'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'phone'

2021-04-02=12:26:43 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-04-02=12:26:43 DEBUG FromElement:153 - FromClause{level=1} : lesson9.model.Client (<no alias>) -> client0_
2021-04-02=12:26:43 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-04-02=12:26:43 DEBUG DotNode:696 - getDataType() : phone -> org.hibernate.type.LongType@366647c2
2021-04-02=12:26:43 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.phone -> client0_.phone
2021-04-02=12:26:43 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-04-02=12:26:43 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( FromClause{level=1} clients client0_ ) ( WHERE ( = ( client0_.phone {synthetic-alias} phone ) ? ) ) )
2021-04-02=12:26:43 DEBUG HqlSqlWalker:1036 - Derived SELECT clause created.
2021-04-02=12:26:43 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Client): [clients]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(lesson9.model.Client)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(lesson9.model.Client)
          | path: {synthetic-alias}.phone
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(lesson9.model.Client)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: phone
          \-ParameterNode

2021-04-02=12:26:43 DEBUG JoinProcessor:304 - Using FROM fragment [clients client0_]
2021-04-02=12:26:43 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-04-02=12:26:43 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (clients)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'client0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=lesson9.model.Client}}}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.about as about2_1_, client0_.email as email3_1_, client0_.name as name4_1_, client0_.phone as phone5_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'clients client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=client0_,origin=null,columns={,className=lesson9.model.Client}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.phone' {propertyName=phone,dereferenceType=PRIMITIVE,getPropertyPath=phone,path={synthetic-alias}.phone,tableAlias=client0_,className=lesson9.model.Client,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'phone' {originalText=phone}
          \-[NAMED_PARAM] ParameterNode: '?' {name=phone, expectedType=org.hibernate.type.LongType@366647c2}

2021-04-02=12:26:43 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-04-02=12:26:44 DEBUG QueryTranslatorImpl:258 - HQL: FROM lesson9.model.Client WHERE phone = :phone
2021-04-02=12:26:44 DEBUG QueryTranslatorImpl:259 - SQL: select client0_.id as id1_1_, client0_.about as about2_1_, client0_.email as email3_1_, client0_.name as name4_1_, client0_.phone as phone5_1_ from clients client0_ where client0_.phone=?
2021-04-02=12:26:44 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-04-02=12:26:44 DEBUG SQL:144 - select client0_.id as id1_1_, client0_.about as about2_1_, client0_.email as email3_1_, client0_.name as name4_1_, client0_.phone as phone5_1_ from clients client0_ where client0_.phone=?
2021-04-02=12:26:44 DEBUG Loader:384 - Result set row: 0
2021-04-02=12:26:44 DEBUG Loader:1593 - Result row: EntityKey[lesson9.model.Client#7]
2021-04-02=12:26:44 DEBUG TwoPhaseLoad:198 - Resolving attributes for [lesson9.model.Client#7]
2021-04-02=12:26:44 DEBUG TwoPhaseLoad:211 - Processing attribute `about` : value = good client
2021-04-02=12:26:44 DEBUG TwoPhaseLoad:242 - Attribute (`about`)  - enhanced for lazy-loading? - false
2021-04-02=12:26:44 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = kateryna2@mail.com
2021-04-02=12:26:44 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-04-02=12:26:44 DEBUG TwoPhaseLoad:211 - Processing attribute `name` : value = Kateryna
2021-04-02=12:26:44 DEBUG TwoPhaseLoad:242 - Attribute (`name`)  - enhanced for lazy-loading? - false
2021-04-02=12:26:44 DEBUG TwoPhaseLoad:211 - Processing attribute `phone` : value = 380677882257
2021-04-02=12:26:44 DEBUG TwoPhaseLoad:242 - Attribute (`phone`)  - enhanced for lazy-loading? - false
2021-04-02=12:26:44 DEBUG TwoPhaseLoad:381 - Done materializing entity [lesson9.model.Client#7]
2021-04-02=12:26:44 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction



2021-04-02=12:31:02 DEBUG ClientServiceImpl:42 - client. getById {id = 4}
2021-04-02=12:31:02 DEBUG ClientDaoImpl:52 - client. getById {id = 4,}
2021-04-02=12:31:03 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02=12:31:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:31:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:31:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:31:03 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.29.Final
2021-04-02=12:31:03 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-02=12:31:04 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02=12:31:04 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02=12:31:04 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02=12:31:05 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:31:05 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:31:05 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:31:05 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02=12:31:05 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02=12:31:05 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02=12:31:05 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02=12:31:05 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@8317c52
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@8317c52
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8317c52
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6f27a732
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2cdd0d4b
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@61d6015a
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4ef37659
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4ef37659
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4ef37659
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@306cf3ea
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@306cf3ea
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@306cf3ea
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@52102734
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@52102734
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@52102734
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@2892dae4
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@2892dae4
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2892dae4
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@5fa07e12
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@5fa07e12
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5fa07e12
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1649b0e6
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1649b0e6
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1649b0e6
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@503d687a
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@503d687a
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@503d687a
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@51f116b8
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@51f116b8
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@26275bef
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@26275bef
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@61386958
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@61386958
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@49dc7102
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@10959ece
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@3e6ef8ad
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3e6ef8ad
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@62230c58
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@62230c58
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@41fecb8b
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@41fecb8b
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@cad498c
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@cad498c
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5ace1ed4
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5ace1ed4
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@693fe6c9
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@693fe6c9
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a4013
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a4013
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@49912c99
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@49912c99
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d29f28
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d29f28
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@793be5ca
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@793be5ca
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@4de4b452
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4de4b452
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7ea9e1e2
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7ea9e1e2
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7ea9e1e2
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3fb1549b
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@2053d869
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2053d869
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2053d869
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4bb33f74
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@73700b80
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@4a7f959b
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4a7f959b
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@63a12c68
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63a12c68
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6d4e5011
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6d4e5011
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@fba92d3
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fba92d3
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16a0ee18
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16a0ee18
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fbdfdcf
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@3bf9ce3e
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3bf9ce3e
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@3bf9ce3e
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53fdffa1
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53fdffa1
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53fdffa1
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@3232a28a
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@28f2a10f
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@56cdfb3b
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@56cdfb3b
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@56cdfb3b
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@35aea049
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@35aea049
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@35aea049
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@22ef9844
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@3f6b0be5
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@5acf93bb
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5acf93bb
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@614ca7df
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@58695725
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58695725
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@2c35e847
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2c35e847
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5ba3f27a
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@741a8937
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@e15b7e8
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@57cf54e1
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57cf54e1
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@434a63ab
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e0f5f7f
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2805d709
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ee37e5a
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ea41516
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3a44431a
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3c7f66c4
2021-04-02=12:31:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@194bcebf
2021-04-02=12:31:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02=12:31:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02=12:31:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:31:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:31:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02=12:31:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02=12:31:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02=12:31:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:31:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02=12:31:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02=12:31:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02=12:31:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02=12:31:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:31:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02=12:31:07 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02=12:31:07 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02=12:31:07 INFO  pooling:121 - HHH10001001: Connection properties: {user=postgres, password=postgres}
2021-04-02=12:31:07 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02=12:31:07 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02=12:31:07 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 1 (min=1)
2021-04-02=12:31:10 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-02=12:31:10 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-02=12:31:10 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-02=12:31:10 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02=12:31:10 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-02=12:31:10 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-02=12:31:10 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@61f05988
2021-04-02=12:31:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@61f05988
2021-04-02=12:31:10 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@16a0ee18
2021-04-02=12:31:10 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ebf0f36] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@18920cc]
2021-04-02=12:31:10 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Client
2021-04-02=12:31:10 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:31:10 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-02=12:31:10 DEBUG EntityBinder:873 - Bind entity lesson9.model.Client on table clients
2021-04-02=12:31:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:31:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:31:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:31:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:31:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:id]
2021-04-02=12:31:10 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:31:10 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:31:11 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:31:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-02=12:31:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-02=12:31:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:about]
2021-04-02=12:31:11 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-02=12:31:11 DEBUG PropertyBinder:266 - Building property about
2021-04-02=12:31:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-02=12:31:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-02=12:31:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:email]
2021-04-02=12:31:11 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-02=12:31:11 DEBUG PropertyBinder:266 - Building property email
2021-04-02=12:31:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02=12:31:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=12:31:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:name]
2021-04-02=12:31:11 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=12:31:11 DEBUG PropertyBinder:266 - Building property name
2021-04-02=12:31:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-02=12:31:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-02=12:31:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:phone]
2021-04-02=12:31:11 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-02=12:31:11 DEBUG PropertyBinder:266 - Building property phone
2021-04-02=12:31:11 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Account
2021-04-02=12:31:11 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:31:11 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-02=12:31:11 DEBUG EntityBinder:873 - Bind entity lesson9.model.Account on table accounts
2021-04-02=12:31:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:31:11 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:31:11 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:31:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:31:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:id]
2021-04-02=12:31:11 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:31:11 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:31:11 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:31:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-02=12:31:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-04-02=12:31:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:clientId]
2021-04-02=12:31:11 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-04-02=12:31:11 DEBUG PropertyBinder:266 - Building property clientId
2021-04-02=12:31:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02=12:31:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02=12:31:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:number]
2021-04-02=12:31:11 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02=12:31:11 DEBUG PropertyBinder:266 - Building property number
2021-04-02=12:31:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-02=12:31:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-02=12:31:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:value]
2021-04-02=12:31:11 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-02=12:31:11 DEBUG PropertyBinder:266 - Building property value
2021-04-02=12:31:11 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Status
2021-04-02=12:31:11 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:31:11 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-02=12:31:11 DEBUG EntityBinder:873 - Bind entity lesson9.model.Status on table statuses
2021-04-02=12:31:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:31:11 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:31:11 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:31:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:31:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:id]
2021-04-02=12:31:11 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:31:11 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:31:11 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:31:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-02=12:31:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02=12:31:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:alias]
2021-04-02=12:31:11 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-02=12:31:11 DEBUG PropertyBinder:266 - Building property alias
2021-04-02=12:31:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-02=12:31:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-02=12:31:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:description]
2021-04-02=12:31:11 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-02=12:31:11 DEBUG PropertyBinder:266 - Building property description
2021-04-02=12:31:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:31:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-02=12:31:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-02=12:31:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-02=12:31:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-02=12:31:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:31:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for clientId
2021-04-02=12:31:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-02=12:31:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-02=12:31:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-02=12:31:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-02=12:31:11 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-02=12:31:11 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-02=12:31:11 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-02=12:31:11 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-02=12:31:11 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-02=12:31:11 DEBUG Settings:68 - SessionFactory name : null
2021-04-02=12:31:11 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-02=12:31:11 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-02=12:31:11 DEBUG Settings:72 - Statistics: disabled
2021-04-02=12:31:11 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-02=12:31:11 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-02=12:31:11 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-02=12:31:11 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-02=12:31:11 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-02=12:31:11 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-02=12:31:11 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-02=12:31:11 DEBUG Settings:82 - Default null ordering: NONE
2021-04-02=12:31:11 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-02=12:31:11 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-02=12:31:11 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-02=12:31:11 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-02=12:31:11 DEBUG Settings:90 - Query language substitutions: {}
2021-04-02=12:31:11 DEBUG Settings:91 - Named query checking : enabled
2021-04-02=12:31:11 DEBUG Settings:93 - Second-level cache: disabled
2021-04-02=12:31:11 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-02=12:31:11 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-02=12:31:11 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-02=12:31:11 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-02=12:31:11 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-02=12:31:11 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-02=12:31:11 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-02=12:31:11 DEBUG Settings:102 - JDBC batch size: 15
2021-04-02=12:31:11 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-02=12:31:11 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-02=12:31:11 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-02=12:31:11 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-02=12:31:11 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-02=12:31:11 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-02=12:31:11 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-02=12:31:11 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-02=12:31:11 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-02=12:31:11 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-02=12:31:11 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-02=12:31:11 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-02=12:31:11 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\target\classes;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.annotation.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.servlet.jsp.jstl.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.jms.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.resource.jar;D:\Kate\LessonsHillel\02(1)\Hillel-Elementary\lib\javax.ejb.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\5.4.29.Final\hibernate-core-5.4.29.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\pc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\pc\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\pc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\pc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pc\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\pc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\pc\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\pc\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\pc\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\pc\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\pc\.m2\repository\org\postgresql\postgresql\42.2.18\postgresql-42.2.18.jar;C:\Users\pc\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\pc\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\pc\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\Downloads\JetBrains IntelliJ IDEA Ultimate 2020.1 x64\IDEE\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=EET, user.country.format=UA, os.name=Windows 10, java.vm.specification.version=1.8, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, sun.java.command=lesson9.Main, sun.cpu.endian=little, user.home=C:\Users\pc, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=pc, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=D:\Kate\LessonsHillel\02(1)\Hillel-Elementary, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@299266e2, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Common Files\Autodesk Shared\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;D:\Program files\Git\cmd;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Java\jdk1.8.0_271\bin;D:\Program Files\PostgreSQL\13\bin;C:\Users\pc\AppData\Local\Microsoft\WindowsApps;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-04-02=12:31:11 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-02=12:31:11 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-02=12:31:11 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ebf0f36] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1b11ef33]
2021-04-02=12:31:11 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:31:11 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:31:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:31:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:31:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:31:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Client
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:3923 -  Version select: select id from clients where id =?
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.email as email3_1_, client_.name as name4_1_, client_.phone as phone5_1_ from clients client_ where client_.id=?
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, email, name, phone, id) values (?, ?, ?, ?, ?)
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, email=?, name=?, phone=? where id=?
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into clients (about, email, name, phone) values (?, ?, ?, ?)
2021-04-02=12:31:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8f8a80]
2021-04-02=12:31:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-02=12:31:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-02=12:31:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-02=12:31:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-02=12:31:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:31:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:31:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Client)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Client, querySpaceUid=<gen:0>, path=lesson9.model.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-02=12:31:12 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.email as email3_1_0_, client0_.name as name4_1_0_, client0_.phone as phone5_1_0_ from clients client0_ where client0_.id=?
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Status
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:3923 -  Version select: select id from statuses where id =?
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-02=12:31:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22fba58c]
2021-04-02=12:31:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-02=12:31:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-02=12:31:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:31:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:31:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Status)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Status, querySpaceUid=<gen:0>, path=lesson9.model.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-02=12:31:12 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: lesson9.model.Account
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:3923 -  Version select: select id from accounts where id =?
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-02=12:31:12 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-02=12:31:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fe88a09]
2021-04-02=12:31:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : clientId
2021-04-02=12:31:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-02=12:31:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-02=12:31:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-02=12:31:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-02=12:31:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=lesson9.model.Account)
    - Returns
       - EntityReturnImpl(entity=lesson9.model.Account, querySpaceUid=<gen:0>, path=lesson9.model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=lesson9.model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-02=12:31:12 DEBUG EntityLoader:129 - Static select for entity lesson9.model.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-02=12:31:12 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5f404594] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-04-02=12:31:12 DEBUG Table:520 - No alter strings for table : accounts
2021-04-02=12:31:12 DEBUG Table:520 - No alter strings for table : clients
2021-04-02=12:31:12 DEBUG Table:520 - No alter strings for table : statuses
2021-04-02=12:31:12 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-02=12:31:12 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-02=12:31:12 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=12:31:12 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-02=12:31:12 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-02=12:31:12 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-02=12:31:12 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6f667ad1
2021-04-02=12:31:12 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 31ef3bbf-a588-4418-a727-ae3bb86b49f3 (<unnamed>)
2021-04-02=12:31:12 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-02=12:31:13 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-02=12:31:13 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction



2021-04-02=12:40:14 DEBUG ClientServiceImpl:15 - client. save {id = 0, email = kateryna3@mail.com, phone = 380677883257}
2021-04-02=12:40:14 DEBUG ClientDaoImpl:16 - client. save {id = 0, email = kateryna3@mail.com, phone = 380677883257}
2021-04-02=12:40:14 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-02=12:40:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:40:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:40:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:40:14 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.29.Final
2021-04-02=12:40:14 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-02=12:40:15 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-02=12:40:15 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-02=12:40:15 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-02=12:40:16 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-02=12:40:16 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-02=12:40:16 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-02=12:40:16 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-02=12:40:16 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-02=12:40:16 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-02=12:40:16 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-02=12:40:16 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@8317c52
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@8317c52
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8317c52
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6f27a732
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2cdd0d4b
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@61d6015a
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4ef37659
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4ef37659
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4ef37659
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@306cf3ea
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@306cf3ea
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@306cf3ea
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@52102734
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@52102734
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@52102734
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@2892dae4
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@2892dae4
2021-04-02=12:40:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2892dae4
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@5fa07e12
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@5fa07e12
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5fa07e12
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1649b0e6
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1649b0e6
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1649b0e6
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@503d687a
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@503d687a
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@503d687a
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@51f116b8
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@51f116b8
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@26275bef
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@26275bef
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@61386958
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@61386958
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@49dc7102
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@10959ece
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@3e6ef8ad
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3e6ef8ad
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@62230c58
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@62230c58
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@41fecb8b
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@41fecb8b
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@cad498c
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@cad498c
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5ace1ed4
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5ace1ed4
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@693fe6c9
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@693fe6c9
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a4013
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a4013
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@49912c99
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@49912c99
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d29f28
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d29f28
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@793be5ca
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@793be5ca
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@4de4b452
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4de4b452
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7ea9e1e2
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7ea9e1e2
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7ea9e1e2
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3fb1549b
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@2053d869
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2053d869
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2053d869
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4bb33f74
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@73700b80
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@4a7f959b
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4a7f959b
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@63a12c68
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63a12c68
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6d4e5011
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6d4e5011
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@fba92d3
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fba92d3
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16a0ee18
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16a0ee18
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fbdfdcf
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@3bf9ce3e
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3bf9ce3e
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@3bf9ce3e
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53fdffa1
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53fdffa1
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53fdffa1
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@3232a28a
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@28f2a10f
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@56cdfb3b
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@56cdfb3b
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@56cdfb3b
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@35aea049
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@35aea049
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@35aea049
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@22ef9844
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@3f6b0be5
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@5acf93bb
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5acf93bb
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@614ca7df
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@58695725
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58695725
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@2c35e847
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2c35e847
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5ba3f27a
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@741a8937
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@e15b7e8
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@57cf54e1
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57cf54e1
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@434a63ab
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e0f5f7f
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2805d709
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ee37e5a
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ea41516
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3a44431a
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3c7f66c4
2021-04-02=12:40:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@194bcebf
2021-04-02=12:40:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-02=12:40:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-02=12:40:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:40:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-02=12:40:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-02=12:40:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-02=12:40:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-02=12:40:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:40:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-02=12:40:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-02=12:40:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-02=12:40:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-02=12:40:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-02=12:40:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-02=12:40:18 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-02=12:40:18 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-02=12:40:18 INFO  pooling:121 - HHH10001001: Connection properties: {user=postgres, password=postgres}
2021-04-02=12:40:18 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-02=12:40:18 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-02=12:40:18 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 1 (min=1)
2021-04-02=12:40:20 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-02=12:40:20 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-02=12:40:20 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-02=12:40:20 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-02=12:40:20 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-02=12:40:21 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-02=12:40:21 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@61f05988
2021-04-02=12:40:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@61f05988
2021-04-02=12:40:21 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@16a0ee18
2021-04-02=12:40:21 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ebf0f36] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@18920cc]
2021-04-02=12:40:21 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Client
2021-04-02=12:40:21 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:40:21 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-02=12:40:21 DEBUG EntityBinder:873 - Bind entity lesson9.model.Client on table clients
2021-04-02=12:40:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:40:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Client] is safe
2021-04-02=12:40:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Client
2021-04-02=12:40:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:40:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:id]
2021-04-02=12:40:21 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:40:21 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:40:21 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:40:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-02=12:40:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-02=12:40:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:about]
2021-04-02=12:40:21 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-02=12:40:21 DEBUG PropertyBinder:266 - Building property about
2021-04-02=12:40:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-02=12:40:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-02=12:40:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:email]
2021-04-02=12:40:21 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-02=12:40:21 DEBUG PropertyBinder:266 - Building property email
2021-04-02=12:40:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-02=12:40:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-02=12:40:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:name]
2021-04-02=12:40:21 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-02=12:40:21 DEBUG PropertyBinder:266 - Building property name
2021-04-02=12:40:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-02=12:40:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-02=12:40:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Client:phone]
2021-04-02=12:40:21 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-02=12:40:21 DEBUG PropertyBinder:266 - Building property phone
2021-04-02=12:40:21 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Account
2021-04-02=12:40:21 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:40:21 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-02=12:40:21 DEBUG EntityBinder:873 - Bind entity lesson9.model.Account on table accounts
2021-04-02=12:40:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:40:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Account] is safe
2021-04-02=12:40:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Account
2021-04-02=12:40:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:40:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:id]
2021-04-02=12:40:21 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:40:21 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:40:21 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:40:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-02=12:40:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property clientId with lazy=false
2021-04-02=12:40:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:clientId]
2021-04-02=12:40:21 DEBUG SimpleValueBinder:410 - building SimpleValue for clientId
2021-04-02=12:40:21 DEBUG PropertyBinder:266 - Building property clientId
2021-04-02=12:40:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-02=12:40:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-02=12:40:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:number]
2021-04-02=12:40:21 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-02=12:40:21 DEBUG PropertyBinder:266 - Building property number
2021-04-02=12:40:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-02=12:40:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-02=12:40:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Account:value]
2021-04-02=12:40:21 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-02=12:40:21 DEBUG PropertyBinder:266 - Building property value
2021-04-02=12:40:21 DEBUG AnnotationBinder:560 - Binding entity from annotated class: lesson9.model.Status
2021-04-02=12:40:21 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-02=12:40:21 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-02=12:40:21 DEBUG EntityBinder:873 - Bind entity lesson9.model.Status on table statuses
2021-04-02=12:40:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-02=12:40:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [lesson9.model.Status] is safe
2021-04-02=12:40:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : lesson9.model.Status
2021-04-02=12:40:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-02=12:40:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:id]
2021-04-02=12:40:21 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-02=12:40:21 DEBUG PropertyBinder:266 - Building property id
2021-04-02=12:40:21 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-02=12:40:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=false}
2021-04-02=12:40:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-02=12:40:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [lesson9.model.Status:alias]
